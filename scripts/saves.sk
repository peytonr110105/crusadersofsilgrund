#Adds individual characters for every player. This allows players to instantly swap progress between two different save states; changing classes, stats, and perks on the fly.

command /character [<text="list">] [<number=0>]:
	description: Manage characters.
	usage: /character (save/load/new/delete/list/inspect) (ID)
	executable by: players
	aliases: /savestate, /saveslot, /char, /characters, /c, /save
	trigger:
		if arg 1 is "save":
			#Classes
			if {sslot%arg 2%.%player%::name} is not set:
				add 1 to {saves.%player%}
			set {sslot%arg 2%.%player%::hasPlayedProlouge} to {hasPlayedProlouge.%player%}
			set {sslot%arg 2%.%player%::SessionType} to {SessionType.%player%}
			set {sslot%arg 2%.%player%::name} to the display name of the player
			set {sslot%arg 2%.%player%::str} to {str.%player%}
			set {sslot%arg 2%.%player%::def} to {def.%player%}
			set {sslot%arg 2%.%player%::res} to {res.%player%}
			set {sslot%arg 2%.%player%::spd} to {spd.%player%}
			set {sslot%arg 2%.%player%::skl} to {skl.%player%}
			set {sslot%arg 2%.%player%::hp} to {hp.%player%}
			set {sslot%arg 2%.%player%::bst} to ({str.%player%} + {def.%player%} + {res.%player%} + {spd.%player%} + {skl.%player%} + {hp.%player%})
			set {sslot%arg 2%.%player%::elitemode} to {elitemode.%player%}
			set {sslot%arg 2%.%player%::classxp} to {classXP.%player%}
			set {sslot%arg 2%.%player%::hpgrowth} to {hpgrowth.%player%}
			set {sslot%arg 2%.%player%::strgrowth} to {strgrowth.%player%}
			set {sslot%arg 2%.%player%::defgrowth} to {defgrowth.%player%}
			set {sslot%arg 2%.%player%::sklgrowth} to {sklgrowth.%player%}
			set {sslot%arg 2%.%player%::spdgrowth} to {spdgrowth.%player%}
			set {sslot%arg 2%.%player%::maggrowth} to {maggrowth.%player%}
			set {sslot%arg 2%.%player%::swordpts} to {weaponrank.%player%::swords}
			set {sslot%arg 2%.%player%::lancepts} to {weaponrank.%player%::lances}
			set {sslot%arg 2%.%player%::axepts} to {weaponrank.%player%::axes}
			set {sslot%arg 2%.%player%::bowpts} to {weaponrank.%player%::bows}
			set {sslot%arg 2%.%player%::magicpts} to {weaponrank.%player%::magic}
			set {sslot%arg 2%.%player%::staffpts} to {weaponrank.%player%::staves}
			set {sslot%arg 2%.%player%::swords} to {weapongrade.%player%::swords}
			set {sslot%arg 2%.%player%::lances} to {weapongrade.%player%::lances}
			set {sslot%arg 2%.%player%::axes} to {weapongrade.%player%::axes}
			set {sslot%arg 2%.%player%::bows} to {weapongrade.%player%::bows}
			set {sslot%arg 2%.%player%::magic} to {weapongrade.%player%::magic}
			set {sslot%arg 2%.%player%::staves} to {weapongrade.%player%::staves}
			set {sslot%arg 2%.%player%::kills} to {kills.%player%}
			set {sslot%arg 2%.%player%::hoursplayed} to {hoursplayed.%player%}
			set {sslot%arg 2%.%player%::highestdamage} to {highestdamage.%player%}
			set {sslot%arg 2%.%player%::highestsuffered} to {highestsuffered.%player%}
			set {sslot%arg 2%.%player%.npcSupportPoints::*} to {npcSupportPoints.%player%::*}
			loop {quests.%player%::*}:
				set {sslot%arg 2%.%player%.quests::%loop-index%} to loop-value
			set {sslot%arg 2%.%player%::pts_hp} to {pts_hp.%player%}
			set {sslot%arg 2%.%player%::pts_str} to {pts_str.%player%}
			set {sslot%arg 2%.%player%::pts_def} to {pts_def.%player%}
			set {sslot%arg 2%.%player%::pts_skl} to {pts_skl.%player%}
			set {sslot%arg 2%.%player%::pts_spd} to {pts_spd.%player%}
			set {sslot%arg 2%.%player%::pts_mag} to {pts_mag.%player%}
			set {sslot%arg 2%.%player%::strbuff} to {strbuff.%player%}
			set {sslot%arg 2%.%player%::defbuff} to {defbuff.%player%}
			set {sslot%arg 2%.%player%::resbuff} to {resbuff.%player%}
			set {sslot%arg 2%.%player%::spdbuff} to {spdbuff.%player%}
			set {sslot%arg 2%.%player%::sklbuff} to {sklbuff.%player%}
			set {sslot%arg 2%.%player%::hpbuff} to {hpbuff.%player%}
			set {sslot%arg 2%.%player%::lvl} to {lvl.%player%}
			set {sslot%arg 2%.%player%::class} to {class.%player%}
			set {sslot%arg 2%.%player%::hasCrest} to {hasCrest.%player%}
			set {sslot%arg 2%.%player%::strcap} to {strcap.%player%}
			set {sslot%arg 2%.%player%::defcap} to {defcap.%player%}
			set {sslot%arg 2%.%player%::rescap} to {rescap.%player%}
			set {sslot%arg 2%.%player%::spdcap} to {spdcap.%player%}
			set {sslot%arg 2%.%player%::sklcap} to {sklcap.%player%}
			set {sslot%arg 2%.%player%::hpcap} to {hpcap.%player%}
			set {sslot%arg 2%.%player%::lvlcap} to {lvlcap.%player%}
			set {sslot%arg 2%.%player%::promoted} to {promoted.%player%}
			set {sslot%arg 2%.%player%::deaths} to {deaths.%player%}
			set {sslot%arg 2%.%player%::reclassed} to {reclassed.%player%}
			set {sslot%arg 2%.%player%::blocksmined} to {blocksmined.%player%}
			set {sslot%arg 2%.%player%::toolbreaktally} to {toolbreaktally.%player%}
			set {sslot%arg 2%.%player%::slfalltotal} to {slfalltotal.%player%}
			set {sslot%arg 2%.%player%::skillstotal} to {skillstotal.%player%}
			set {sslot%arg 2%.%player%::skillslot1} to {skillslot1.%player%}
			set {sslot%arg 2%.%player%::skillslot2} to {skillslot2.%player%}
			set {sslot%arg 2%.%player%::skillslot3} to {skillslot3.%player%}
			set {sslot%arg 2%.%player%::skillslot4} to {skillslot4.%player%}
			set {sslot%arg 2%.%player%::skillslot5} to {skillslot5.%player%}
			set {sslot%arg 2%.%player%::realism} to {realism.%player%}
			set {sslot%arg 2%.%player%::perdiff} to {perdiff.%player%}
			set {sslot%arg 2%.%player%::ctoggle} to {ctoggle.%player%}
			set {sslot%arg 2%.%player%::charmade} to {charmade.%player%}
			set {sslot%arg 2%.%player%::playedTutorial} to {playedTutorial.%player%}
			#Quotes
			set {sslot%arg 2%.%player%::badLevelQuote} to {badLevelQuote.%player%}
			set {sslot%arg 2%.%player%::avgLevelQuote} to {avgLevelQuote.%player%}
			set {sslot%arg 2%.%player%::goodLevelQuote} to {goodLevelQuote.%player%}
			set {sslot%arg 2%.%player%::maxLevelQuote} to {maxLevelQuote.%player%}
			set {sslot%arg 2%.%player%::promotionQuote} to {promotionQuote.%player%}
			set {sslot%arg 2%.%player%::skillquote1} to {skillquote1.%player%}
			set {sslot%arg 2%.%player%::skillquote2} to {skillquote2.%player%}
			set {sslot%arg 2%.%player%::skillquote3} to {skillquote3.%player%}
			set {sslot%arg 2%.%player%::skillquote4} to {skillquote4.%player%}
			set {sslot%arg 2%.%player%::lowHPQuote} to {lowHPQuote.%player%}
			set {sslot%arg 2%.%player%::healedQuote} to {healedQuote.%player%}
			set {sslot%arg 2%.%player%::mediumHPQuote} to {mediumHPQuote.%player%}
			set {sslot%arg 2%.%player%::downedQuote} to {downedQuote.%player%}
			set {sslot%arg 2%.%player%::allyDownedQuote} to {allyDownedQuote.%player%}
			set {sslot%arg 2%.%player%::enemyDefeated1} to {enemyDefeated1.%player%}
			set {sslot%arg 2%.%player%::enemyDefeated2} to {enemyDefeated2.%player%}
			set {sslot%arg 2%.%player%::bossDefeated1} to {bossDefeated1.%player%}
			set {sslot%arg 2%.%player%::bossDefeated2} to {bossDefeated2.%player%}
			set {sslot%arg 2%.%player%::deathQuote} to {deathQuote.%player%}
			set {sslot%arg 2%.%player%::allyNeedHealing} to {allyNeedHealing.%player%}
			set {sslot%arg 2%.%player%::allyDeathQuote} to {allyDeathQuote.%player%}
			set {sslot%arg 2%.%player%::allyHardcoreDeathQuote} to {allyHardcoreDeathQuote.%player%}
			set {sslot%arg 2%.%player%::allyEnemyDefeated1} to {allyEnemyDefeated1.%player%}
			set {sslot%arg 2%.%player%::allyEnemyDefeated2} to {allyEnemyDefeated2.%player%}
			set {sslot%arg 2%.%player%::allyEnemyDefeated3} to {allyEnemyDefeated3.%player%}
			set {sslot%arg 2%.%player%::allyHurtLarge1} to {allyHurtLarge1.%player%}
			set {sslot%arg 2%.%player%::allyHurtLarge2} to {allyHurtLarge2.%player%}
			set {sslot%arg 2%.%player%::generation} to {generation.%player%}
			#Radiant Quests
			set {sslot%arg 2%.%player%::RadiantQuestsOnOffer} to {radiantQuestsOnOffer.%player%}
			set {sslot%arg 2%.%player%::RadiantQuestsRNG} to {radiantQuestsRNG.%player%}
			loop {radiantQuestsOnOffer.%player%} times:
				set {sslot%arg 2%.%player%.RQ.%loop-value%::Type} to {radiantQuest.%player%.%loop-value%::Type}
				set {sslot%arg 2%.%player%.RQ.%loop-value%::Completion} to {radiantQuest.%player%.%loop-value%::Completion}
				set {sslot%arg 2%.%player%.RQ.%loop-value%::Target} to {radiantQuest.%player%.%loop-value%::Target}
				set {sslot%arg 2%.%player%.RQ.%loop-value%::GoldReward} to {radiantQuest.%player%.%loop-value%::GoldReward}
				set {sslot%arg 2%.%player%.RQ.%loop-value%::EXPReward} to {radiantQuest.%player%.%loop-value%::EXPReward}
				set {sslot%arg 2%.%player%.RQ.%loop-value%::Amount} to {radiantQuest.%player%.%loop-value%::Amount}
			#Supports
			set {sslot%arg 2%.%player%::PTPSupportBonusActive} to {PTPSupportBonusActive.%player%}
			set {sslot%arg 2%.%player%::PTPSupportPoints} to {PTPSupportPoints.%player%}
			set {sslot%arg 2%.%player%::PTPSupportRank} to {PTPSupportRank.%player%}
			set {sslot%arg 2%.%player%::supportpartner} to {supportpartner.%player%}
			#Discovered Carriages
			loop {carriageLocs.%player%::*}:
				set {sslot%arg 2%.%player%.carriageLocs::%loop-index%} to {carriageLocs.%player%::%loop-index%}
			#Perks
			loop {perks.%player%::*}:
				if {perks.%player%::%loop-index%} is 1:
					set {sslot%arg 2%.%player%.perks::%loop-index%} to 1
				else:
					set {sslot%arg 2%.%player%.perks::%loop-index%} to 0
			#Equipped Perk Bonuses
			loop {perksEquipped.%player%::*}:
				if {perksEquipped.%player%::%loop-index%} is 1:
					set {sslot%arg 2%.%player%.perksEquipped::%loop-index%} to 1
				else:
					set {sslot%arg 2%.%player%.perksEquipped::%loop-index%} to 0
			#Spells
			loop {spells.%player%::*}:
				if {spells.%player%::%loop-index%} is 1:
					set {sslot%arg 2%.%player%.spells::%loop-index%} to 1
				else:
					set {sslot%arg 2%.%player%.spells::%loop-index%} to 0
			#Misc
			set {savepos%arg 2%.%player%} to location of block at player
			clear {inv%arg 2%.%player%::*}
			set {sslot%arg 2%.charvault.%player%::*} to {db_charvault.%player%::*}
			loop all items in player's inventory:
				add loop-item to {inv%arg 2%.%player%::*}
			set {_cash} to the player's money
			set {sslot%arg 2%.%player%::cash} to {_cash}
			set {sslot%arg 2%.%player%::bhop} to {bhop.%player%}
			send "<light blue>[Characters]<light green> Saved current character to slot %arg 2%!"
		#Load
		else if arg 1 is "load":
			if {sslot%arg 2%.%player%::name} is not set:
				send "<light blue>[Characters]<light red> No data found in that slot."
			else:
				#Classes
				set the player's display name to "%{sslot%arg 2%.%player%::name}%"
				set the player's tablist name to "%{sslot%arg 2%.%player%::name}%"
				set the player's maximum health to ({sslot%arg 2%.%player%::hp} + {sslot%arg 2%.%player%::hpbuff}) / 2
				heal the player by 999
				clear {quests.%player%::*}
				set {SessionType.%player%} to {sslot%arg 2%.%player%::SessionType}
				set {hasPlayedProlouge.%player%} to {sslot%arg 2%.%player%::hasPlayedProlouge}
				#Session Type handler
				#Player joins MP session
				if {SessionType.%player%} is "MP":
					loop all players:
						if citizen id of loop-player is not set:
							reveal loop-player to player
							reveal player to loop-player
				#Player joins co-op session
				else if {SessionType.%player%} is "COOP":
					broadcast formatted "%player's tablist name%<reset><gold> (%player's name%) joined the game."
					loop all players:
						if citizen id of loop-player is not set:
							loop {friendslist.%player%::*}:
								if loop-player is loop-value-2:
									reveal loop-player to the player
									reveal player to loop-player
									exit 1 loop
								else:
									hide loop-player from the player
									hide player from loop-player
							loop {%{party.%player%}%.members::*}:
								if loop-value-2 is loop-player:
									reveal the player to loop-player
									reveal loop-player to the player
								else:
									hide player from loop-player
									hide loop-player from the player
				#Player joins SP session
				else if {SessionType.%player%} is "SP":
					loop all players:
						if citizen id of the loop-player is not set:
							if loop-player is not the player:
								hide loop-player from the player
								hide player from loop-player
				#Hide player from others currently in SP/CO-OP sessions
				loop all players:
					if loop-player is not the player:
						if citizen id of loop-player is not set:
							if {SessionType.%loop-player%} is "SP":
								hide the player from loop-player
								hide loop-player from the player
							else if {SessionType.%loop-player%} is "COOP":
								if {party.%loop-player%} is not {party.%player%}:
									hide player from loop-player
									hide loop-player from the player
								else:
									loop {friendslist.%player%::*}:
										if player is not loop-value-2:
											hide player from loop-player
											hide loop-player from the player
										else:
											reveal player to loop-player
											reveal loop-player to the player
							else:
								reveal player to loop-player
								reveal loop-player to player
				set {npcSupportPoints.%player%::*} to {sslot%arg 2%.%player%.npcSupportPoints::*}
				set {hpgrowth.%player%} to {sslot%arg 2%.%player%::hpgrowth}
				set {strgrowth.%player%} to {sslot%arg 2%.%player%::strgrowth}
				set {defgrowth.%player%} to {sslot%arg 2%.%player%::defgrowth}
				set {sklgrowth.%player%} to {sslot%arg 2%.%player%::sklgrowth}
				set {spdgrowth.%player%} to {sslot%arg 2%.%player%::spdgrowth}
				set {maggrowth.%player%} to {sslot%arg 2%.%player%::maggrowth}
				set {pts_hp.%player%} to {sslot%arg 2%.%player%::pts_hp}
				set {pts_str.%player%} to {sslot%arg 2%.%player%::pts_str}
				set {pts_def.%player%} to {sslot%arg 2%.%player%::pts_def}
				set {pts_skl.%player%} to {sslot%arg 2%.%player%::pts_skl}
				set {pts_spd.%player%} to {sslot%arg 2%.%player%::pts_spd}
				set {pts_mag.%player%} to {sslot%arg 2%.%player%::pts_mag}
				set {elitemode.%player%} to {sslot%arg 2%.%player%::elitemode}
				set {classxp.%player%} to {sslot%arg 2%.%player%::classxp}
				set {weaponrank.%player%::swords} to {sslot%arg 2%.%player%::swordpts}
				set {weaponrank.%player%::lances} to {sslot%arg 2%.%player%::lancepts}
				set {weaponrank.%player%::axes} to {sslot%arg 2%.%player%::axepts}
				set {weaponrank.%player%::bows} to {sslot%arg 2%.%player%::bowpts}
				set {weaponrank.%player%::magic} to {sslot%arg 2%.%player%::magicpts}
				set {weaponrank.%player%::staves} to {sslot%arg 2%.%player%::staffpts}
				set {weapongrade.%player%::swords} to {sslot%arg 2%.%player%::swords}
				set {weapongrade.%player%::lances} to {sslot%arg 2%.%player%::lances}
				set {weapongrade.%player%::axes} to {sslot%arg 2%.%player%::axes}
				set {weapongrade.%player%::bows} to {sslot%arg 2%.%player%::bows}
				set {weapongrade.%player%::magic} to {sslot%arg 2%.%player%::magic}
				set {weapongrade.%player%::staves} to {sslot%arg 2%.%player%::staves}
				set {kills.%player%} to {sslot%arg 2%.%player%::kills}
				set {hoursplayed.%player%} to {sslot%arg 2%.%player%::hoursplayed}
				set {highestdamage.%player%} to {sslot%arg 2%.%player%::highestdamage}
				set {highestsuffered.%player%} to {sslot%arg 2%.%player%::highestsuffered}
				loop {sslot%arg 2%.%player%.quests::*}:
					set {quests.%player%::%loop-index%} to loop-value
				set {str.%player%} to {sslot%arg 2%.%player%::str}
				set {def.%player%} to {sslot%arg 2%.%player%::def}
				set {res.%player%} to {sslot%arg 2%.%player%::res}
				set {spd.%player%} to {sslot%arg 2%.%player%::spd}
				set {skl.%player%} to {sslot%arg 2%.%player%::skl}
				set {hp.%player%} to {sslot%arg 2%.%player%::hp}
				set {bst.%player%} to {sslot%arg 2%.%player%::bst}
				set {strbuff.%player%} to {sslot%arg 2%.%player%::strbuff}
				set {defbuff.%player%} to {sslot%arg 2%.%player%::defbuff}
				set {resbuff.%player%} to {sslot%arg 2%.%player%::resbuff}
				set {spdbuff.%player%} to {sslot%arg 2%.%player%::spdbuff}
				set {sklbuff.%player%} to {sslot%arg 2%.%player%::sklbuff}
				set {hpbuff.%player%} to {sslot%arg 2%.%player%::hpbuff}
				set {lvl.%player%} to {sslot%arg 2%.%player%::lvl}
				set {class.%player%} to {sslot%arg 2%.%player%::class}
				set {hasCrest.%player%} to {sslot%arg 2%.%player%::hasCrest}
				set {strcap.%player%} to {sslot%arg 2%.%player%::strcap}
				set {defcap.%player%} to {sslot%arg 2%.%player%::defcap}
				set {rescap.%player%} to {sslot%arg 2%.%player%::rescap}
				set {spdcap.%player%} to {sslot%arg 2%.%player%::spdcap}
				set {sklcap.%player%} to {sslot%arg 2%.%player%::sklcap}
				set {hpcap.%player%} to {sslot%arg 2%.%player%::hpcap}
				set {lvlcap.%player%} to {sslot%arg 2%.%player%::lvlcap}
				set {promoted.%player%} to {sslot%arg 2%.%player%::promoted}
				set {deaths.%player%} to {sslot%arg 2%.%player%::deaths}
				set {reclassed.%player%} to {sslot%arg 2%.%player%::reclassed}
				set {blocksmined.%player%} to {sslot%arg 2%.%player%::blocksmined}
				set {toolbreaktally.%player%} to {sslot%arg 2%.%player%::toolbreaktally}
				set {slfalltotal.%player%} to {sslot%arg 2%.%player%::slfalltotal}
				set {skillstotal.%player%} to {sslot%arg 2%.%player%::skillstotal}
				set {skillslot1.%player%} to {sslot%arg 2%.%player%::skillslot1}
				set {skillslot2.%player%} to {sslot%arg 2%.%player%::skillslot2}
				set {skillslot3.%player%} to {sslot%arg 2%.%player%::skillslot3}
				set {skillslot4.%player%} to {sslot%arg 2%.%player%::skillslot4}
				set {skillslot5.%player%} to {sslot%arg 2%.%player%::skillslot5}
				set {perdiff.%player%} to {sslot%arg 2%.%player%::perdiff}
				set {ctoggle.%player%} to {sslot%arg 2%.%player%::ctoggle}
				set {boon.%player%} to {sslot%arg 2%.%player%::boon}
				set {bane.%player%} to {sslot%arg 2%.%player%::bane}
				set {charmade.%player%} to {sslot%arg 2%.%player%::charmade}
				set {generation.%player%} to {sslot%arg 2%.%player%::generation}
				#Radiant Quests
				set {RadiantQuestsOnOffer.%player%} to {sslot%arg 2%.%player%::RadiantQuestsOnOffer}
				set {RadiantQuestsRNG.%player%} to true
				loop {radiantQuestsOnOffer.%player%} times:
					set {radiantQuest.%player%.%loop-value%::Type} to {sslot%arg 2%.%player%.RQ.%loop-value%::Type}
					set {radiantQuest.%player%.%loop-value%::Completion} to {sslot%arg 2%.%player%.RQ.%loop-value%::Completion}
					set {radiantQuest.%player%.%loop-value%::Target} to {sslot%arg 2%.%player%.RQ.%loop-value%::Target}
					set {radiantQuest.%player%.%loop-value%::GoldReward} to {sslot%arg 2%.%player%.RQ.%loop-value%::GoldReward}
					set {radiantQuest.%player%.%loop-value%::EXPReward} to {sslot%arg 2%.%player%.RQ.%loop-value%::EXPReward}
					set {radiantQuest.%player%.%loop-value%::Amount} to {sslot%arg 2%.%player%.RQ.%loop-value%::Amount}
				#Quotes
				set {badLevelQuote.%player%} to {sslot%arg 2%.%player%::badLevelQuote}
				set {avgLevelQuote.%player%} to {sslot%arg 2%.%player%::avgLevelQuote}
				set {goodLevelQuote.%player%} to {sslot%arg 2%.%player%::goodLevelQuote}
				set {maxLevelQuote.%player%} to {sslot%arg 2%.%player%::maxLevelQuote}
				set {promotionQuote.%player%} to {sslot%arg 2%.%player%::promotionQuote}
				set {skillquote1.%player%} to {sslot%arg 2%.%player%::skillquote1}
				set {skillquote2.%player%} to {sslot%arg 2%.%player%::skillquote2}
				set {skillquote3.%player%} to {sslot%arg 2%.%player%::skillquote3}
				set {skillquote4.%player%} to {sslot%arg 2%.%player%::skillquote4}
				set {lowHPQuote.%player%} to {sslot%arg 2%.%player%::lowHPQuote}
				set {healedQuote.%player%} to {sslot%arg 2%.%player%::healedQuote}
				set {mediumHPQuote.%player%} to {sslot%arg 2%.%player%::mediumHPQuote}
				set {downedQuote.%player%} to {sslot%arg 2%.%player%::downedQuote}
				set {allyDownedQuote.%player%} to {sslot%arg 2%.%player%::allyDownedQuote}
				set {enemyDefeated1.%player%} to {sslot%arg 2%.%player%::enemyDefeated1}
				set {enemyDefeated2.%player%} to {sslot%arg 2%.%player%::enemyDefeated2}
				set {bossDefeated1.%player%} to {sslot%arg 2%.%player%::bossDefeated1}
				set {bossDefeated2.%player%} to {sslot%arg 2%.%player%::bossDefeated2}
				set {deathQuote.%player%} to {sslot%arg 2%.%player%::deathQuote}
				set {allyNeedHealing.%player%} to {sslot%arg 2%.%player%::allyNeedHealing}
				set {allyDeathQuote.%player%} to {sslot%arg 2%.%player%::allyDeathQuote}
				set {allyHardcoreDeathQuote.%player%} to {sslot%arg 2%.%player%::allyHardcoreDeathQuote}
				set {allyEnemyDefeated1.%player%} to {sslot%arg 2%.%player%::allyEnemyDefeated1}
				set {allyEnemyDefeated2.%player%} to {sslot%arg 2%.%player%::allyEnemyDefeated2}
				set {allyEnemyDefeated3.%player%} to {sslot%arg 2%.%player%::allyEnemyDefeated3}
				set {allyHurtLarge1.%player%} to {sslot%arg 2%.%player%::allyHurtLarge1}
				set {allyHurtLarge2.%player%} to {sslot%arg 2%.%player%::allyHurtLarge2}
				#Supports
				set {PTPSupportBonusActive.%player%} to {sslot%arg 2%.%player%::PTPSupportBonusActive} 
				set {PTPSupportPoints.%player%} to {sslot%arg 2%.%player%::PTPSupportPoints}
				set {PTPSupportRank.%player%} to {sslot%arg 2%.%player%::PTPSupportRank}
				set {supportpartner.%player%} to {sslot%arg 2%.%player%::supportpartner}
				#Discovered Carriages
				clear {carriageLocs.%player%::*}
				loop {sslot%arg 2%.%player%.carriageLocs::*}:
					set {carriageLocs.%player%::%loop-index%} to {sslot%arg 2%.%player%.carriageLocs::%loop-index%}
				#Perks
				clear {perks.%player%::*}
				loop {sslot%arg 2%.%player%.perks::*}:
					set {perks.%player%::%loop-index%} to {sslot%arg 2%.%player%.perks::%loop-index%}
				#Active Perk Bonuses
				clear {perksEquipped.%player%::*}
				loop {sslot%arg 2%.%player%.perksEquipped::*}:
					set {perksEquipped.%player%::%loop-index%} to {sslot%arg 2%.%player%.perksEquipped::%loop-index%}
				#Spells
				clear {spells.%player%::*}
				loop {sslot%arg 2%.%player%.spells::*}:
					set {spells.%player%::%loop-index%} to {sslot%arg 2%.%player%.spells::%loop-index%}
				#Misc
				set {realism.%player%} to {sslot%arg 2%.%player%::realism}
				clear the player's inventory
				send "%{sslot%arg 2%.%player%::cash}%"
				set the player's level to {sslot%arg 2%.%player%::lvl}
				teleport the player to {savepos%arg 2%.%player%}
				set the player's money to {sslot%arg 2%.%player%::cash}
				set {tutbonus.%player%} to {sslot%arg 2%.%player%::tutbonus}
				set {playedTutorial.%player%} to {sslot%arg 2%.%player%::playedTutorial}
				set {bhop.%player%} to {sslot%arg 2%.%player%::bhop}
				set {db_charvault.%player%::*} to {sslot%arg 2%.charvault.%player%::*}
				make player execute command "/perk 0 LoadSave"
				wait 1 tick
				open chest with 6 rows named "%{sslot%arg 2%.%player%::name}%'s Inventory" for the player
				wait 1 tick
				set {_slot} to -1
				loop {inv%arg 2%.%player%::*}:
					add 1 to {_slot}
					set slot {_slot} of player's current inventory to loop-value
				send "<light blue>[Characters]<light green> Loaded character %{sslot%arg 2%.%player%::name}%!"
		else if arg 1 is "new":
			#Classes
			set the player's display name to the player's name
			make player execute command "/xp -10000l"
			clear the player's inventory
			make player execute command "/heal"
			set the player's money to 0
			#make player execute command "/kit tools"
			clear {hasPlayedProlouge.%player%}
			clear {str.%player%}
			clear {def.%player%}
			clear {res.%player%}
			clear {spd.%player%}
			clear {skl.%player%}
			clear {hp.%player%}
			clear {bst.%player%}
			clear {classxp.%player%}
			clear {elitemode.%player%}
			clear {SessionType.%player%}
			clear {weaponrank.%player%::swords}
			clear {weaponrank.%player%::lances}
			clear {weaponrank.%player%::axes}
			clear {weaponrank.%player%::bows}
			clear {weaponrank.%player%::magic}
			clear {weaponrank.%player%::staves}
			clear {weapongrade.%player%::swords}
			clear {weapongrade.%player%::lances}
			clear {weapongrade.%player%::axes}
			clear {weapongrade.%player%::bows}
			clear {weapongrade.%player%::magic}
			clear {weapongrade.%player%::staves}
			clear {npcSupportPoints.%player%::*}
			clear {questbook.%player%}
			clear {kills.%player%}
			clear {hoursplayed.%player%}
			clear {highestdamage.%player%}
			clear {highestsuffered.%player%}
			clear {quests.%player%::*}
			clear {strbuff.%player%}
			clear {defbuff.%player%}
			clear {resbuff.%player%}
			clear {spdbuff.%player%}
			clear {sklbuff.%player%}
			clear {hpbuff.%player%}
			clear {lvl.%player%}
			clear {class.%player%}
			clear {hasCrest.%player%}
			clear {strcap.%player%}
			clear {defcap.%player%}
			clear {rescap.%player%}
			clear {spdcap.%player%}
			clear {sklcap.%player%}
			clear {hpcap.%player%}
			clear {lvlcap.%player%}
			clear {promoted.%player%}
			clear {deaths.%player%}
			clear {reclassed.%player%}
			clear {blocksmined.%player%}
			clear {toolbreaktally.%player%}
			clear {slfalltotal.%player%}
			clear {skillstotal.%player%}
			clear {skillslot1.%player%}
			clear {skillslot2.%player%}
			clear {skillslot3.%player%}
			clear {skillslot4.%player%}
			clear {skillslot5.%player%}
			clear {boon.%player%}
			clear {bane.%player%}
			clear {generation.%player%}
			#Radiant Quests
			loop {radiantQuestsOnOffer.%player%} times:
				clear {radiantQuest.%player%.%loop-value%::*}
			clear {radiantQuestsOnOffer.%player%}
			set {radiantQuestsRNG.%player%} to true
			#Supports
			clear {PTPSupportRank.%player%}
			clear {supportpartner.%player%}
			clear {PTPSupportPoints.%player%}
			clear {PTPSupportBonusActive.%player%}
			#Perks
			clear {perks.%player%::*}
			clear {perksEquipped.%player%::*}
			#Spells
			clear {spells.%player%::*}
			#Misc
			clear {tutbonus.%player%}
			clear {realism.%player%}
			clear {perdiff.%player%}
			clear {charmade.%player%}
			clear {ctoggle.%player%}
			#Quotes
			clear {playedTutorial.%player%}
			clear {badLevelQuote.%player%}
			clear {avgLevelQuote.%player%}
			clear {goodLevelQuote.%player%}
			clear {maxLevelQuote.%player%}
			clear {promotionQuote.%player%}
			clear {skillquote1.%player%}
			clear {skillquote2.%player%}
			clear {skillquote3.%player%}
			clear {skillquote4.%player%}
			clear {lowHPQuote.%player%}
			clear {healedQuote.%player%}
			clear {mediumHPQuote.%player%}
			clear {downedQuote.%player%}
			clear {allyDownedQuote.%player%}
			clear {enemyDefeated1.%player%}
			clear {enemyDefeated2.%player%}
			clear {bossDefeated1.%player%}
			clear {bossDefeated2.%player%}
			clear {deathQuote.%player%}
			clear {allyNeedHealing.%player%}
			clear {allyDeathQuote.%player%}
			clear {allyHardcoreDeathQuote.%player%}
			clear {allyEnemyDefeated1.%player%}
			clear {allyEnemyDefeated2.%player%}
			clear {allyEnemyDefeated3.%player%}
			clear {allyHurtLarge1.%player%}
			clear {allyHurtLarge2.%player%}
			clear {db_charvault.%player%::*}
			clear {childUnitParent.%player%}
			clear {carriageLocs.%player%::*}
			set {bhop.%player%} to 0
			send "<light blue>[Characters]<light green> New character ready. Please log back into the server to start your new character."
			if arg 2 is 1:
				set {hasPlayedProlouge.%player%} to true
				send "<light blue>Skipping tutorial."
			else if arg 2 is 2:
				set {hasPlayedProlouge.%player%} to true
				set {quests.%player%::Proving Grounds} to 999
				set {quests.%player%::Breaking the Ice} to 999
				send "<light blue>Skipping prolouge."
			else if arg 2 is 776:
				set {hasPlayedProlouge.%player%} to true
				set {quests.%player%::Proving Grounds} to 999
				set {quests.%player%::Breaking the Ice} to 999
				set {quests.%player%::COS_QUEST_PART1_04} to 999
				set {quests.%player%::Expedition} to 999
				set {quests.%player%::Legend in the Making} to 999
				set {quests.%player%::COS_QUEST_PART1_06} to 999
				set {quests.%player%::Creeping Shadows} to 999
				set {quests.%player%::A Brush With Death} to 999
				set {quests.%player%::Another Path} to 999
				set {quests.%player%::Lord's Advance} to 999
				set {quests.%player%::Piercing Through Darkness} to 999
				set {quests.%player%::Fight Against Fate} to 999
				set {quests.%player%::Sunset} to 999
				send "<light blue>Skipping Main Quest"
		else if arg 1 is "list":
			send "<light blue>[Characters]<reset> Your saved characters by ID:"
			loop {saves.%player%} times:
				if {sslot%loop-number%.%player%::name} is set:
					send "%loop-number%: %{sslot%loop-number%.%player%::name}% | Level %{sslot%loop-number%.%player%::lvl}% %{sslot%loop-number%.%player%::class}%"
		else if arg 1 is "delete":
			subtract 1 from {saves.%player%}
			loop {sslot%arg 2%.%player%::RadiantQuestsOnOffer} times:
				clear {sslot%arg 2%.%player%.RQ.%loop-value%::*}
			clear {sslot%arg 2%.%player%::*}
			clear {sslot%arg 2%.%player%.quests::*}
			clear {inv%arg 2%.%player%::*}
			clear {sslot%arg 2%.%player%.spells::*}
			clear {sslot%arg 2%.%player%.perks::*}
			clear {sslot%arg 2%.%player%.perksEquipped::*}
			clear {sslot%arg 2%.%player%.carriageLocs::*}
			clear {sslot%arg 2%.charvault.%player%::*}
			clear {sslot%arg 2%.%player%.npcSupportPoints::*}
			send "<light blue>[Characters]<reset> Character deleted."
		else if arg 1 is "help":
			send "<light blue>[Characters]<reset> Usage: /character (save, load, list, delete, new, inspect) (Character Slot)"
		else if arg 1 is "inspect":
			if {sslot%arg 2%.%player%::name} is not set:
				send "<light blue>[Characters]<reset> <light red>No data found in that slot."
			else:
				send "<gold>%{sslot%arg 2%.%player%::name}% the level %{sslot%arg 2%.%player%::lvl}% %{sslot%arg 2%.%player%::class}%"
				set {_bstcap.%arg 2%} to ({sslot%arg 2%.%player%::strcap} + {sslot%arg 2%.%player%::defcap} + {sslot%arg 2%.%player%::sklcap} + {sslot%arg 2%.%player%::spdcap} + {sslot%arg 2%.%player%::rescap} + {sslot%arg 2%.%player%::hpcap})
				if {sslot%arg 2%.%player%::str} is equal to {sslot%arg 2%.%player%::strcap}:
					if {sslot%arg 2%.%player%::boon} is 1:
						send "<light green><bold>+ <yellow><bold>Strength: %{sslot%arg 2%.%player%::str}%"
					else if {sslot%arg 2%.%player%::bane} is 1:
						send "<light red><bold>- <yellow><bold>Strength: %{sslot%arg 2%.%player%::str}%"
					else:
						send "<yellow><bold>Strength: %{sslot%arg 2%.%player%::str}%"
				else:
					if {sslot%arg 2%.%player%::boon} is 1:
						send "<light green><bold>+ <reset>Strength: %{sslot%arg 2%.%player%::str}% + %{strbuff.%arg 1%}%"
					else if {sslot%arg 2%.%player%::bane} is 1:
						send "<light red><bold>- <reset>Strength: %{sslot%arg 2%.%player%::str}% + %{strbuff.%arg 1%}%"
					else:
						send "Strength: %{sslot%arg 2%.%player%::str}% + %{strbuff.%arg 1%}%"
				if {sslot%arg 2%.%player%::def} is equal to {sslot%arg 2%.%player%::defcap}:
					if {sslot%arg 2%.%player%::boon} is 2:
						send "<light green><bold>+ <yellow><bold>Defense: %{sslot%arg 2%.%player%::def}%"
					else if {sslot%arg 2%.%player%::bane} is 2:
						send "<light red><bold>- <yellow><bold>Defense: %{sslot%arg 2%.%player%::def}%"
					else:
						send "<yellow><bold>Defense: %{sslot%arg 2%.%player%::def}%"
				else:
					if {sslot%arg 2%.%player%::boon} is 2:
						send "<light green><bold>+ <reset>Defense: %{sslot%arg 2%.%player%::def}%"
					else if {sslot%arg 2%.%player%::bane} is 2:
						send "<light red><bold>- <reset>Defense: %{sslot%arg 2%.%player%::def}%"
					else:
						send "Defense: %{sslot%arg 2%.%player%::def}%"
				if {sslot%arg 2%.%player%::skl} is equal to {sslot%arg 2%.%player%::sklcap}:
					if {sslot%arg 2%.%player%::boon} is 3:
						send "<light green><bold>+ <yellow><bold>Skill: %{sslot%arg 2%.%player%::skl}%"
					else if {sslot%arg 2%.%player%::bane} is 3:
						send "<light red><bold>- <yellow><bold>Skill: %{sslot%arg 2%.%player%::skl}%"
					else:
						send "<yellow><bold>Skill: %{sslot%arg 2%.%player%::skl}%"
				else:
					if {sslot%arg 2%.%player%::boon} is 3:
						send "<light green><bold>+ <reset>Skill: %{sslot%arg 2%.%player%::skl}%"
					else if {sslot%arg 2%.%player%::bane} is 3:
						send "<light red><bold>- <reset>Skill: %{sslot%arg 2%.%player%::skl}%"
					else:
						send "Skill: %{sslot%arg 2%.%player%::skl}%"
				if {sslot%arg 2%.%player%::spd} is equal to {sslot%arg 2%.%player%::spdcap}:
					if {sslot%arg 2%.%player%::boon} is 4:
						send "<light green><bold>+ <yellow><bold>Speed: %{sslot%arg 2%.%player%::spd}%"
					else if {sslot%arg 2%.%player%::bane} is 4:
						send "<light red><bold>- <yellow><bold>Speed: %{sslot%arg 2%.%player%::spd}%"
					else:
						send "<yellow><bold>Speed: %{sslot%arg 2%.%player%::spd}%"
				else:
					if {sslot%arg 2%.%player%::boon} is 4:
						send "<light green><bold>+ <reset>Speed: %{sslot%arg 2%.%player%::spd}%"
					else if {sslot%arg 2%.%player%::bane} is 4:
						send "<light red><bold>- <reset>Speed: %{sslot%arg 2%.%player%::spd}%"
					else:
						send "Speed: %{sslot%arg 2%.%player%::spd}%"
				if {sslot%arg 2%.%player%::res} is equal to {sslot%arg 2%.%player%::rescap}:
					if {sslot%arg 2%.%player%::boon} is 5:
						send "<light green><bold>+ <yellow><bold>Magic: %{sslot%arg 2%.%player%::res}%"
					else if {sslot%arg 2%.%player%::bane} is 5:
						send "<light red><bold>- <yellow><bold>Magic: %{sslot%arg 2%.%player%::res}%"
					else:
						send "<yellow><bold>Magic: %{sslot%arg 2%.%player%::res}%"
				else:
					if {sslot%arg 2%.%player%::boon} is 5:
						send "<light green><bold>+ <reset>Magic: %{sslot%arg 2%.%player%::res}%"
					else if {sslot%arg 2%.%player%::bane} is 5:
						send "<light red><bold>- <reset>Magic: %{sslot%arg 2%.%player%::res}%"
					else:
						send "Magic: %{sslot%arg 2%.%player%::res}%"
				if {sslot%arg 2%.%player%::hp} is equal to {sslot%arg 2%.%player%::hpcap}:
					if {sslot%arg 2%.%player%::boon} is 0:
						send "<light green><bold>+ <yellow><bold>Max HP: %{sslot%arg 2%.%player%::hp}%"
					else if {sslot%arg 2%.%player%::bane} is 0:
						send "<light red><bold>- <yellow><bold>Max HP: %{sslot%arg 2%.%player%::hp}%"
					else:
						send "<yellow><bold>Max HP: %{sslot%arg 2%.%player%::hp}%"
				else:
					if {sslot%arg 2%.%player%::boon} is 0:
						send "<light green><bold>+ <reset>Max HP: %{sslot%arg 2%.%player%::hp}%"
					else if {sslot%arg 2%.%player%::bane} is 0:
						send "<light red><bold>- <reset>Max HP: %{sslot%arg 2%.%player%::hp}%"
					else:
						send "Max HP: %{sslot%arg 2%.%player%::hp}%"
				send "BST: %{sslot%arg 2%.%player%::bst}% (Max: %{_bstcap.%arg 2%}%)"
			
