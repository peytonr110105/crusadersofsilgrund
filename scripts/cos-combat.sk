#Dodge Roll Toggle Command
command /dr [<number=2>]:
	description: Toggles your Dodge Roll on and off.
	usage: /dr
	executable by: players
	trigger:
		if arg 1 is 1:
			set {drenable.%player%} to 1
			send "<green><bold>Dodge Roll enabled! Double tap Sneak to roll backwards."
		else if arg 1 is 0:
			set {drenable.%player%} to 0
			send "<green><bold>Dodge Roll disabled!"
		else:
			if {drenable.%player%} is 1:
				set {drenable.%player%} to 0
				send "<green><bold>Dodge Roll disabled!"
			else:
				set {drenable.%player%} to 1
				send "<green><bold>Dodge Roll enabled! Double tap Sneak to roll backwards."

#Dodge Roll Refresh and Double-Tap Check
every 0.5 seconds:
	loop all players:
		if {dr.%loop-player%} is 1 or 2:
			set {dr.%loop-player%} to 0
		if the 3rd line of the lore of the loop-player's tool contains "Hone":
			loop all players in radius 10 of the loop-player:
				if loop-player-2 is not the loop-player-1:
					if {party.%loop-player-1%} is {party.%loop-player-2%}:
						if the 3rd line of the lore of the loop-player-1's tool contains "STR":
							add 20 to {strbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {strbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
							add 20 to {spdbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {spdbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
							add 20 to {sklbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {sklbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
							add 20 to {defbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {defbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
							add 20 to {resbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {resbuff.%loop-player-2%}
						play 10 (lava pop with speed 0.5) at the loop-player-2
						exit 1 loop
		if the 3rd line of the lore of the loop-player's tool contains "Drive":
			loop all players in radius 15 of the loop-player:
				if loop-player-2 is not the loop-player-1:
					if {party.%loop-player-1%} is {party.%loop-player-2%}:
						if the 3rd line of the lore of the loop-player-1's tool contains "STR":
							add 10 to {strbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {strbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
							add 10 to {spdbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {spdbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
							add 10 to {sklbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {sklbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
							add 10 to {defbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {defbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
							add 10 to {resbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {resbuff.%loop-player-2%}
						play 10 (cyan wool break with speed 1) at the loop-player-2
		if the 3rd line of the lore of the loop-player's tool contains "Pressure":
			loop all entities in radius 15 of the loop-player:
				if loop-entity-2 is not loop-player-1:
					if loop-entity-2 is not item:
						if {party.%loop-entity-2%} is not {party.%loop-player-1%}:
							if ({res.%loop-entity-2%} + {resbuff.%loop-entity-2%} + 5) is less than ({res.%loop-player-1%} + {resbuff.%loop-player-1%}):
								if {t_lvl.%loop-entity-2%} is not set:
									if the 3rd line of the lore of the loop-player-1's tool contains "STR":
										subtract 20 from {strbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {strbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
										subtract 20 from {spdbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {spdbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
										subtract 20 from {sklbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {sklbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
										subtract 20 from {defbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {defbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
										subtract 20 from {resbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {resbuff.%loop-entity-2%}
									play 10 (red wool break with speed 0) at the loop-entity-2
								else:
									if the 3rd line of the lore of the loop-player-1's tool contains "STR":
										subtract 20 from {t_strbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {t_strbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
										subtract 20 from {t_spdbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {t_spdbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
										subtract 20 from {t_sklbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {t_sklbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
										subtract 20 from {t_defbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {t_defbuff.%loop-entity-2%}
									else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
										subtract 20 from {t_resbuff.%loop-entity-2%}
										wait 0.5 seconds
										add 20 to {t_resbuff.%loop-entity-2%}
									play 10 (red wool break with speed 0) at the loop-entity-2

		if the 3rd line of the lore of the loop-player's tool contains "Authority":
			loop all players in radius 15 of the loop-player:
				if loop-player-2 is not the loop-player-1:
					if {party.%loop-player-1%} is {party.%loop-player-2%}:
						if {lvl.%loop-player-1%} is more than {lvl.%loop-player-2%}:
							if the 3rd line of the lore of the loop-player-1's tool contains "STR":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {strbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {strbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {spdbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {spdbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {sklbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {sklbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {defbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {defbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {resbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {resbuff.%loop-player-2%}
							play 10 (yellow wool break with speed 1) at the loop-player-2


#DR = 0 - Prepped
#DR = 1 - Ready to activated
#DR = 2 - Exhausted, must recharge.
#DRInvincible - Player is rolling with invincibility
#Dodge Roll
on sneak toggle:
	if {drenable.%player%} is 1:
		if player is sneaking:
			set {dr.%player%} to 1
		if {dr.%player%} is 1:
			if player is sneaking:
				set {dr.%player%} to 1
			else:
				set {_flight} to checkSlots(player,"Flight")
				if player's hunger is less than 3:
					send "<red><bold>Not enough hunger to Dodge Roll!" to the player
				else if {_flight} is 1:
					if {flying.%player%} is not set:
						set {flying.%player%} to 1
						set {_armour} to the player's chestplate
						set the player's chestplate to 1 elytra
						push the player upwards at speed 5
						play sound "entity.blaze.shoot" with volume 0.5 and pitch 1.5 at player
						send "<light blue>You take to the skies!"
						wait 1 second
						while player's hunger is more than 3:
							if player is on ground:
								exit 1 loop
							else if player is sneaking:
								exit 1 loop
							play 20 (smoke with speed 0) at player
							play 20 (snowball break with speed 0) at player
							play sound "entity.enderdragon.flap" with volume 1 and pitch 1 at player
							push the player forwards at speed 0.5
							if {_food} is not set:
								reduce the player's food level by 0.5
								set {_food} to 1
							else:
								clear {_food}
							wait 1 second
						clear {flying.%player%}
						set the player's chestplate to {_armour}
						send "<light red>Your wings grow tired..."
						play sound "entity.enderdragon.flap" with volume 1 and pitch 1 at player
				else:
					set {DRInvincible.%player%} to 1
					if the 1st line of the lore of the player's boots contains "<light red><bold>Slot A - Long Jump":
						push the player forwards at speed 2
					else if the 1st line of the lore of the player's boots contains "<light red><bold>Slot A - Quick Stomp":
						push the player downwards at speed 3
					else if the 1st line of the lore of the player's boots contains "<light red><bold>Slot A - Boost Jump":
						push the player upwards at speed 2.5
					else:
						push the player backwards at speed 0.85
					play sound "entity.blaze.shoot" with volume 0.5 and pitch 1.5 at player
					loop 15 times:
						play 2 (smoke with speed 0) at the player
						play 2 (snowball break with speed 1) at the player
						wait 1 tick
					set {_slotcheck.%player%} to checkSlots(player,"Light Feet")
					if {_slotcheck.%player%} is 0:
						reduce the player's food level by 0.5
					set {dr.%player%} to 2
					set {DRInvincible.%player%} to 0
					if {quests.%player%::Days of Training} is 3:
						send "<light blue>Combat Instructor: Well done. You get invincibility while you're rolling, but it'll cost hunger every time you roll. Save it for emergencies or else you'll tear through your hunger supply." to the player
						wait 5 seconds
						send "<light blue>Combat Instructor: Now I suppose we're going to have to talk about perks. You'll get these after leveling up or by getting a Promotion, and with one equipped you'll be able to enhance your abilities." to the player
						wait 5 seconds
						make player execute command "/xp 1l"
						send "<light blue>Combat Instructor: Your practice should've earned you an extra level. Go ahead and equip your new HP +5 perk in your perk menu." to the player
						setQuestProgress(player,"Days of Training",4,"Equip the HP +5 perk by using /perks.")

#Dodge Roll Invincibility
on damage:
	if victim is a player:
		if {DRInvincible.%victim%} is 1:
			add 1 to {qptally.%victim%}
			if {qptally.%victim%} is more than 49:
				if {Quickened Pulse.%victim%} is not set:
					make victim execute command "/grantskill 0 Quickened Pulse"
			set {_slotcheck.%victim%} to checkSlots(victim,"Quickened Pulse")
			send "<green><bold>Dodged the attack!" to the victim
			play sound "item.totem.use" with volume 1 and pitch 1 at attacker for victim
			if {combograde.%victim%} is more than 0:
				add damage to {comboscore.%victim%}
			cancel event
			apply speed 1 to the victim for 3 seconds
			if the 1st line of the lore of the victim's boots contains "<light red><bold>Slot A - Quickened Pulse":
				apply slowness 6 to the attacker for 3 seconds
				apply weakness 6 to the attacker for 3 seconds
				apply mining fatigue 6 to the attacker for 3 seconds
				send "<light blue><bold>Quickened Pulse activated!" to the victim
				loop 5 times:
					show smoke on the attacker
					show smoke on the attacker
					show magical critical hit on the attacker
					show magical critical hit on the attacker
				#wait 2 ticks
			else if the 1st line of the lore of the victim's boots contains "<light red><bold>Slot A - Witch Time":
				apply slowness 6 to the attacker for 3 seconds
				apply weakness 6 to the attacker for 3 seconds
				apply mining fatigue 6 to the attacker for 3 seconds
				send "<light purple><bold>Witch Time activated!" to the victim
				set {_cheeky} to a random integer between 1 and 8
				if {_cheeky} is 1:
					send "<light purple><bold>Is that all you've got?" to the attacker
					send "<light purple><bold>Is that all you've got?" to the victim
				else if {_cheeky} is 2:
					send "<light purple><bold>Can't touch me!" to the attacker
					send "<light purple><bold>Can't touch me!" to the victim
				else if {_cheeky} is 3:
					send "<light purple><bold>Too late!" to the attacker
					send "<light purple><bold>Too late!" to the victim
				else if {_cheeky} is 4:
					send "<light purple><bold>So close!" to the attacker
					send "<light purple><bold>So close!" to the victim
				else if {_cheeky} is 5:
					send "<light purple><bold>Almost!" to the attacker
					send "<light purple><bold>Almost!" to the victim
				else if {_cheeky} is 6:
					send "<light purple><bold>Boring!" to the attacker
					send "<light purple><bold>Boring!" to the victim
				else if {_cheeky} is 7:
					send "<light purple><bold>Dreadful!" to the attacker
					send "<light purple><bold>Dreadful!" to the victim
				else if {_cheeky} is 8:
					send "<light purple><bold>Not quite!" to the attacker
					send "<light purple><bold>Not quite!" to the victim
				loop 5 times:
					show smoke on the attacker
					show smoke on the attacker
					show magical critical hit on the attacker
					show magical critical hit on the attacker
				#wait 1 tick
			else if {_slotcheck.%victim%} is 1:
				apply slowness 6 to the attacker for 3 seconds
				apply weakness 6 to the attacker for 3 seconds
				apply mining fatigue 6 to the attacker for 3 seconds
				send "<light blue><bold>Quickened Pulse activated!" to the victim
				loop 5 times:
					show smoke on the attacker
					show smoke on the attacker
					show magical critical hit on the attacker
					show magical critical hit on the attacker
				#wait 2 ticks

command /sandbag:
	description: Spawn an infinite-health sandbag that tells you the amount of damage you just dealt.
	usage: /sandbag
	executable by: players
	trigger:
		spawn 1 armor stand at the player
		set the name of the last spawned entity to "<gold><bold>Sandbag"

command /sbtoggle:
	description: Toggle damaging of Sandbags
	usage: /sbtoggle
	executable by: players
	trigger:
		if {sandbagkillable.%player%} is 0:
			set {sandbagkillable.%player%} to 1
			send "Your attacks will now damage Sandbags."
		else:
			set {sandbagkillable.%player%} to 0
			send "Your attacks will no longer damage Sandbags."
	

#Define new crafting recipes:
on load:
	#Lances
	register new shaped recipe for wood shovel named "<bold>Wooden Lance" using air, any planks, air, any planks, stick, any planks, air, stick, air
	register new shaped recipe for stone shovel named "<bold>Stone Lance" using air, cobblestone, air, cobblestone, stick, cobblestone, air, stick, air
	register new shaped recipe for iron shovel named "<bold>Iron Lance" using air, iron ingot, air, iron ingot, stick, iron ingot, air, stick, air
	register new shaped recipe for gold shovel named "<bold>Golden Lance" using air, gold ingot, air, gold ingot, stick, gold ingot, air, stick, air
	register new shaped recipe for diamond shovel named "<bold>Diamond Lance" using air, diamond, air, diamond, stick, diamond, air, stick, air
	#Firearms
	register new shaped recipe for iron horse armor named "<light gray>Flintlock Pistol" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 1):", "1" using air, air, cobblestone, cobblestone, cobblestone, stick, air, stick, stick
	register new shaped recipe for iron horse armor named "<light gray>Iron Musket" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 1):", "1" using air, air, cobblestone, iron ingot, iron ingot, stick, air, stick, stick
	register new shaped recipe for iron horse armor named "<light gray>Iron Pistol" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 8):", "8" using air, air, iron ingot, iron ingot, iron ingot, stick, air, stick, stick
	register new shaped recipe for iron horse armor named "<light gray>Redstone Repeater" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 30):", "30" using air, air, iron ingot, iron ingot, iron ingot, redstone block, air, stick, redstone block
	register new shaped recipe for iron horse armor named "<light gray>E-45s" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 18):", "18" using air, air, quartz block, quartz block, quartz block, leather, air, stick, leather
	register new shaped recipe for golden horse armor named "<light gray>Redgrave Sawn-Off" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 5):", "5" using air, air, quartz block, gold ingot, gold ingot, iron ingot, air, stick, iron ingot

#Lance damage correction
on damage:
	if projectile exists:
		set {_JAVTYPE} to metadata value "JavType" of projectile
		if {_JAVTYPE} is 1:
			set damage to 1.5
		else if {_JAVTYPE} is 2:
			set damage to 2.5
		else if {_JAVTYPE} is 3:
			set damage to 3.5
		else if {_JAVTYPE} is 4:
			set damage to 4.5
		else if {_JAVTYPE} is 5:
			set damage to 5
		else if {_JAVTYPE} is 6:
			set damage to 3.5
	else if the name of the attacker's tool contains "<bold>Wooden Lance":
		set damage to 2
	else if the name of the attacker's tool contains "<bold>Stone Lance":
		set damage to 3
	else if the name of the attacker's tool contains "<bold>Iron Lance":
		set damage to 4
	else if the name of the attacker's tool contains "<bold>Golden Lance":
		set damage to 3
	else if the name of the attacker's tool contains "<bold>Diamond Lance":
		set damage to 5
	else if the name of the attacker's tool contains "Crusader's Lance":
		set damage to 5

#Skill Definitions Start Here

#Periodicals
every 2 seconds:
	loop all players:
		#Bold Fighter
		if the 3rd line of the lore of the loop-player's tool contains "Bold Fighter":
			loop all entities in radius 10 of the loop-player:
				if loop-entity-2 is alive:
					apply strength 2 to loop-entity-2 for 2 seconds
		#Leggings Skills
		if the lore of the loop-player's leggings contains "Regeneration":
			apply regeneration 2 to loop-player for 2 seconds
		else if the lore of the loop-player's leggings contains "Strength":
			apply strength 2 to loop-player for 2 seconds
		else if the lore of the loop-player's leggings contains "Swiftness":
			apply swiftness 2 to loop-player for 2 seconds
		else if the lore of the loop-player's leggings contains "Resistance":
			apply resistance 2 to loop-player for 2 seconds
		#Chestplate Skills - Stat Increases
		#HP Up
		if the lore of the loop-player's chestplate contains "HP":
			if {skillhpUp.%loop-player%} is not set:
				set {skillhpUp.%loop-player%} to true
				add 10 to {hpbuff.%loop-player%}
				set the loop-player's maximum health to (({hp.%loop-player%} / 2) + ({hpbuff.%loop-player%} / 2))
		else:
			if {skillhpUp.%loop-player%} is true:
				clear {skillhpUp.%loop-player%}
				subtract 10 from {hpbuff.%loop-player%}
				set the loop-player's maximum health to (({hp.%loop-player%} / 2) + ({hpbuff.%loop-player%} / 2))
		#STR Up
		if the lore of the loop-player's chestplate contains "STR":
			if {skillstrUp.%loop-player%} is not set:
				set {skillstrUp.%loop-player%} to true
				add 10 to {strbuff.%loop-player%}
		else:
			if {skillstrUp.%loop-player%} is set:
				clear {skillstrUp.%loop-player%}
				subtract 10 from {strbuff.%loop-player%}
		#SKL Up
		if the lore of the loop-player's chestplate contains "SKL":
			if {skillsklUp.%loop-player%} is not set:
				set {skillsklUp.%loop-player%} to true
				add 20 to {sklbuff.%loop-player%}
		else:
			if {skillsklUp.%loop-player%} is true:
				clear {skillsklUp.%loop-player%}
				subtract 20 from {sklbuff.%loop-player%}
		#SPD Up
		if the lore of the loop-player's chestplate contains "SPD":
			if {skillspdUp.%loop-player%} is not set:
				set {skillspdUp.%loop-player%} to true
				add 10 to {spdbuff.%loop-player%}
		else if {skillspdUp.%loop-player%} is true:
			clear {skillspdUp.%loop-player%}
			subtract 10 from {spdbuff.%loop-player%}
		#MAG Up
		if the lore of the loop-player's chestplate contains "MAG":
			if {skillmagUp.%loop-player%} is not set:
				set {skillmagUp.%loop-player%} to true
				add 10 to {resbuff.%loop-player%}
		else if {skillmagUp.%loop-player%} is true:
			clear {skillmagUp.%loop-player%}
			subtract 10 from {resbuff.%loop-player%}
		#DEF Up
		if the lore of the loop-player's chestplate contains "DEF":
			if {skilldefUp.%loop-player%} is not set:
				set {skilldefUp.%loop-player%} to true
				add 10 to {defbuff.%loop-player%}
		else if {skilldefUp.%loop-player%} is true:
			clear {skilldefUp.%loop-player%}
			subtract 10 from {defbuff.%loop-player%}
		if the 2nd line of the lore of loop-player's tool contains "Brave Blade":
			subtract 15 from {spdbuff.%loop-player%}
			wait 2 seconds
			add 15 to {spdbuff.%loop-player%}
			

every 2 seconds:
	#Power Within
	loop all players:
		if the 1st line of the lore of loop-player's tool contains "Power Within":
			damage loop-player by 0.5 with fake cause fall
			add 20 to {strbuff.%loop-player%}
			add 20 to {defbuff.%loop-player%}
			add 20 to {spdbuff.%loop-player%}
			add 20 to {sklbuff.%loop-player%}
			add 20 to {resbuff.%loop-player%}
			wait 2 seconds
			subtract 20 from {strbuff.%loop-player%}
			subtract 20 from {defbuff.%loop-player%}
			subtract 20 from {spdbuff.%loop-player%}
			subtract 20 from {sklbuff.%loop-player%}
			subtract 20 from {resbuff.%loop-player%}

#On-Damage Buff/Debuff Skills (Time Sensitive)
on damage:
	#Darting Blow
	if 1st line of the lore of attacker's tool contains "Darting Blow":
		if {DBCD.%attacker%} is not true:
			add 30 to {spdbuff.%attacker%}
			set {DBCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {spdbuff.%attacker%}
			send "<bold>Darting Blow wore off!" to the attacker
			wait 10 seconds
			clear {DBCD.%attacker%}
			send "<bold>Darting Blow ready!" to the attacker
	#Armoured Blow
	else if 1st line of the lore of attacker's tool contains "Armoured Blow":
		if {ABCD.%attacker%} is not true:
			add 30 to {defbuff.%attacker%}
			set {ABCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {defbuff.%attacker%}
			send "<bold>Armoured Blow wore off!" to the attacker
			wait 10 seconds
			clear {ABCD.%attacker%}
			send "<bold>Armoured Blow ready!" to the attacker
	#Death Blow
	else if 1st line of the lore of attacker's tool contains "Death Blow":
		if {DBCD.%attacker%} is not true:
			add 30 to {strbuff.%attacker%}
			set {DBCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {strbuff.%attacker%}
			send "<bold>Death Blow wore off!" to the attacker
			wait 10 seconds
			clear {DBCD.%attacker%}
			send "<bold>Death Blow ready!" to the attacker
	#Steady Blow
	else if 1st line of the lore of attacker's tool is "Steady Blow":
		if {SteadyBlow.%attacker%} is not true:
			add 20 to {strbuff.%attacker%}
			add 20 to {defbuff.%attacker%}
			set {SteadyBlow.%attacker%} to true
			wait 7 seconds
			subtract 20 from {strbuff.%attacker%}
			subtract 20 from {defbuff.%attacker%}
			send "<bold>Steady Blow wore off!" to the attacker
			wait 14 seconds
			clear {SteadyBlow.%attacker%}
			send "<bold>Steady Blow ready!" to the attacker
	#Swift Sparrow
	else if 1st line of the lore of attacker's tool contains "Swift Sparrow":
		if {SwiftSparrow.%attacker%} is not true:
			add 20 to {spdbuff.%attacker%}
			add 20 to {strbuff.%attacker%}
			set {SwiftSparrow.%attacker%} to true
			wait 7 seconds
			subtract 20 from {spdbuff.%attacker%}
			subtract 20 from {strbuff.%attacker%}
			send "<bold>Swift Sparrow wore off!" to the attacker
			wait 14 seconds
			clear {SwiftSparrow.%attacker%}
			send "<bold>Swift Sparrow ready!" to the attacker
	#Warding Blow
	if 1st line of the lore of attacker's tool contains "Warding Blow":
		if {DBCD.%attacker%} is not true:
			add 30 to {resbuff.%attacker%}
			set {WBCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {resbuff.%attacker%}
			send "<bold>Warding Blow wore off!" to the attacker
			wait 10 seconds
			clear {WBCD.%attacker%}
			send "<bold>Warding Blow ready!" to the attacker
	#Mirror Force
	if 1st line of the lore of attacker's tool contains "Mirror Force":
		if {MFCD.%attacker%} is not true:
			add 20 to {resbuff.%attacker%}
			add 20 to {strbuff.%attacker%}
			set {MFCD.%attacker%} to true
			wait 7 seconds
			subtract 20 from {resbuff.%attacker%}
			subtract 20 from {strbuff.%attacker%}
			send "<bold>Mirror Force wore off!" to the attacker
			wait 14 seconds
			clear {DBCD.%attacker%}
			send "<bold>Mirror Force ready!" to the attacker			
	#Stances
	#Steady Stance
	else if the 1st line of the lore of the victim's tool contains "Steady Stance":
		if {steadystance.%victim%} is not set:
			set {steadystance.%victim%} to true
			add 20 to {defbuff.%victim%}
			wait 2 seconds
			subtract 20 from {defbuff.%victim%}
			clear {steadystance.%victim%}
	#Swift Stance
	else if the 1st line of the lore of the victim's tool contains "Swift Stance":
		if {swiftstance.%victim%} is not set:
			add 20 to {spdbuff.%victim%}
			set {swiftstance.%victim%} to true
			wait 2 second
			subtract 20 from {spdbuff.%victim%}
			clear {swiftstance.%victim%}
	#Warding Stance
	else if the 1st line of the lore of the victim's tool contains "Warding Stance":
		if {wardingstance.%victim%} is not set:
			set {wardingstance.%victim%} to true
			add 20 to {resbuff.%victim%}
			wait 2 second
			subtract 20 from {resbuff.%victim%}
			clear {wardingstance.%victim%}
	#Fierce Stance
	else if the 1st line of the lore of the victim's tool contains "Fierce Stance":
		if {fiercestance.%victim%} is not set:
			add 20 to {strbuff.%victim%}
			set {fiercestance.%victim%} to true
			wait 2 second
			subtract 20 from {strbuff.%victim%}
			clear {fiercestance.%victim%}
	#Kindled-Fire Sword
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if {SWLance.%attacker%} is not set:
				add 20 to {strbuff.%attacker%}
				add 20 to {defbuff.%attacker%}
				set {KFSword.%attacker%} to true
				wait 5 seconds
				subtract 20 from {strbuff.%attacker%}
				subtract 20 from {defbuff.%attacker%}
				wait 10 seconds
				clear {KFSword.%attacker%}
				send "<gold>Kindled-Fire Sword's unique refine is recharged!"
	#Swift-Winds Lance
	if the name of the attacker's tool is "<gold><bold>Swift-Winds Lance":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if {SWLance.%attacker%} is not set:
				add 20 to {strbuff.%attacker%}
				add 20 to {spdbuff.%attacker%}
				set {SWLance.%attacker%} to true
				wait 5 seconds
				subtract 20 from {strbuff.%attacker%}
				subtract 20 from {spdbuff.%attacker%}
				wait 10 seconds
				clear {SWLance.%attacker%}
				send "<gold>Swift-Wind Lance's unique refine is recharged!"
	#Durandal
	else if the name of the attacker's tool contains "<gold><bold>Durandal":
		if the 6th line of the lore of the attacker's tool contains "<white><bold>Refined: Unique":
			remove strength from the attacker
			remove swiftness from the attacker
			apply strength 2 to the attacker for 10 seconds
			apply swiftness 2 to the attacker for 10 seconds
		if damage is more than 4.5:
			add damage * 0.5 to {crushing.%attacker%}
	#Fensalir
	if the name of the attacker's tool contains "<gold><bold>Fensalir":
		loop all players in radius 10 of the attacker:
			if {party.%loop-player%} is {party.%attacker%}:
				if the 6th line of the lore of the attacker's tool contains "<white><bold>Refined: Unique":
					add 30 to {strbuff.%attacker%}
					add 30 to {sklbuff.%attacker%}
					wait 1 second
					subtract 30 from {strbuff.%attacker%}
					subtract 30 from {sklbuff.%attacker%}
				exit 1 loop
	#Tyrfing
	if the name of the attacker's tool contains "<gold><bold>Tyrfing":
		if the 6th line of the lore of the victim's tool contains "<white><bold>Refined: Unique":
			loop all players in radius 10 of the attacker:
				if {party.%loop-player%} is {party.%attacker%}:
					add 40 to {strbuff.%attacker%}
					add 40 to {defbuff.%attacker%}
					wait 1 second
					subtract 40 from {strbuff.%attacker%}
					subtract 40 from {defbuff.%attacker%}
					exit 1 loop
	#Bonds
	else if the 1st line of the lore of the attacker's tool contains "Bond":
		if {party.%attacker%} is set:
			loop all players in radius 10 of the attacker:
				if {party.%loop-player%} is {party.%attacker%}:
					set {_bondOK} to 1
					exit 1 loop
		if {_bondOK} is 1:
			if the 1st line of the lore of the attacker's tool contains "STR":
				add 40 to {strbuff.%attacker%}
				wait 1 second
				subtract 40 from {strbuff.%attacker%}
			else if the 1st line of the lore of the attacker's tool contains "DEF":
				add 40 to {defbuff.%attacker%}
				wait 1 second
				subtract 40 from {defbuff.%attacker%}
			else if the 1st line of the lore of the attacker's tool contains "SKL":
				add 40 to {sklbuff.%attacker%}
				wait 1 second
				subtract 40 from {sklbuff.%attacker%}
			else if the 1st line of the lore of the attacker's tool contains "MAG":
				add 40 to {resbuff.%attacker%}
				wait 1 second
				subtract 40 from {resbuff.%attacker%}
	#Solos
	else if the 1st line of the lore of the attacker's tool contains "Solo":
		if {party.%attacker%} is not set:
			set {_soloOK} to 1
		else:
			loop all players in radius 10 of the attacker:
				if {party.%loop-player%} is {party.%attacker%}:
					set {_playerFound} to 1
					exit 1 loop
			if {_playerFound} is not 1:
				set {_soloOK} to 1
			if {_soloOK} is 1:
				if the 1st line of the lore of the attacker's tool contains "STR":
					add 40 to {strbuff.%attacker%}
					wait 1 second
					subtract 40 from {strbuff.%attacker%}
				else if the 1st line of the lore of the attacker's tool contains "DEF":
					add 40 to {defbuff.%attacker%}
					wait 1 second
					subtract 40 from {defbuff.%attacker%}
				else if the 1st line of the lore of the attacker's tool contains "SKL":
					add 40 to {sklbuff.%attacker%}
					wait 1 second
					subtract 40 from {sklbuff.%attacker%}
				else if the 1st line of the lore of the attacker's tool contains "MAG":
					add 40 to {resbuff.%attacker%}
					wait 1 second
					subtract 40 from {resbuff.%attacker%}
	#Smokes
	else if the 3rd line of the lore of the attacker's tool contains "Smoke":
		loop all entities in radius 10 of the victim:
			if loop-entity is not the attacker:
				if loop-entity is not the victim:
					if {party.%loop-entity%} is not {party.%attacker%}:
						if the 3rd line of the lore of the attacker's tool contains "STR":
							subtract 10 from {strbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {strbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "SPD":
							subtract 10 from {spdbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {spdbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "SKL":
							subtract 15 from {sklbuff.%loop-entity%}
							wait 1.5 seconds
							add 15 to {sklbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "DEF":
							subtract 10 from {defbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {defbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "MAG":
							subtract 10 from {resbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {resbuff.%loop-entity%}
	#Sabotage Attack
	if the 2nd line of the lore of the attacker's tool contains "Sabotage Attack":
		remove weakness from the victim
		apply weakness 2 to the victim for 5 seconds
	#Sabotage Speed
	else if the 2nd line of the lore of the attacker's tool contains "Sabotage Speed":
		remove slowness from the victim
		apply slowness 2 to the victim for 5 seconds
	#Poison Strike
	else if the 2nd line of the lore of the attacker's tool contains "Poison Strike":
		remove wither from the victim
		apply wither 3 to the victim for 5 seconds
	#Mystic Boost
	else if the 2nd line of the lore of the attacker's tool contains "Mystic Boost":
		heal the attacker by 1.5 hearts
	#Windsweep
	else if the 2nd line of the lore of the attacker's tool contains "Windsweep":
		if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than or equal to ({spd.%victim%} + {spdbuff.%victim%} + 15):
			remove weakness from the victim
			apply weakness 6 to the victim for 3 seconds
	#Boost Skills
	#Flame Boost
	if the 2nd line of the lore of the attacker's tool contains "Flame Boost":
		if (attacker's health - victim's health) is more than or equal to 6:
			add 15 to {strbuff.%attacker%}
			add 15 to {spdbuff.%attacker%}
			add 15 to {sklbuff.%attacker%}
			wait 1.5 seconds
			subtract 15 from {strbuff.%attacker%}
			subtract 15 from {spdbuff.%attacker%}
			subtract 15 from {sklbuff.%attacker%}
	#Earth Boost
	if the 2nd line of the lore of the victim's tool contains "Earth Boost":
		if (victim's health - attacker's health) is more than or equal to 6:
			add 15 to {defbuff.%victim%}
			add 15 to {spdbuff.%victim%}
			add 15 to {resbuff.%victim%}
			wait 1.5 seconds
			subtract 15 from {defbuff.%victim%}
			subtract 15 from {spdbuff.%victim%}
			subtract 15 from {resbuff.%victim%}
	#Aqua Boost
	if the 2nd line of the lore of the attacker's tool contains "Aqua Boost":
		if (attacker's health - victim's health) is more than or equal to 6:
			add 15 to {resbuff.%attacker%}
			add 15 to {spdbuff.%attacker%}
			add 15 to {sklbuff.%attacker%}
			wait 1.5 seconds
			subtract 15 from {resbuff.%attacker%}
			subtract 15 from {spdbuff.%attacker%}
			subtract 15 from {sklbuff.%attacker%}
	#Other
	#Gae Bolg
	if the name of the victim's tool contains "<gold><bold>Gae Bolg":
		if victim's health is less than (victim's maximum health * 0.5):
			if {vanready.%victim%} is not set:
				cancel event
				send "<gold>%victim%'s Vantage skill activated!" to the attacker
				send "<gold>%victim%'s Vantage skill activated!" to the victim
				damage the attacker by (damage * 0.5)
				push the attacker backwards at speed 1.5
				set {vanready.%victim%} to 1
				wait 15 seconds
				clear {vanready.%victim%}
		subtract 50 from {sklbuff.%attacker%}
		wait 1 second
		add 50 to {sklbuff.%attacker%}
	#Vantage (Perk)
	set {_sklcheck.%victim%} to checkSlots(victim,"Vantage")
	if victim's health is less than (victim's health / 2):
		if {_sklcheck.%victim%} is 1:
			if {vanready.%victim%} is set:
				cancel event
				send "%victim%'s Vantage skill activated!" to the attacker
				send "%victim%'s Vantage skill activated!" to the victim
				damage the attacker by damage * 0.5
				push the attacker backwards at speed 1
				clear {vanready.%victim%}
				wait 7.5 seconds
				set {vanready.%victim%} to 1
	#Vantage
	if the 2nd line of the lore of the victim's tool contains "Vantage":
		if the victim's health is less than (victim's maximum health * 0.50):
			if the name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
				loop all entities in radius 4 of the victim:
					if loop-entity is attacker:
						set {_cc} to 1
				if {_cc} is 1:
					if victim's tool is not a bow:
						if victim's tool is not a book:
							if victim's tool is not blaze rod:
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
								set {vancooldown.%victim%} to true
								wait 10 seconds
								clear {vancooldown.%victim%}
							else if the 1st line of the lore of the victim's tool contains "Close Counter":
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
								set {vancooldown.%victim%} to true
								wait 10 seconds
								clear {vancooldown.%victim%}
						else if the 1st line of the lore of the victim's tool contains "Close Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
							set {vancooldown.%victim%} to true
							wait 10 seconds
							clear {vancooldown.%victim%}
					else if the 1st line of the lore of the victim's tool contains "Close Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
						set {vancooldown.%victim%} to true
						wait 10 seconds
						clear {vancooldown.%victim%}
				else if victim's tool is bow:
					if victim's tool is book:
						if victim's tool is blaze rod:
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
							set {vancooldown.%victim%} to true
							wait 10 seconds
							clear {vancooldown.%victim%}
						else if the 1st line of the lore of the victim's tool contains "Distant Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
							set {vancooldown.%victim%} to true
							wait 10 seconds
							clear {vancooldown.%victim%}
					else if the 1st line of the lore of the victim's tool contains "Distant Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
						set {vancooldown.%victim%} to true
						wait 10 seconds
						clear {vancooldown.%victim%}
				else if the 1st line of the lore of the victim's tool contains "Distant Counter":
					damage the attacker by damage * 0.50
					push the attacker upwards at speed 0.25
					push the attacker backwards at speed 0.5
					set {vancooldown.%victim%} to true
					wait 10 seconds
					clear {vancooldown.%victim%}

#In-Combat Skills	
on damage:
	#PVP Check
	if attacker is player:
		if victim is player:
			if attacker is not citizen:
				if victim is not citizen:
					if {peaceful.%victim%} is 1:
						cancel event
						send "<light red><bold>This player has PVP disabled! You cannot harm them until they re-enable PVP!" to the attacker
					else if {peaceful.%attacker%} is 1:
						cancel event
						send "<light red><bold>You have PVP disabled! You cannot harm other players until you re-enable PVP!" to the attacker
	#Bonus Blade
	if the 2nd line of the lore of the attacker's tool contains "Bonus Blade":
		set {_oldSTR} to {strbuff.%attacker%}
		set {_oldDEF} to {defbuff.%attacker%}
		set {_oldSPD} to {spdbuff.%attacker%}
		set {_oldMAG} to {resbuff.%attacker%}
		set {_oldSKL} to {sklbuff.%attacker%}
		set {strbuff.%attacker%} to {strbuff.%attacker%} * 1.5
		set {defbuff.%attacker%} to {defbuff.%attacker%} * 1.5
		set {spdbuff.%attacker%} to {spdbuff.%attacker%} * 1.5
		set {resbuff.%attacker%} to {resbuff.%attacker%} * 1.5
		set {sklbuff.%attacker%} to {sklbuff.%attacker%} * 1.5
		set {_BB.%attacker%} to true
	if the 2nd line of the lore of the victim's tool contains "Bonus Blade":
		set {_oldSTR.%victim%} to {strbuff.%victim%}
		set {_oldDEF.%victim%} to {defbuff.%victim%}
		set {_oldSPD.%victim%} to {spdbuff.%victim%}
		set {_oldres.%victim%} to {resbuff.%victim%}
		set {_oldSKL.%victim%} to {sklbuff.%victim%}
		set {strbuff.%victim%} to {strbuff.%victim%} * 1.5
		set {defbuff.%victim%} to {defbuff.%victim%} * 1.5
		set {spdbuff.%victim%} to {spdbuff.%victim%} * 1.5
		set {resbuff.%victim%} to {resbuff.%victim%} * 1.5
		set {sklbuff.%victim%} to {sklbuff.%victim%} * 1.5
		set {_bb.%victim%} to true
	#Weapon Might Adjustments
	#Magic
	if projectile exists:
		#Tomes
		set {_tome} to metadata value "TomeEff" of the projectile
		if {_tome} is "Fire":
			add 8 to damage
			play 40 (lava pop with speed 1) at the victim
		else if {_tome} is "Elthunder":
			strike lightning effect at the victim
			add 10 to damage
		else if {_tome} is "Excalibur":
			play 60 (light green wool break with speed 1) at the victim
			add 13 to damage
			if victim is not on ground:
				set damage to damage * 1.5
		else if {_tome} is "Dire Thunder":
			add 15 to damage
			set damage to damage * 2
		set {_isSpell} to metadata value "SPELL" of projectile
		if {_isSpell} is 1:
			set {_spelleffect1} to metadata value "SpellEffect1" of projectile
			set {_spelleffect2} to metadata value "SpellEffect2" of projectile
			set damage to 1
			set {_recoil} to 0
			set {_forloop} to 1
			set {_loc} to location of the victim
			loop 2 times:
				#Ember
				if {_spelleffect%{_forloop}%} is 1:
					ignite the victim
					play 5 (lava pop with speed 1) at the victim
					set damage to damage + 3
					add 0.5 to {_recoil}
				#Spark
				if {_spelleffect%{_forloop}%} is 2:
					play 10 (critical hit with speed 1) at the victim
					show firework's spark on the victim
					set damage to damage + 6
					add 1 to {_recoil}
				#Frost
				if {_spelleffect%{_forloop}%} is 3:
					play 5 (ice break with speed 1) at the victim
					apply slowness 1 to the victim for 5 seconds
					send "<cyan><bold>%attacker% slowed you with a Frost spell!"
					set damage to damage + 2
				#Gust
				if {_spelleffect%{_forloop}%} is 4:
					play 5 (green wool break with speed 1) at the victim
					push the victim backwards at speed 1.5
					set damage to damage + 3
					add 0.5 to {_recoil}
				#Fire
				if {_spelleffect%{_forloop}%} is 5:
					play 15 (lava pop with speed 1) at the victim
					ignite the victim
					set damage to damage + 5
					add 1 to {_recoil}
					loop blocks in radius 1 of {_loc}:
						loop-block is air
						set loop-block to fire
				#Thunder
				if {_spelleffect%{_forloop}%} is 6:
					play 20 (critical hit with speed 1) at the victim
					show firework's spark on the victim
					set damage to damage + 8
					add 1.5 to {_recoil}
				#Hail
				if {_spelleffect%{_forloop}%} is 7:
					play 15 (ice break with speed 1) at the victim
					apply slowness 2 to the victim for 5 seconds
					send "<cyan><bold>%attacker% slowed you with a Hail spell!"
					set damage to damage + 3
					add 1 to {_recoil}
				#Wind
				if {_spelleffect%{_forloop}%} is 8:
					play 15 (green wool break with speed 1) at the victim
					push the victim backwards at speed 2
					push the victim upwards at speed 0.5
					set damage to damage + 4.5
					add 1 to {_recoil}
				#Elfire
				if {_spelleffect%{_forloop}%} is 9:
					ignite the victim
					play 5 (mob spawner flames with speed 1) at the victim
					set damage to damage + 9
					add 1.5 to {_recoil}
					loop blocks in radius 2 of {_loc}:
						loop-block is air
						set loop-block to fire
				#Thoron
				if {_spelleffect%{_forloop}%} is 10:
					set damage to damage + 12
					strike lightning effect at the victim
					add 2.5 to {_recoil}
				#Blizzard
				if {_spelleffect%{_forloop}%} is 11:
					play 40 (ice break with speed 1) at the victim
					play 40 (snowball break with speed 1) at the victim
					apply slowness 3 to the victim for 5 seconds
					send "<cyan><bold>%attacker% slowed you with a Blizzard spell!"
					set damage to damage + 4.5
					add 1.5 to {_recoil}
				#Tornado
				if {_spelleffect%{_forloop}%} is 12:
					play 40 (critical hit with speed 1) at the victim
					play 40 (green wool break with speed 1) at the victim
					push the victim backwards at speed 3
					push the victim upwards at speed 1.5
					set damage to damage + 5.5
					add 1.5 to {_recoil}
				#Bolganone
				if {_spelleffect%{_forloop}%} is 13:
					ignite the victim
					play 10 (mob spawner flames with speed 1) at the victim
					play 20 (lava pop with speed 1) at the victim
					set damage to damage + 13
					add 2.5 to {_recoil}
					loop blocks in radius 3 of {_loc}:
						loop-block is air
						set loop-block to fire
				#Aurora
				if {_spelleffect%{_forloop}%} is 14:
					show 80 (firework's spark with speed 1) at the victim
					set damage to damage + 14.5
					strike lightning effect at the victim
					strike lightning effect at the victim
					add 2.5 to {_recoil}
				#Nosferatu
				if {_spelleffect%{_forloop}%} is 15:
					show 60 (purple wool break with speed 1) at the victim
					show 60 (black wool break with speed 1) at the victim
					set damage to damage + 3.5
					heal the attacker by damage
					add 1.5 to {_recoil}
				#Spellblade
				if {_spelleffect%{_forloop}%} is 17:
					show 80 (light green wool break with speed 1) at the victim
					show 80 (critical hit with speed 1) at the victim
					set damage to damage + floor((({strbuff.%attacker%}) + ({defbuff.%attacker%} / 2) + ({resbuff.%attacker%} / 2) + ({spdbuff.%attacker%} / 2) + ({sklbuff.%attacker%} / 2)) ^ 0.75)
					add damage / 2 to {_recoil}
				#Forseti
				if {_spelleffect%{_forloop}%} is 18:
					show 80 (light green wool break with speed 1) at the victim
					show 80 (critical hit with speed 1) at the victim
					push the victim backwards at speed 2
					set damage to damage + 7.5
					add 3.5 to {_recoil}
					if attacker's health is attacker's maximum health:
						set damage to damage * 2
						add 1.5 to {_recoil}
				#Naga
				if {_spelleffect%{_forloop}%} is 19:
					show 80 (yellow wool break with speed 1) at the victim
					show 80 (critical hit with speed 1) at the victim
					show firework's spark on the victim
					set damage to damage + 10
					if victim is ender dragon:
						set damage to damage * 2
						send "<yellow>Dealt effective damage!" to the attacker
					else if {class.%victim%} is "Dragonborn":
						set damage to damage * 2
						send "<yellow>Dealt effective damage!" to the attacker
					else if {class.%victim%} is "Manakete":
						set damage to damage * 2
						send "<yellow>Dealt effective damage!" to the attacker
					else if {class.%victim%} is "Divine Dragon":
						set damage to damage * 2
						send "<yellow>Dealt effective damage!" to the attacker
					else if the lore of the victim's tool contains "Loptous":
						set damage to damage * 2
						send "<yellow>Dealt effective damage! (Loptous)" to the attacker
					add 3.5 to {_recoil}
				#Loptous
				if {_spelleffect%{_forloop}%} is 20:
					show 60 (obsidian break with speed 1) at the victim
					show 40 (smoke with speed 0) at the victim
					set damage to damage + 10
				#Stone
				if {_spelleffect%{_forloop}%} is 21:
					show 80 (stone break with speed 1) at the victim
					apply weakness 10 to the victim for 2 seconds
					apply slowness 10 to the victim for 2 seconds
					set damage to damage + 1.5
					add 5 to {_recoil}
				#Rescue:
				if {_spelleffect%{_forloop}%} is 22:
					show 80 (blue wool break with speed 1) at the victim
					set damage to 0
					teleport the victim to the attacker
					add 5 to {_recoil}
				#Slipgate
				if {_spelleffect%{_forloop}%} is 23:
					show 80 (blue wool break with speed 1) at the attacker
					set damage to 0
					teleport the attacker to the victim
					add 5 to {_recoil}
				#Silence
				if {_spelleffect%{_forloop}%} is 24:
					show 60 (chest break with speed 1) at the victim
					set damage to damage + 1.5
					apply weakness 4 to the victim for 4 seconds
					add 1.5 to {_recoil}
				#Thief
				if {_spelleffect%{_forloop}%} is 25:
					show 60 (cobweb break with speed 1) at the victim
					set damage to damage + 1.5
					chance of 35%:
						drop the victim's tool at the victim
						damage the victim's tool by 9999
				#Light
				if {_spelleffect%{_forloop}%} is 16:
					set damage to damage + 4.5
					if victim is monster:
						set damage to damage * 2
						play 80 (glowstone break with speed 0) at the victim
						add 3.5 to {_recoil}
					else:
						play 40 (glowstone break with speed 0) at the projectile
						add 2 to {_recoil}
				add 1 to {_forloop}
	#Weapon Ranks
	set {_tmp} to (5 - {lvl.%attacker%})
	if {_tmp} is less than 1:
		set {_tmp} to 1
	if the attacker's tool is a sword:
		if {weaponrank.%attacker%::swords} is more than or equal to 15000:
			if {weapongrade.%attacker%::swords} is not "<gold><bold>S":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<gold><bold>---===Weapon Rank Up!===---" with subtitle "<gold><bold>Swords increased to S rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::swords} to "<gold><bold>S"
			set damage to damage + 5
		else if {weaponrank.%attacker%::swords} is more than or equal to 7500:
			if {weapongrade.%attacker%::swords} is not "A":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Swords increased to A rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::swords} to "A"
			set damage to damage + 4
		else if {weaponrank.%attacker%::swords} is more than or equal to 3750:
			if {weapongrade.%attacker%::swords} is not "B":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Swords increased to B rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::swords} to "B"
			set damage to damage + 3
		else if {weaponrank.%attacker%::swords} is more than or equal to 1875:
			if {weapongrade.%attacker%::swords} is not "C":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Swords increased to C rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::swords} to "C"
			set damage to damage + 2
		else if {weaponrank.%attacker%::swords} is more than or equal to 900:
			if {weapongrade.%attacker%::swords} is not "D":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Swords increased to D rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::swords} to "D"
			set damage to damage + 1
		#Swords Critical
		chance of ({skl.%attacker%} + {sklbuff.%attacker%} + ({weaponrank.%attacker%::swords} ^ 0.3) ^ 0.25)%:
			set damage to damage * 2
			send "<gold><bold>CRITICAL HIT!" to the attacker
		if {prfWeaponType.%attacker%} is 0:
			add ceil((final damage * 2.35) + {_tmp}) to {weaponrank.%attacker%::swords}
		else:
			add floor((final damage * 2) + {_tmp}) to {weaponrank.%attacker%::swords}
	#Axes WR
	else if the attacker's tool is an axe:
		if {weaponrank.%attacker%::axes} is more than or equal to 15000:
			if {weapongrade.%attacker%::axes} is not "<gold><bold>S":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<gold><bold>---===Weapon Rank Up!===---" with subtitle "<gold><bold>Axes increased to S rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::axes} to "<gold><bold>S"
			set damage to damage + 5
		else if {weaponrank.%attacker%::axes} is more than or equal to 7500:
			if {weapongrade.%attacker%::axes} is not "A":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Axes increased to A rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::axes} to "A"
			set damage to damage + 4
		else if {weaponrank.%attacker%::axes} is more than or equal to 3750:
			if {weapongrade.%attacker%::axes} is not "B":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Axes increased to B rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::axes} to "B"
			set damage to damage + 3
		else if {weaponrank.%attacker%::axes} is more than or equal to 1875:
			if {weapongrade.%attacker%::axes} is not "C":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Axes increased to C rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::axes} to "C"
			set damage to damage + 2
		else if {weaponrank.%attacker%::axes} is more than or equal to 900:
			if {weapongrade.%attacker%::axes} is not "D":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Axes increased to D rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::axes} to "D"
			set damage to damage + 1
		#Axes Critical
		chance of ({skl.%attacker%} + {sklbuff.%attacker%} + ({weaponrank.%attacker%::axes} ^ 0.3) ^ 0.25)%:
			set damage to damage * 2
			send "<gold><bold>CRITICAL HIT!" to the attacker
		if {prfWeaponType.%attacker%} is 1:
			add ceil((final damage * 2.35) + {_tmp}) to {weaponrank.%attacker%::axes}
		else:
			add floor((final damage * 2) + {_tmp}) to {weaponrank.%attacker%::axes}
	#Lances WR
	else if the attacker's tool is a shovel:
		if {weaponrank.%attacker%::lances} is more than or equal to 15000:
			if {weapongrade.%attacker%::lances} is not "<gold><bold>S":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<gold><bold>---===Weapon Rank Up!===---" with subtitle "<gold><bold>Lances increased to S rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::lances} to "<gold><bold>S"
			set damage to damage + 5
		else if {weaponrank.%attacker%::lances} is more than or equal to 7500:
			if {weapongrade.%attacker%::lances} is not "A":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Lances increased to A rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::lances} to "A"
			set damage to damage + 4
		else if {weaponrank.%attacker%::lances} is more than or equal to 3750:
			if {weapongrade.%attacker%::lances} is not "B":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Lances increased to B rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::lances} to "B"
			set damage to damage + 3
		else if {weaponrank.%attacker%::lances} is more than or equal to 1875:
			if {weapongrade.%attacker%::lances} is not "C":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Lances increased to C rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::lances} to "C"
			set damage to damage + 2
		else if {weaponrank.%attacker%::lances} is more than or equal to 900:
			if {weapongrade.%attacker%::lances} is not "D":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Lances increased to D rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::lances} to "D"
			set damage to damage + 1
		#Lances Critical
		chance of ({skl.%attacker%} + {sklbuff.%attacker%} + ({weaponrank.%attacker%::lances} ^ 0.3) ^ 0.25)%:
			set damage to damage * 2
			send "<gold><bold>CRITICAL HIT!" to the attacker
		if {prfWeaponType.%attacker%} is 2:
			add ceil((final damage * 2.35) + {_tmp}) to {weaponrank.%attacker%::lances}
		else:
			add floor((final damage * 2) + {_tmp}) to {weaponrank.%attacker%::lances}
	#Bows WR
	else if the attacker's tool is a bow:
		if {weaponrank.%attacker%::bows} is more than or equal to 15000:
			if {weapongrade.%attacker%::bows} is not "<gold><bold>S":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<gold><bold>---===Weapon Rank Up!===---" with subtitle "<gold><bold>Bows increased to S rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::bows} to "<gold><bold>S"
			set damage to damage + 5
		else if {weaponrank.%attacker%::bows} is more than or equal to 7500:
			if {weapongrade.%attacker%::bows} is not "A":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Bows increased to A rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::bows} to "A"
			set damage to damage + 4
		else if {weaponrank.%attacker%::bows} is more than or equal to 3750:
			if {weapongrade.%attacker%::bows} is not "B":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Bows increased to B rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::bows} to "B"
			set damage to damage + 3
		else if {weaponrank.%attacker%::bows} is more than or equal to 1875:
			if {weapongrade.%attacker%::bows} is not "C":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Bows increased to C rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::bows} to "C"
			set damage to damage + 2
		else if {weaponrank.%attacker%::bows} is more than or equal to 900:
			if {weapongrade.%attacker%::bows} is not "D":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Bows increased to D rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::bows} to "D"
			set damage to damage + 1
		#Bows Critical
		chance of ({skl.%attacker%} + {sklbuff.%attacker%} + ({weaponrank.%attacker%::bows} ^ 0.3) ^ 0.25)%:
			set damage to damage * 2
			send "<gold><bold>CRITICAL HIT!" to the attacker
		if {prfWeaponType.%attacker%} is 3:
			add ceil((final damage * 2.35) + {_tmp}) to {weaponrank.%attacker%::bows}
		else:
			add floor((final damage * 2) + {_tmp}) to {weaponrank.%attacker%::bows}
	#Magic WR
	else if the name of the attacker's tool is "<yellow><bold>Magic Wand":
		if {weaponrank.%attacker%::magic} is more than or equal to 15000:
			if {weapongrade.%attacker%::magic} is not "<gold><bold>S":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<gold><bold>---===Weapon Rank Up!===---" with subtitle "<gold><bold>Magic increased to S rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::magic} to "<gold><bold>S"
			set damage to damage + 5
		else if {weaponrank.%attacker%::magic} is more than or equal to 7500:
			if {weapongrade.%attacker%::magic} is not "A":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Magic increased to A rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::magic} to "A"
			set damage to damage + 4
		else if {weaponrank.%attacker%::magic} is more than or equal to 3750:
			if {weapongrade.%attacker%::magic} is not "B":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Magic increased to B rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::magic} to "B"
			set damage to damage + 3
		else if {weaponrank.%attacker%::magic} is more than or equal to 1875:
			if {weapongrade.%attacker%::magic} is not "C":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Magic increased to C rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::magic} to "C"
			set damage to damage + 2
		else if {weaponrank.%attacker%::magic} is more than or equal to 900:
			if {weapongrade.%attacker%::magic} is not "D":
				play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at attacker for attacker
				play 20 (smoke with speed 0) at the attacker
				send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Magic increased to D rank." to attacker for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
				set {weapongrade.%attacker%::magic} to "D"
			set damage to damage + 1
		#Magic Critical
		chance of ({skl.%attacker%} + {sklbuff.%attacker%} + ({weaponrank.%attacker%::magic} ^ 0.3) ^ 0.25)%:
			set damage to damage * 2
			send "<gold><bold>CRITICAL HIT!" to the attacker
		if {prfWeaponType.%attacker%} is 4:
			add ceil((final damage * 2.35) + {_tmp}) to {weaponrank.%attacker%::magic}
		add floor((final damage * 2) + {_tmp}) to {weaponrank.%attacker%::magic}
	#Mystletainn
	if the name of the attacker's tool contains "<gold><bold>Mystletainn":
		set damage to damage + 2
	#Folkvangr
	if the name of the attacker's tool contains "<gold><bold>Folkvangr":
		set damage to damage + 2
		loop all players in radius 10 of the attacker:
			if {party.%loop-player%} is {party.%attacker%}:
				set damage to damage + 3
				exit 1 loop
	#Tyrfing
	if the name of the attacker's tool contains "<gold><bold>Tyrfing":
		set damage to damage + 2
	#Fensalir
	if the name of the attacker's tool contains "<gold><bold>Fensalir":
		set damage to damage + 2
	#Durandal
	else if the name of the attacker's tool contains "<gold><bold>Durandal":
		set damage to damage + 1
	#KF-Sword
	if the name of the attacker's tool is "<gold><bold>Kindled-Fire Sword":
		set damage to damage * 2
	#Regalia damage bonus
	if the name of the attacker's tool contains "<gold><bold>Mercurius":
		set damage to damage + 2
	else if the name of the attacker's tool contains "<gold><bold>Hauteclere":
		set damage to damage + 1
	else if the name of the attacker's tool contains "<gold><bold>Gradivus":
		set damage to damage + 2
	else if the name of the attacker's tool contains "<gold><bold>Basilikos":
		set damage to damage + 2.5
	#Cobalt Blade
	if the name of the attacker's tool is "<gold><bold>Cobalt Blade":
		set damage to damage + 5
		apply swiftness 2 to the attacker for 5 seconds
		apply strength 2 to the attacker for 5 seconds
		apply resistance 2 to the attacker for 5 seconds
		if the 6th line of the lore of the attacker's tool contains "Unique":
			set damage to damage + 5
			ignite the victim
			if damage is more than 15:
				apply strength 4 to the attacker for 5 seconds
	#Binding Shield
	if the name of the attacker's offhand tool is "<gold><bold>Binding Shield":
		if victim is an ender dragon:
			set damage to damage * 2
			apply slowness 5 to the victim for 5 seconds
	#Binding Shield DEF
	if the name of the victim's offhand tool is "<gold><bold>Binding Shield":
		set damage to damage - 1.5
	#Fire Emblem
	if the name of the victim's offhand tool is "<gold><bold>Fire Emblem":
		set damage to damage - 1.5
	#Blessed Sword
	if the name of the victim's tool is "<gold><bold>Blessed Sword":
		set damage to damage - 1.5
	if the name of the attacker's tool is "<gold><bold>Blessed Sword":
		if victim is monster:
			set damage to damage * 2
	#Devil Axe
	if the name of the attacker's tool is "<gold><bold>Devil Axe":
		set damage to damage + 4.5
		if the attacker's health is more than 3:
			damage the attacker by 1.5 heart with fake cause attack
		else:
			set the attacker's health to 0.5
		apply wither 4 to the victim for 4 seconds
		if the 6th line of the lore of the attacker's tool contains "Unique":
			set damage to damage + 6
			if the attacker's health is more than 6:
				damage the attacker by 3 heart with fake cause attack
			else:
				set the attacker's health to 0.5
	#Crusader's Lance
	if the name of the attacker's tool is "<gold><bold>Crusader's Lance":
		set damage to damage + 4
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if attacker's health is more than (attacker's maximum health * 0.5):
				set damage to damage * 1.5
	if the name of the victim's tool is "<gold><bold>Crusader's Lance":
		set damage to damage * 0.7
		if the 6th line of the lore of the victim's tool contains "Unique":
			set damage to damage * 0.8
	#Lunar Bow
	if the name of the attacker's tool is "<gold><bold>Lunar Bow":
		set damage to damage + 1.5
	#Balder Sidesword
	if the name of the victim's tool is "<gold><bold>Balder Side Sword":
		if {BSS.%victim%} is true:
			cancel event
			set {BSSBonus.%victim%} to damage
			send "<gold>Parried the enemy's attack!" to the victim
			send "<red>The enemy parried your attack!" to the attacker
			clear {BSS.%victim%}
	if the name of the attacker's tool is "<gold><bold>Balder Side Sword":
		set damage to damage + 1.5
		if {BSSBonus.%attacker%} is set:
			set damage to damage + ({BSSBonus.%attacker%} * 2)
			clear {BSSBonus.%attacker%}
	#Ragnell
	if the name of the attacker's tool contains "<gold><bold>Ragnell":
		set damage to damage + 3
	#Yamato
	if the name of the attacker's tool is "<gold><bold>Yamato":
		add 1.5 to damage
	#Meisterschwert
	if the name of the attacker's tool is "<gold><bold>Meisterschwert":
		set damage to damage * 2
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if attacker's health + {spd.%attacker%} + {spdbuff.%attacker%} is more than (victim's health + {spd.%victim%} + {spdbuff.%victim%}):
				set damage to damage * 2
	#Dire Thunder (Fallen Hero)
	if the name of the attacker's tool is "<gold><bold>Dire Thunder":
		set damage to damage * 2
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if attacker's health + {spd.%attacker%} + {spdbuff.%attacker%} is more than (victim's health + {spd.%victim%} + {spdbuff.%victim%}):
				set damage to damage * 2
	#DC Weapons
	if projectile exists:
		loop entities in radius 4 of the victim:
			if loop-entity is the attacker:
				set {_noDC} to true
		if the name of the victim's tool is "<gold><bold>Tomahawk":
			if {_noDC} is not set:
				damage the attacker by damage * 0.5
		else if the name of the victim's tool is "<gold><bold>Javelin":
			if {_noDC} is not set:
				damage the attacker by damage * 0.5
		else if the name of the victim's tool is "<gold><bold>Tornado Blade":
			if {_noDC} is not set:
				damage the attacker by damage * 0.5
	#Mystletainn
	if the name of the attacker's tool is "<gold><bold>Mystletainn":
		set damage to damage + 2
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if the attacker's health is more than 3:
				damage the attacker by 1.5 heart with fake cause attack
			else:
				set the attacker's health to 0.5
	#Tyrfing
	if the name of the victim's tool contains "<gold><bold>Tyrfing":
		if projectile exists:
			set damage to damage * 0.25
		if (victim's health - damage) < 0.5:
			set {_level} to {skl.%victim%} ^ 0.75
			if {_level} is greater than 50:
				set {_level} to 50
			chance of {_level}%:
				cancel event
				heal the victim by 10 hearts
				send "<light yellow><bold>Miracle was activated!" to victim
				play sound "item.totem.use" with volume 0.5 and pitch 1.5 at victim for victim
	#Brave Bow
	if the name of the attacker's tool is "<gold><bold>Brave Bow":
		set damage to (damage - 1.5) * 2
	#Guard Bow
	if the name of the victim's tool is "<gold><bold>Guard Bow":
		set damage to damage - 1.5
	#Rex Hasta
	if the name of the attacker's tool is "<gold><bold>Rex Hasta":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			set damage to damage + 2
	#Rhomphaia
	if the name of the attacker's tool is "<gold><bold>Rhomphaia":
		set damage to damage + (({spd.%attacker%} + {spdbuff.%attacker%}) * 0.25)
	#Falchion
	if the name of the attacker's tool contains "<gold><bold>Falchion":
		set {_damage} to damage
		chance of ({skl.%attacker%} * 0.50) - 5%:
			set {_damage} to damage * 2
			send "<yellow><bold>Dealt critical damage!" to attacker
			play sound "entity.generic.explode" with volume 0.5 and pitch 1.5 at victim for attacker
		if the victim is ender dragon or enderman:
			set damage to {_damage} * 1.5
			send "<light blue>Dealt effective against damage!" to attacker
			play sound "entity.generic.explode" with volume 0.5 and pitch 1.5 at victim for attacker
	#Binding Blade
	if the name of the victim's tool contains "<gold><bold>Binding Blade":
		if the 6th line of the lore of the victim's tool contains "<white><bold>Refined: Unique":
			if the victim's health is more than (victim's maximum health * 0.7):
				if attacker is entity:
					damage the attacker by damage * 0.25
					push the attacker upwards at speed 0.25
					push the attacker backwards at speed 0.5
					ignite the attacker
	if the name of the attacker's tool contains "<gold><bold>Binding Blade":
		set damage to damage + 2
		if the victim is ender dragon or enderman:
			set damage to damage * 1.5
			send "<light blue>Dealt effective against damage!" to attacker
			play sound "entity.generic.explode" with volume 0.5 and pitch 1.5 at victim for attacker
	#Parthia
	if the name of the attacker's tool contains "<gold><bold>Parthia":
		set damage to damage + 1
		if the 6th line of the lore of the attacker's tool contains "<white><bold>Refined: Unique":
			set damage to damage + 3
			loop all entities in radius 5 of the attacker:
				if the loop-entity is the victim:
					set damage to damage - 3
					exit 1 loop
			apply weakness 2 to the victim for 5 seconds
	if the name of the victim's tool contains "<gold><bold>Parthia":
		if projectile exists:
			set damage to damage * 0.25
	#Armads
	if the name of the victim's tool contains "<gold><bold>Armads":
		if the 6th line of the lore of the victim's tool contains "<white><bold>Refined: Unique":
			damage the attacker by damage / 4
			push the attacker upwards at speed 0.25
			push the attacker backwards at speed 1
			loop all entities in radius 5 of the victim:
				if loop-entity is the attacker:
					set {_DC} to 1
					exit 1 loop
			if {_DC} is not set:
				damage the attacker by damage * 0.5
	if the name of the attacker's tool contains "<gold><bold>Armads":
		set damage to damage + 3
	#Axtinguisher
	if the name of the attacker's tool contains "<gold><bold>Axtinguisher":
		if victim is burning:
			set damage to (damage * 1.5)
		else:
			set damage to (damage * 0.5)
	#Love is Blue
	if the name of the attacker's tool contains "<light blue><bold>Love is Blue":
		if damage cause is attack:
			set damage to damage+3
			make attacker execute command "/xp 5"
		else if projectile exists:
			set damage to damage-1
	#Scarborough Fair
	if the name of the attacker's tool contains "<light red><bold>Scarborough Fair":
		if damage cause is attack:
			set damage to damage+3
			make attacker execute command "/xp 5"
		else if projectile exists:
			set damage to damage-1
	#Crowbar
	if the name of the attacker's tool contains "<gold><bold>Crowbar":
		set damage to damage + 2.5
		set {_cbHitPitch} to a random number between 2 and 0.25
		play sound "entity.experience_orb.pickup" with volume 3 and pitch {_cbHitPitch} at victim for attacker
		play sound "entity.experience_orb.pickup" with volume 3 and pitch {_cbHitPitch} at victim for victim
	#Siegmund & Sieglinde
	if the name of the attacker's tool contains "<gold><bold>Siegmund":
		set damage to damage + 2.5
		if victim is monster:
			set damage to damage * 1.5
		loop all entities in radius 10 of the attacker:
			if {party.%loop-entity%} is {party.%attacker%}:
				add 1 to {_ally}
			else if {party.%loop-entity%} is not {party.%attacker%}:
				add 1 to {_foe}
		if {_ally} is more than {_foe}:
			set damage to damage * 1.5
			apply strength 2 to the attacker for 5 seconds
			send "<light blue>Siegmund's effect activated!" to the attacker
	if the name of the attacker's tool contains "<gold><bold>Sieglinde":
		set damage to damage + 2.5
		if victim is monster:
			set damage to damage * 1.5
	#Light Brand RES Bonus
	if the name of the attacker's tool contains "<gold><bold>Light Brand":
		set {_bonus} to ceil({res.%attacker%} + {resbuff.%attacker%} / 4)
		if {_bonus} is more than 7:
			set {_bonus} to 7
		set damage to damage + {_bonus}
	#Firearm Base Might Adjustment
	if projectile exists:
		#Super Shotgun Damage Bonus
		set {_sstest} to metadata value "SUPERSHOTGUN" of projectile
		if {_sstest} is 1:
			set damage to damage + 15
			play 20 (critical hit with speed 0) at the victim
			play 20 (lava drip with speed 0) at the victim
		set {_type} to metadata value "gunType" of projectile
		#Flintlock Pistol
		if {_type} is 1:
			set damage to damage + 5
		#Iron Musket
		else if {_type} is 2:
			set damage to damage + 6.5
		#Iron Pistol
		else if {_type} is 3:
			set damage to damage + 5
		#Redstone Rifle
		else if {_type} is 4:
			set damage to damage + 5.5
		#E-45s
		else if {_type} is 5:
			set damage to damage + 6
		#Redgrave Sawn-Off
		else if {_type} is 6:
			loop all players in radius 10 of the victim:
				if loop-player is attacker:
					set damage to damage + 9
					exit 1 loop
				set damage to damage - 1
	#Adaptive Damage Checks & Magical Denotation
	if the lore of the attacker's tool contains "Spell 1:":
		set {_magical} to 1
	else if the lore of the attacker's tool contains "Spell 2:":
		set {_magical} to 1
	if the 1st line of the lore of the attacker's tool contains "Sorcery Aura":
		set {_magical} to 1
	if {class.%attacker%} is "Dragonborn":
		set {_magical} to 1
	else if {class.%attacker%} is "Manakete":
		set {_magical} to 1
	else if {class.%attacker%} is "Divine Dragon":
		set {_magical} to 1
	else if {lb_ranged.%attacker%} is true:
		set {_magical} to 1
		clear {lb_ranged.%attacker%}
	if the name of the attacker's tool is "<gold><bold>Lunar Bow":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if ({res.%victim%} + {resbuff.%victim%}) is less than ({def.%victim%} + {defbuff.%victim%}):
				set {_magical} to 1
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
	if the name of the attacker's tool is "<gold><bold>Light Brand":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if ({res.%victim%} + {resbuff.%victim%}) is less than ({def.%victim%} + {defbuff.%victim%}):
				set {_magical} to 1
	#Helm Splitter (Global, no skill needed)
	if attacker is player:
		if attacker is not on ground:
			if attacker is sneaking:
				add 1.5 to damage
				add helmType(victim) to damage
				push the attacker downwards at speed 2
				push the victim downwards at speed 2
				play sound "entity.generic.explode" with volume 1 and pitch 1.5 at the attacker for the attacker
				set {inHangtime.%attacker%} to true
	#Refines
	if the 6th line of the lore of the attacker's tool contains "Reinforced":
		set damage to damage + 1.5
	else if the 6th line of the lore of the victim's tool contains "Warding":
		if damage cause is attack:
			set damage to damage - 1.5
		else if projectile exists:
			set damage to damage - 1.5
	else if the 6th line of the lore of the attacker's tool contains "Crushing":
		if damage is more than 7:
			add damage * 0.33 to {crushing.%attacker%}
			if {crushing.%attacker%} is more than 25:
				set {crushing.%attacker%} to 25
	if the 6th line of the lore of the attacker's tool contains "Piercing":
		set {_bypassdamage.%attacker%} to damage
		cancel event
		damage the victim by {_bypassdamage.%attacker%} * 0.75 with fake cause potion
		push the victim backwards at speed 0.75
		damage the attacker's tool by 1
	if the name of the attacker's tool contains "<gold><bold>Basilikos":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			set damage to damage * 1.5
	else if the name of the victim's tool contains "<gold><bold>Basilikos":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			set damage to damage * 1.5
	#Focus Loss
	if the 1st line of the lore of the victim's tool contains "Focus":
		if the 1st line of the lore of the victim's tool contains "STR":
			if {focusStr.%victim%} is more than 0:
				subtract {focusStr.%victim%} from {strbuff.%victim%}
				clear {focusStr.%victim%}
		else if the 1st line of the lore of the victim's tool contains "SPD":
			if {focusSPD.%victim%} is more than 0:
				subtract {focusSPD.%victim%} from {spdbuff.%victim%}
				clear {focusSpd.%victim%}
		else if the 1st line of the lore of the victim's tool contains "DEF":
			if {focusDEF.%victim%} is more than 0:
				subtract {focusDEF.%victim%} from {defbuff.%victim%}
				clear {focusDef.%victim%}
		else if the 1st line of the lore of the victim's tool contains "SKL":
			if {focusSKL.%victim%} is more than 0:
				subtract {focusSkl.%victim%} from {sklbuff.%victim%}
				clear {focusSkl.%victim%}
		else if the 1st line of the lore of the victim's tool contains "MAG":
			if {focusMag.%victim%} is more than 0:
				subtract {focusMag.%victim%} from {resbuff.%victim%}
				clear {focusMag.%victim%}
	#Closes
	if damage cause is attack:
		loop entities in radius 4 of the victim:
			if loop-entity is the attacker:
				set {_CD} to true
		#Close Defence
		if 1st line of the lore of victim's tool contains "Close Defence":
			if {_CD} is true:
				set damage to damage * 0.44
				show magical critical hit on the victim
		#Close Counter
		if the 1st line of the lore of victim's tool contains "Close Counter":
			if {_CD} is true:
				if the name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
					damage the attacker by damage / 2 with fake cause attack
					push the attacker backwards at speed 0.75
					damage the victim's tool by 10
		#Fujin Yumi CC
		else if the name of the victim's tool is "Fujin Yumi":
			if {_CD} is true:
				if the name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
					damage the attacker by damage / 2 with fake cause attack
					push the attacker backwards at speed 0.75
					damage the victim's tool by 10
	#Distants
	else if projectile exists:
		loop entities in radius 4 of the victim:
			if loop-entity is the attacker:
				set {_noDC} to true
		if 1st line of the lore of victim's tool contains "Distant Defence":
			if {_noDC} is not set:
				set damage to damage * 0.44
				show magical critical hit on the victim
		#Distant Counter
		else if 1st line of the lore of the victim's tool contains "Distant Counter":
			if {_noDC} is not set:
				damage the attacker by damage * 0.5
	#Armour Smasher
	if the 1st line of the lore of the attacker's tool contains "Armour Smasher":
		set {_bonusdamage} to helmType(victim)
		add chestType(victim) to {_bonusdamage}
		add legType(victim) to {_bonusdamage}
		add btType(victim) to {_bonusdamage}
		add {_bonusdamage} to damage
	#Warp Strike
	if the 1st line of the lore of victim's tool contains "Warp Strike":
		apply resistance 10 to the victim for 3 seconds
		teleport the victim to the attacker
		damage the attacker by 0.5 hearts
		damage the victim's tool by 1
	#Brash Assault
	if the 2nd line of the lore of the attacker's tool contains "Brash Assault":
		if the attacker's health is less than (attacker's maximum health * 0.5):
			if {BA.%attacker%} is 1:
				set damage to damage * 2
				apply strength 2 to the attacker for 2 seconds
				clear {BA.%attacker%}
			else:
				set {BA.%attacker%} to 1
	#Blades
	#Flashing Blade
	if the 1st line of the lore of the attacker's tool contains "Flashing Blade":
		set {_bonus} to ((({spd.%attacker%} + {spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) / 2)
		if {_bonus} is less than 0:
			set {_bonus} to 0
		else if {_bonus} is more than 7:
			set {_bonus} to 7
		set damage to damage + {_bonus}
	#Heavy Blade
	else if the 1st line of the lore of the attacker's tool contains "Heavy Blade":
		set {_bonus} to ((({str.%attacker%} + {strbuff.%attacker%}) - ({str.%victim%} + {strbuff.%victim%})) / 2)
		if {_bonus} is less than 0:
			set {_bonus} to 0
		else if {_bonus} is more than 7:
			set {_bonus} to 7
		set damage to damage + {_bonus}
	#Desperation
	else if the 2nd line of the lore of the attacker's tool contains "Desperation":
		if the attacker's health is less than or equal to (attacker's maximum health * 0.5):
			set damage to damage * 2
			push the victim upwards at speed 0.25
			push the victim backwards at speed 1
			send "<light blue>Desperation active!" to the attacker
	#Riposte
	if the 2nd line of the lore of the victim's tool contains "Riposte":
		if the victim's health is more than (victim's maximum health * 0.8):
			if name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
				loop all entities in radius 4 of the victim:
					if loop-entity is attacker:
						set {_cc} to 1
				if {_cc} is 1:
					if victim's tool is not a bow:
						if victim's tool is not a book:
							if victim's tool is not blaze rod:
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
							else if the 1st line of the lore of the victim's tool contains "Close Counter":
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
						else if the 1st line of the lore of the victim's tool contains "Close Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
					else if the 1st line of the lore of the victim's tool contains "Close Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
				else if victim's tool is bow:
					if victim's tool is book:
						if victim's tool is blaze rod:
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
						else if the 1st line of the lore of the victim's tool contains "Distant Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
					else if the 1st line of the lore of the victim's tool contains "Distant Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
				else if the 1st line of the lore of the victim's tool contains "Distant Counter":
					damage the attacker by damage * 0.50
					push the attacker upwards at speed 0.25
					push the attacker backwards at speed 0.5
	#Brave Blade
	if the 2nd line of the lore of the attacker's tool contains "Brave Blade":
		set damage to damage - 1.5
		set damage to damage * 2
	#Sabotage Defense
	if the 2nd line of the lore of the attacker's tool contains "Sabotage Defense":
		set damage to damage * 1.35
	#Life and Death
	if the 1st line of the lore of attacker's tool contains "Life and Death":
		set damage to damage * 1.5
	if the 1st line of the lore of victim's tool contains "Life and Death":
		set damage to damage * 1.5
	#Fury
	if the 1st line of the lore of attacker's tool contains "Fury":
		set damage to damage + 3
		if the attacker's health is more than 3:
			damage the attacker by 1.5 heart with fake cause attack
		else:
			set the attacker's health to 0.5
	#Sword Mastery
	set {_sklcheck.%attacker%} to checkSlots(attacker,"Sword Specialist")
	if {_sklcheck.%attacker%} is 1:
		if the attacker's tool is a sword:
			set damage to damage * 1.25
			chance of ({skl.%attacker%} ^ 0.5):
				set damage to damage * 1.75
				send "<cyan><bold>Critical hit!"
	#Axe Mastery
	set {_sklcheck.%attacker%} to checkSlots(attacker,"Axe Specialist")
	if {_sklcheck.%attacker%} is 1:
		if the attacker's tool is an axe:
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set damage to damage + ({_bonusdamage} / 2)
			chance of ({skl.%attacker%} ^ 0.5):
				set damage to damage * 1.75
				send "<cyan><bold>Critical hit!"
	#Bow Mastery
	set {_sklcheck.%attacker%} to checkSlots(attacker,"Ranged Specialist")
	if {_sklcheck.%attacker%} is 1:
		if the attacker's tool is a bow:
			drop 1 arrow at the victim
			#remove slowness from the victim
			#apply slowness 1 to the victim for 5 seconds
			chance of ({skl.%attacker%} ^ 0.5):
				set damage to damage * 1.75
				send "<cyan><bold>Critical hit!"
	#Double Lion
	set {_sklcheck.%attacker%} to checkSlots(attacker,"Double Lion")
	if {_sklcheck.%attacker%} is 1:
		if attacker's health is attacker's maximum health:
			set damage to damage * 2
			push the victim upwards at speed 0.25
			push the victim backwards at speed 1
			damage the attacker by 1 with fake cause fall
	#Canto
	set {_sklcheck} to checkSlots(attacker,"Canto")
	if {_sklcheck} is 1:
		if attacker is riding:
			set damage to damage * 1.5
		else:
			set damage to damage * 0.5
	#Heavy Draw
	set {_sklcheck} to checkSlots(attacker,"Heavy Draw")
	if {_sklcheck} is 1:
		if projectile exists:
			set damage to damage + 1.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set damage to damage + {_bonusdamage}
	#Unbreakable
	set {_sklcheck} to checkSlots(victim,"Unbreakable")
	if {_sklcheck} is 1:
		set damage to damage - 1.5
	#Crusader's Ward
	set {_sklcheck.%victim%} to checkSlots(victim,"Crusader's Ward")
	if {_sklcheck.%victim%} is 1:
		set damage to damage * 0.5
	#Distant Defence
	set {_sklcheck} to checkSlots(victim,"Distant Defence")
	if {_sklcheck} is 1:
		loop all entities in radius 4 of the victim:
			if loop-entity is attacker:
				set {_DD} to 1
				exit 1 loop
		if {_DD} is not set:
			set damage to damage * 0.5
	#Mystic Boost
	set {_skl} to checkSlots(attacker,"Mystic Boost")
	if {_skl} is 1:
		heal the attacker by 1.5 hearts
	#Capture
	if {capture.%attacker%} is set:
		if the 4th line of the lore of the attacker's tool contains "Capture":
			set damage to damage * 0.5
	#Thracian Difficulty
	if {perdiff.%attacker%} is more than 5:
		set {_th} to 1
	else if {perdiff.%victim%} is more than 5:
		set {_th} to 1
	if {_th} is 1:
		if {t_skl.%victim%} is set:
			set {_foeAvoid} to ({t_spd.%victim%} + {t_spdbuff.%victim%}) + ({t_skl.%victim%} + {t_sklbuff.%victim%})
		else:
			set {_foeAvoid} to ({spd.%victim%} + {spdbuff.%victim%}) + ({skl.%victim%} + {sklbuff.%victim%})
		if {_foeAvoid} is not set:
			set {_foeAvoid} to 75
		else if {_foeAvoid} is less than 1:
			set {_foeAvoid} to 75
		if {t_skl.%attacker%} is set:
			set {_playerAvoid} to ({t_spd.%attacker%} + {t_spdbuff.%attacker%}) + ({t_skl.%attacker%} + {t_sklbuff.%attacker%})
		else:
			set {_playerAvoid} to ({spd.%attacker%} + {spdbuff.%attacker%}) + ({skl.%attacker%} + {sklbuff.%attacker%})
		set {_Avoid} to ({_foeAvoid} - {_playerAvoid})
		if {_Avoid} is less than 0:
			set {_Avoid} to 0
		set {_1RN} to a random integer between 0 and {_Avoid}
		set {_2RN} to a random integer between 0 and {_Avoid}
		set {_trueHit} to (({_1RN} + {_2RN}) / 2)
		chance of {_trueHit}%:
			cancel event
			send "<light red>Your attack missed!" to the attacker
			play 20 (cloud with speed 1) at the victim
			send "<light blue>Dodged the opponent's attack!" to the victim
	#Drag Back
	if the 4th line of the lore of attacker's tool contains "Drag Back":
		push the attacker backwards at speed 1
		push the victim forwards at speed 1
	#Ethreal Grip
	if the 4th line of the lore of attacker's tool contains "Ethreal Grip":
		set damage to damage * 0.5
		apply resistance 4 to the attacker for 1 second
		push victim (direction from victim to location of attacker) at speed 4
	#Suspend
	else if the 4th line of the lore of attacker's tool contains "Suspend":
		set {_magnitude} to (y of victim's velocity)
		if {_magnitude} is less than 0:
			set {_magnitude} to {_magnitude} * -1.05
		push victim upwards at speed (({_magnitude} / 4) + 1)
	#Hit and Run
	if the 4th line of the lore of attacker's tool contains "Hit and Run":
		push the attacker backwards at speed 1.5
		damage the attacker's tool by 1
	set {_perk} to checkSlots(victim,"Guard")
	if {_perk} is 1:
		subtract 50 from {sklbuff.%attacker%}
	#Rings
	loop all items in attacker's inventory:
		if the name of the loop-item contains "Pursuit Ring":
			if attacker's health is more than (attacker's maximum health * 0.5):
				set damage to damage * 1.5
				push the victim backwards at speed 1
				exit 1 loop
		else if the name of the loop-item contains "Prayer Ring":
			if attacker's health is less than or equal to (attacker's maximum health * 0.5):
				set damage to damage * 2
				send "<light blue>The Prayer Ring caused a Critical Hit!" to the attacker
				send "<light red>The Prayer Ring caused a Critical Hit!" to the victim
				exit 1 loop
	#Gravity
	if the 3rd line of the lore of the attacker's tool contains "Gravity":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						if loop-entity is not the victim:
							remove levitation from the loop-entity
							apply levitation 2 to loop-entity for 3 seconds
	#Fear
	if the 3rd line of the lore of the attacker's tool contains "Fear":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						apply weakness 2 to loop-entity for 3 seconds
	#Restrict
	if the 3rd line of the lore of the attacker's tool contains "Restrict":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						apply slowness 2 to loop-entity for 3 seconds
	#Blowback
	if the 3rd line of the lore of the attacker's tool contains "Blowback":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						push the loop-entity upwards at speed 0.75
						push the loop-entity backwards at speed 0.75
	#Astra
	if the 5th line of the lore of attacker's tool contains "Astra":
		set {_trigger} to specialCheck(attacker, 0.65, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage * 3
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Astra was activated!" to attacker
			play 60 (nether portal break with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.5 and pitch 1 at victim for attacker
	#Glimmer
	if the 5th line of the lore of attacker's tool contains "Glimmer":
		set {_trigger} to specialCheck(attacker, 0.765, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage * 1.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Glimmer was activated!" to attacker
			play 30 (nether portal break with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Blazing Light
	if the 5th line of the lore of attacker's tool contains "Blazing Light":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set damage to damage + (damage / 2)
			loop all monsters in radius 7 of the victim:
				if loop-monster is not the attacker:
					send "<gold>%loop-entity% hit for %damage%!" to the attacker
					strike lightning effect at the loop-monster
					damage the loop-entity by damage
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Blazing Light was activated!" to attacker
			play 60 (firework spark with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Growing Light
	if the 5th line of the lore of attacker's tool contains "Growing Light":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set damage to damage + (damage / 4)
			loop all monsters in radius 14 of the victim:
				if loop-monster is not the attacker:
					send "<gold>%loop-entity% hit for %damage%!" to the attacker
					strike lightning effect at the loop-monster
					damage the loop-entity by damage / 2
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Blazing Light was activated!" to attacker
			play 30 (firework spark with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Luna
	if the 5th line of the lore of attacker's tool contains "Luna":
		set {_trigger} to specialCheck(attacker, 0.75, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_lunaDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.5)
			set {_lunaMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			subtract {_lunaMAG} from {resbuff.%victim%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Luna was activated!" to attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Lunar Bow
	if the name of the attacker's tool is "<gold><bold>Lunar Bow":
		if ({res.%victim%} + {resbuff.%victim%}) is less than ({def.%victim%} + {defbuff.%victim%}):
			set {_magical} to 1
		set {_trigger} to specialCheck(attacker, 0.75, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			set {_lunaDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.5)
			set {_lunaMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			subtract {_lunaMAG} from {resbuff.%victim%}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Luna was activated!" to attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Eclipse
	if the name of the attacker's tool is "<gold><bold>Alondite":
		set {_trigger} to specialCheck(attacker, 0.65, 50)
		if {_trigger} is 1:
			set {_eclipse} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_eclipseDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.2)
			set {_eclipseMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.2)
			subtract {_moonbowDEF} from {defbuff.%victim%}
			subtract {_moonbowMAG} from {resbuff.%victim%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Eclipse was activated!" to attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Moonbow
	if the 5th line of the lore of attacker's tool contains "Moonbow":
		set {_trigger} to specialCheck(attacker, 0.85, 80)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set damage to damage + {_bonusdamage}
			set {_moonbowDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.7)
			set {_moonbowMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.7)
			subtract {_moonbowDEF} from {defbuff.%victim%}
			subtract {_moonbowMAG} from {resbuff.%victim%}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Moonbow was activated!" to attacker
			play 20 (cloud with speed 1) at the victim
			play 20 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Sol
	if the 5th line of the lore of attacker's tool contains "<light purple><bold>Special - Sol":
		set {_trigger} to specialCheck(attacker, 0.7, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			heal the attacker by damage * 0.75
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Sol was activated!" to attacker
			play 40 (heart with speed 1) at the attacker
			show 40 (yellow wool break with speed 1) at the attacker
			play sound "entity.player.levelup" with volume 0.5 and pitch 0.75 at victim for attacker
	#Subdue
	if the 5th line of the lore of attacker's tool contains "<light purple><bold>Special - Subdue":
		set {_trigger} to specialCheck(attacker, 0.65, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set damage to damage + 10
			if damage is more than victim's health:
				set damage to victim's health - 0.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Subdue was activated!" to attacker
			play 50 (red wool break with speed 1) at the attacker
			play 50 (obsidian break with speed 1) at the attacker
			play sound "entity.player.levelup" with volume 0.5 and pitch 0.75 at victim for attacker
	#Aether
	if the 5th line of the lore of attacker's tool contains "Aether":
		set {_trigger} to specialCheck(attacker, 0.55, 65)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			set {_lunaDEF} to (({def.%victim%} + {defbuff.%victim%}) * 0.5)
			set {_lunaMAG} to (({res.%victim%} + {resbuff.%victim%}) * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			heal the attacker by damage * 0.75
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Aether was activated!" to attacker
			play 50 (heart with speed 1) at the attacker
			play 50 (yellow wool break with speed 1) at the attacker
			play 50 (cloud with speed 1) at the victim
			play 50 (ender signal with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 1 at victim for attacker
			play sound "entity.player.levelup" with volume 0.5 and pitch 0.75 at victim for attacker
	#Retribution
	if the 5th line of the lore of attacker's tool contains "Retribution":
		set {_trigger} to specialCheck(attacker, 0.675, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (abs(the health of the attacker - the max health of the attacker) * 0.5)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Retribution was activated!" to attacker
			play 80 (red wool break with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Ignis
	if the 5th line of the lore of attacker's tool contains "Ignis":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({def.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Ignis was activated!" to attacker
			play 60 (mobspawner flames with speed 1) at the victim
			play 60 (lava pop with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Dragon Fang
	if the 5th line of the lore of attacker's tool contains "Dragon Fang":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({str.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Dragon Fang was activated!" to attacker
			play 60 (purple wool break with speed 1) at the victim
			play 60 (dust of netherrack with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Glacies
	if the 5th line of the lore of attacker's tool contains "Glacies":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({res.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Glacies was activated!" to attacker
			play 60 (ice break with speed 1) at the victim
			play 60 (snowball break with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Rising Wind
	if the 5th line of the lore of attacker's tool contains "Rising Wind":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({spd.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			clear {crushing.%attacker%}
			send "<gold>Rising Wind was activated!" to attacker
			play 60 (happy villager with speed 1) at the victim
			play 60 (tall grass break with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Radiant Aether
	if the name of the attacker's tool contains "<gold><bold>Ragnell":
		set {_trigger} to specialCheck(attacker, 0.6, 65)
		if {_trigger} is 1:
			set {_proc} to true
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			set {_lunaDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			heal the attacker by damage * 0.5
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<light blue><bold>Radiant Aether was activated!" to attacker
			play 40 (heart with speed 1) at the attacker
			play 40 (yellow wool break with speed 1) at the attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play 80 (magic crit with speed 1) at the victim
			play sound "item.totem.use" with volume 0.25 and pitch 0.5 at victim for attacker
			strike lightning effect at the victim
	#Braces
	if {_proc} is true:
		if the 2nd line of the lore of the attacker's tool contains "Eclipse Brace":
			set {_LB} to true
			set {_lunarnull} to (({def.%victim%} + {defbuff.%victim%}) * 0.3)
			set {_lunamagnull} to (({res.%victim%} + {resbuff.%victim%}) * 0.3)
			subtract {_lunarnull} from {defbuff.%victim%}
			subtract {_lunamagnull} from {resbuff.%victim%}
		else if the 2nd line of the lore of the attacker's tool contains "Solar Brace":
			heal the attacker by (damage * 0.5)
		else if the 2nd line of the lore of the attacker's tool contains "Special Spiral":
			add (final damage * 2) to {crushing.%attacker%}
			show mob spawner flames on the attacker
		if the name of the attacker's tool is "<gold><bold>Mystletainn":
			if attacker's health is less than or equal to (attacker's maximum health * 0.75):
				set damage to damage + 4
		else if the name of the attacker's tool is "<gold><bold>Lunar Bow":
			if the 6th line of the lore of the attacker's tool contains "Unique":
				add (({spd.%attacker%} + {spdbuff.%attacker%}) * 0.2) to damage
		else if the name of the attacker's tool is "<gold><bold>Rex Hasta":
			add 5 to damage
	#Pavise
	if the 5th line of the lore of victim's tool contains "Pavise":
		set {_level} to ({skl.%victim%} + {sklbuff.%victim%}) ^ 0.8
		if {_level} is greater than 85:
			set {_level} to 85
		if the 2nd line of the lore of the victim's tool contains "Shield Pulse":
			add 15 to {_level}
		if the 6th line of the lore of the victim's tool contains "Slaying":
			set {_level} to {_level} + 10
		if the 6th line of the lore of the victim's tool contains "Crushing":
			add {crushing.%victim%} to {_level}
		loop all entities in radius 5 of the victim:
			if loop-entity is attacker:
				set {_AT} to 1
				exit 1 loop
		if {_AT} is 1:
			chance of {_level}%:
				set damage to (damage * 0.5) - 1.5
				if the 6th line of the lore of the victim's tool contains "Koenig":
					set damage to damage - 1.5
				if the 1st line of the lore of the victim's tool contains "Shield Pulse":
					set damage to damage - 2.5
				clear {crushing.%attacker%}
				send "<gold>Pavise was activated!" to victim
				play 60 (crit with speed 1) at the victim
				play sound "item.totem.use" with volume 0.5 and pitch 0.5 at victim for attacker
	#Miracle
	if the 5th line of the lore of victim's tool contains "Miracle":
		if (victim's health - damage) <= 0.1:
			set {_level} to ({skl.%victim%} + {sklbuff.%victim%}) ^ 0.5
			if {_level} is greater than 50:
				set {_level} to 50
			if the 2nd line of the lore of the victim's tool contains "Shield Pulse":
				add 15 to {_level}
			if the 6th line of the lore of the victim's tool contains "Slaying":
				set {_level} to {_level} + 10
			chance of {_level}%:
				cancel event
				if the 6th line of the lore of the victim's tool contains "Koenig":
					heal the victim by 1.5
				if the 1st line of the lore of the victim's tool contains "Shield Pulse":
					heal the victim by 2.5
				apply weakness 4 to the attacker for 3 seconds
				push the attacker backwards at speed 1.5
				clear {crushing.%attacker%}
				send "<gold>Miracle was activated!" to victim
				play 80 (crit with speed 1) at the victim
				play 80 (wool break with speed 1) at the victim
				strike lightning effect at the victim
				play sound "item.totem.use" with volume 0.5 and pitch 0.5 at victim for attacker
				play sound "item.totem.use" with volume 0.5 and pitch 1 at victim for victim
	#Aegis
	if the 5th line of the lore of victim's tool contains "Aegis":
		set {_level} to ({skl.%victim%} + {sklbuff.%victim%}) ^ 0.8
		if {_level} is greater than 85:
			set {_level} to 85
		if the 2nd line of the lore of the victim's tool contains "Shield Pulse":
			add 15 to {_level}
		if the 6th line of the lore of the attacker's tool contains "Slaying":
			set {_level} to {_level} + 10
		if the 6th line of the lore of the attacker's tool contains "Crushing":
			add {crushing.%attacker%} to {_level}
		if projectile exists:
			chance of {_level}%:
				clear {crushing.%attacker%}
				set damage to (damage * 0.5) - 1.5
				if the 6th line of lore of the victim's tool contains "Koenig":
					set damage to damage - 1.5
				if the 1st line of the lore of the victim's tool contains "Shield Pulse":
					set damage to damage - 2.5
				send "<gold>Aegis was activated!" to victim
				play 60 (crit with speed 1) at the victim
				play sound "item.totem.use" with volume 0.5 and pitch 0.5 at victim for attacker
	#Loptous Damage Reduction
	if the lore of the victim's tool contains "Loptous":
		set damage to damage * 0.5
		play 10 (obsidian break with speed 1) at the victim
	#
	#Stat Calculations
	if {_magical} is 1:
		#Special case for monsters
		if {t_res.%victim%} is not set:
			#Attacker is a leveled monster
			if {t_res.%attacker%} is set:
				set damage to damage + ((({t_res.%attacker%} + {t_resbuff.%attacker%}) / 5)) - ((({res.%victim%} + {resbuff.%victim%}) / 5))
		#Defender is a leveled monster
		else if {t_res.%victim%} is set:
			set damage to damage + ((({res.%attacker%} + {resbuff.%attacker%}) / 5)) - ((({t_res.%victim%} + {t_resbuff.%victim%}) / 5))
		#regular case
		else:
			set damage to damage + ((({res.%attacker%} + {resbuff.%attacker%}) / 5)) - ((({res.%victim%} + {resbuff.%victim%}) / 5))
		#SPD check
		#special case for monsters
		#defender is leveled monster
		if {t_spd.%victim%} is set:
			if (({spd.%attacker%} + {spdbuff.%attacker%}) - ({t_spd.%victim%} + {t_spdbuff.%victim%} )) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#attacker is leveled monster
		else if {t_spd.%attacker%} is set:
			if (({t_spd.%attacker%} + {t_spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#regular case
		else:
			if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than ({spd.%victim%} + {spdbuff.%victim%} + 15):
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
	else if projectile exists:
		#Special case for monsters
		if {t_def.%victim%} is not set:
			#attacker is leveled monster
			if {t_str.%attacker%} is set:
				set damage to damage + (((({t_str.%attacker%} + {t_strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#defender is leveled monster
		else if {t_def.%victim%} is set:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({t_def.%victim%} + {t_defbuff.%victim%}) / 5)))
		#regular case
		else:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#SPD check
		#special case for monsters
		#defender is leveled monster
		if {t_spd.%victim%} is set:
			if (({spd.%attacker%} + {spdbuff.%attacker%}) - ({t_spd.%victim%} + {t_spdbuff.%victim%} )) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#attacker is leveled monster
		else if {t_spd.%attacker%} is set:
			if (({t_spd.%attacker%} + {t_spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#regular case
		else:
			if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than ({spd.%victim%} + {spdbuff.%victim%} + 15):
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim	
	else if damage cause is attack:
		#Special case for monsters
		if {t_def.%victim%} is not set:
			#attacker is leveled monster
			if {t_str.%attacker%} is set:
				set damage to damage + (((({t_str.%attacker%} + {t_strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#defender is leveled monster
		else if {t_def.%victim%} is set:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({t_def.%victim%} + {t_defbuff.%victim%}) / 5)))
		#regular case
		else:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#SPD check
		#special case for monsters
		#defender is leveled monster
		if {t_spd.%victim%} is set:
			if (({spd.%attacker%} + {spdbuff.%attacker%}) - ({t_spd.%victim%} + {t_spdbuff.%victim%})) is more than 15:
				set damage to damage * 1.5
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#attacker is leveled monster
		else if {t_spd.%attacker%} is set:
			if (({t_spd.%attacker%} + {t_spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) is more than 15:
				set damage to damage * 1.5
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#regular case
		else:
			if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than ({spd.%victim%} + {spdbuff.%victim%} + 15):
				set damage to damage * 1.5
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
	#Personal Difficulty Damage Adjust
	if damage cause is attack:
		if {perdiff.%victim%} is 0:
			set damage to damage * 0.5
		else if {perdiff.%victim%} is 1:
			set damage to damage * 0.75
		else if {perdiff.%victim%} is 2:
			set damage to damage * 1
		else if {perdiff.%victim%} is 3:
			set damage to damage * 1.25
		else if {perdiff.%victim%} is 4:
			set damage to damage * 1.5
		else if {perdiff.%victim%} is 5:
			set damage to damage * 2
		else if {perdiff.%victim%} is 6:
			set damage to damage * 2
		else if {perdiff.%victim%} is 7:
			set damage to damage * 2
		else if {perdiff.%victim%} is 8:
			set damage to damage * 3
		if {perdiff.%attacker%} is 0:
			set damage to damage * 1.5
		else if {perdiff.%attacker%} is 1:
			set damage to damage * 1.25
		else if {perdiff.%attacker%} is 2:
			set damage to damage * 1
		else if {perdiff.%attacker%} is 3:
			set damage to damage * 0.75
		else if {perdiff.%attacker%} is 4:
			set damage to damage * 0.5
		else if {perdiff.%attacker%} is 5:
			set damage to damage * 0.25
		else if {perdiff.%attacker%} is 6:
			set damage to damage * 0.75
		else if {perdiff.%attacker%} is 7:
			set damage to damage * 0.5
		else if {perdiff.%attacker%} is 8:
			set damage to damage * 0.25
	else if projectile exists:
		if {perdiff.%victim%} is 0:
			set damage to damage * 0.5
		else if {perdiff.%victim%} is 1:
			set damage to damage * 0.75
		else if {perdiff.%victim%} is 2:
			set damage to damage * 1
		else if {perdiff.%victim%} is 3:
			set damage to damage * 1.25
		else if {perdiff.%victim%} is 4:
			set damage to damage * 1.5
		else if {perdiff.%victim%} is 5:
			set damage to damage * 2
		else if {perdiff.%victim%} is 6:
			set damage to damage * 1.25
		else if {perdiff.%victim%} is 7:
			set damage to damage * 1.5
		else if {perdiff.%victim%} is 8:
			set damage to damage * 2
		if {perdiff.%attacker%} is 0:
			set damage to damage * 1.5
		else if {perdiff.%attacker%} is 1:
			set damage to damage * 1.25
		else if {perdiff.%attacker%} is 2:
			set damage to damage * 1
		else if {perdiff.%attacker%} is 3:
			set damage to damage * 0.75
		else if {perdiff.%attacker%} is 4:
			set damage to damage * 0.5
		else if {perdiff.%attacker%} is 5:
			set damage to damage * 0.25
		else if {perdiff.%attacker%} is 6:
			set damage to damage * 0.75
		else if {perdiff.%attacker%} is 7:
			set damage to damage * 0.5
		else if {perdiff.%attacker%} is 8:
			set damage to damage * 0.25
	if final damage is less than or equal to 0:
		if victim is not item frame:
			cancel event
			if projectile exists:
				delete the projectile
			send "<light red>Your efforts are wasted. %victim%'s defenses are too strong." to the attacker
			send "<light green>%attacker%'s blows were no match for your defenses." to the victim
			play sound "entity.experience_orb.pickup" with volume 3 and pitch 2 at victim for attacker
			play sound "entity.experience_orb.pickup" with volume 3 and pitch 2 at victim for victim
	if {t_lvl.%victim%} is set:
		if damage is less than victim's health:
			send action bar "<bold>%victim% | Level: %{t_lvl.%victim%}% | HP: %victim's health - (final damage / 2)% / %victim's maximum health% | Damage Dealt: %final damage / 2%" to the attacker
		else:
			send action bar "<gold><bold>%victim%<reset><bold> | Level: %{t_lvl.%victim%}% | HP: <gold><bold>0 / %victim's maximum health%<reset><bold> | Damage Dealt: %final damage / 2% | <gold><bold>Overkill: %abs(victim's health - (final damage / 2))%" to the attacker
	else:
		if damage is less than victim's health:
			send action bar "<bold>%victim% | Level: %{lvl.%victim%}% | HP: %victim's health - (final damage / 2)% / %victim's maximum health% | Damage Dealt: %final damage / 2%" to the attacker
		else:
			send action bar "<gold><bold>%victim%<reset><bold> | Level: %{lvl.%victim%}% | HP: <gold><bold>0 / %victim's maximum health%<reset><bold> | Damage Dealt: %final damage / 2% | <gold><bold>Overkill: %abs(victim's health - (final damage / 2))%" to the attacker
	#Sandbag
	if the name of the victim contains "<gold><bold>Sandbag":
		if {sandbagkillable.%attacker%} is 0:
			send "<light blue>Damage dealt that hit: %final damage%" to the attacker
			cancel event
	#Seals
	if the 2nd line of the lore of the attacker's tool contains "Seal SPD/SKL":
		if {SPDSKLdebuffed.%victim%} is not set:
			subtract 20 from {spdbuff.%victim%}
			subtract 20 from {sklbuff.%victim%}
			set {SPDSKLdebuffed.%victim%} to true
			wait 3 seconds
			add 20 to {spdbuff.%victim%}
			add 20 to {sklbuff.%victim%}
			clear {SPDSKLdebuffed.%victim%}
	else if the 2nd line of the lore of the attacker's tool contains "Seal DEF/MAG":
		if {DEFMAGdebuffed.%victim%} is not set:
			subtract 20 from {defbuff.%victim%}
			subtract 20 from {resbuff.%victim%}
			set {DEFMAGdebuffed.%victim%} to true
			wait 3 seconds
			add 20 to {defbuff.%victim%}
			add 20 to {resbuff.%victim%}
			clear {DEFMAGdebuffed.%victim%}
	#Perks
	#Nihl
	set {_skl} to checkSlots(victim,"Nihl")
	if {_skl} is 1:
		if victim's health is more than (victim's maximum health * 0.5):
			if victim's health - (final damage * 2) is less than 0.5:
				cancel event
				play sound "item.totem.use" with volume 1 and pitch 1 at victim for victim
				send "<light blue>Nihl was activated!" to the victim
				push the attacker backwards at speed 1.5
				apply regeneration 4 to the victim for 4 seconds
	#Miracle
	if (victim's health - damage) < 0.1:
		set {_slot} to checkSlots(victim,"Miracle")
		if {_slot} is 1:
			set {_level} to {skl.%victim%} * 0.5
			if {_level} is greater than 50:
				set {_level} to 50
			chance of {_level}%:
				cancel event
				heal the victim by 10 hearts
				send "<light yellow><bold>Miracle was activated!" to victim
				play sound "item.totem.use" with volume 0.5 and pitch 1.5 at victim for victim
	#Crushing Offense
	set {_sklcheck} to checkSlots(attacker,"Crushing Offense")
	if {_sklcheck} is 1:
		if damage is more than 7:
			add (damage / 2) to {crushing.%attacker%}
			send "+%(damage / 2)% SKL" to the attacker
	#Gamble
	set {_sklcheck} to checkSlots(attacker,"Gamble")
	if {_sklcheck} is 1:
		set {_foeAvoid} to ({spd.%victim%} + {spdbuff.%victim%}) + ({skl.%victim%} + {sklbuff.%victim%})
		if {_foeAvoid} is not set:
			set {_foeAvoid} to 75
		else if {_foeAvoid} is less than 1:
			set {_foeAvoid} to 75
		set {_playerAvoid} to ({spd.%attacker%} + {spdbuff.%attacker%}) + ({skl.%attacker%} + {sklbuff.%attacker%})
		set {_Avoid} to ({_foeAvoid} - {_playerAvoid})
		if {_Avoid} is less than 0:
			set {_Avoid} to 0
		set {_1RN} to a random integer between 0 and {_Avoid}
		set {_2RN} to a random integer between 0 and {_Avoid}
		set {_trueHit} to (({_1RN} + {_2RN}) / 2)
		chance of {_trueHit}%:
			cancel event
			send "<light red>Your Gamble perk caused the attack to miss!" to the attacker
			send "<light blue>The opponent's Gamble perk caused their attack to miss!" to the victim
	#Bleedout
	if damage is more than or equal to victim's health:
		if {farewells.%victim%} is 1:
			if {farewellskip.%victim%} is 1:
				apply resistance 5 to the victim for 15 seconds
				apply weakness 99 to the victim for 15 seconds
				apply blindness 1 to the victim for 15 seconds
				apply slowness 99 to the victim for 15 seconds
				apply mining fatigue 99 to the victim for 15 seconds
				cancel event
				set {bleedout.%victim%} to 1
				heal the victim by 999
				send "<red><bold>You have been critically wounded. You have 15 seconds to send messages before you die completely. Say your farewells..." to the victim
				broadcast "<red><bold>%victim% has been downed!"
				make victim say "%{downedQuote.%victim%}%"
				loop 15 times:
					if {bleedout.%victim%} is 0:
						send "<light blue><bold>Another player saved you from imminent death." to the victim
						make victim say "%{healedQuote.%victim%}%"
						heal the victim by 5
						apply regeneration 3 to the victim for 5 seconds
						remove blindness from the victim
						remove slowness from the victim
						remove weakness from the victim
						remove resistance from the victim
						remove mining fatigue from the victim
						set {farewellskip.%victim%} to 1
						exit 1 loop
					wait 1 second
				if {bleedout.%victim%} is 1:
					set {farewellskip.%victim%} to 0
					#send "<red><bold>You were unable to be saved..."
					kill the victim
			else:
				send "<red><bold>You were unable to be saved..."
	#Last Stand
	if damage >= victim's health:
		if victim's health > 0.5:
			if {bhealth.%victim%} is 1:
				if {farewells.%victim%} is 0:
					cancel event
					set the victim's health to 1
					set {bhealth.%victim%} to 0
					send "<light red>You're on your last leg.." to the victim
					wait 15 seconds
					set {bhealth.%victim%} to 1
					send "<light green>Your strength has returned." to the victim
	#Battle Forecast
	#Victim is Monster
	if {t_str.%victim%} is set:
		set name of sidebar of the attacker to "<gold>-=Battle Forecast=-"
		set score "STR:" in sidebar of the attacker to ({t_str.%victim%} + {t_strbuff.%victim%})
		set score "DEF:" in sidebar of the attacker to ({t_def.%victim%} + {t_defbuff.%victim%})
		set score "SPD:" in sidebar of the attacker to ({t_spd.%victim%} + {t_spdbuff.%victim%})
		set score "SKL:" in sidebar of the attacker to ({t_skl.%victim%} + {t_sklbuff.%victim%})
		set score "MAG:" in sidebar of the attacker to ({t_res.%victim%} + {t_resbuff.%victim%})
		wait 5 seconds
		wipe the attacker's sidebar
	#Victim is Player
	else if {str.%victim%} is set:
		set name of sidebar of the attacker to "<gold>-=Battle Forecast=-"
		set score "STR:" in sidebar of the attacker to ({str.%victim%} + {strbuff.%victim%})
		set score "DEF:" in sidebar of the attacker to ({def.%victim%} + {defbuff.%victim%})
		set score "SPD:" in sidebar of the attacker to ({spd.%victim%} + {spdbuff.%victim%})
		set score "SKL:" in sidebar of the attacker to ({skl.%victim%} + {sklbuff.%victim%})
		set score "MAG:" in sidebar of the attacker to ({res.%victim%} + {resbuff.%victim%})
		wait 5 seconds
		wipe the attacker's sidebar
	#Attacker is Player
	if {str.%attacker%} is set:
		set name of sidebar of the victim to "<gold>-=Battle Forecast=-"
		set score "STR:" in sidebar of the attacker to ({str.%attacker%} + {strbuff.%attacker%})
		set score "DEF:" in sidebar of the attacker to ({def.%attacker%} + {defbuff.%attacker%})
		set score "SPD:" in sidebar of the attacker to ({spd.%attacker%} + {spdbuff.%attacker%})
		set score "SKL:" in sidebar of the attacker to ({skl.%attacker%} + {sklbuff.%attacker%})
		set score "MAG:" in sidebar of the attacker to ({res.%attacker%} + {resbuff.%attacker%})
		wait 5 seconds
		wipe the victim's sidebar
	#Attacker is Monster
	else if {t_str.%attacker%} is set:
		set name of sidebar of the victim to "<gold>-=Battle Forecast=-"
		set score "STR:" in sidebar of the attacker to ({t_str.%attacker%} + {t_strbuff.%attacker%})
		set score "DEF:" in sidebar of the attacker to ({t_def.%attacker%} + {t_defbuff.%attacker%})
		set score "SPD:" in sidebar of the attacker to ({t_spd.%attacker%} + {t_spdbuff.%attacker%})
		set score "SKL:" in sidebar of the attacker to ({t_skl.%attacker%} + {t_sklbuff.%attacker%})
		set score "MAG:" in sidebar of the attacker to ({t_res.%attacker%} + {t_resbuff.%attacker%})
		wait 5 seconds
		wipe the victim's sidebar
	if {_lunaDEF} is set:
		add {_lunaDEF} to {defbuff.%victim%}
	if {_moonbowDEF} is set:
		add {_moonbowDEF} to {defbuff.%victim%}
	if {_moonbowMAG} is set:
		add {_moonbowMAG} to {resbuff.%victim%}
	if {_lunaMAG} is set:
		add {_lunaMAG} to {resbuff.%victim%}
	if {_eclipseDEF} is set:
		add {_eclipseDEF} to {defbuff.%victim%}
	if {_eclipseMAG} is set:
		add {_eclipseMAG} to {resbuff.%victim%}
	if {_LB} is true:
		add {_lunarnull} to {defbuff.%victim%}
		add {_lunamagnull} to {resbuff.%victim%}
	if {_perk} is 1:
		add 50 to {sklbuff.%attacker%}
	if the 3rd line of the lore of the attacker's tool contains "Breath of Life":
		loop all players in radius 10 of the attacker:
			if loop-player is not the attacker:
				if {party.%loop-player%} is {party.%attacker%}:
					heal the loop-player by (damage * 0.33)
	else if the 3rd line of the lore of the attacker's tool contains "Savage Blow":
		loop all entities in radius 10 of the victim:
			if loop-entity is not the attacker:
				if loop-entity is not the victim:
					if {party.%loop-entity%} is not {party.%attacker%}:
						damage the loop-entity by (damage * 0.33) with fake cause fall
						if {combograde.%attacker%} is more than 0:
							add (damage * 0.33) to {comboscore.%attacker%}
	if {_bb.%victim%} is true:
		set {strbuff.%victim%} to {_oldstr.%victim%}
		set {defbuff.%victim%} to {_olddef.%victim%}
		set {spdbuff.%victim%} to {_oldspd.%victim%}
		set {resbuff.%victim%} to {_oldres.%victim%}
		set {sklbuff.%victim%} to {_oldskl.%victim%}
	if {_bb.%attacker%} is true:
		set {strbuff.%attacker%} to {_oldstr}
		set {defbuff.%attacker%} to {_olddef}
		set {spdbuff.%attacker%} to {_oldspd}
		set {resbuff.%attacker%} to {_oldmag}
		set {sklbuff.%attacker%} to {_oldskl}
	if damage is more than {highestdamage.%attacker%}:
		set {highestdamage.%attacker%} to damage
	if damage is more than {highestsuffered.%victim%}:
		set {highestsuffered.%victim%} to damage
	if {_spelleffect1} is set:
		set {spellcooldown.%attacker%} to 1
		set {_checkSlots} to checkSlots(attacker,"Magic Ward")
		if {_checkSlots} is 1:
			set {_recoil} to {_recoil} / 2
		set {_checkSlots} to checkSlots(attacker,"Elder Knowledge")
		if {_checkSlots} is 1:
			set {_recoil} to {_recoil} / 2
			set {_EK} to true
		if {_recoil} is less than 0:
			set {_recoil} to 0
		set {_recoil2} to {_recoil}
		if {_EK} is true:
			if attacker's health - {_recoil} is less than or equal to 0:
				set attacker's health to 0.5
			else:
				damage the attacker by {_recoil}
		else:
			while {_recoil2} is more than 0:
				send "<light blue>Recharged in: %{_recoil2}%" to the attacker
				subtract 0.5 from {_recoil2}
				wait 0.5 seconds
			clear {spellcooldown.%attacker%}
			send "<green><bold>Spells ready!" to the attacker
	#Dire Thunder VFX
	if the name of the attacker's tool contains "<gold><bold>Dire Thunder":
		if projectile exists:
			strike lightning effect at the victim
			wait 0.5 seconds
			strike lightning effect at the victim

on damage:
	#Galeforce
	if the 5th line of the lore of attacker's tool contains "Galeforce":
		set {_level} to ({skl.%attacker%} + {sklbuff.%attacker%}) ^ 0.5
		if {_level} is more than 50:
			set {_level} to 50
		if the 6th line of the lore of the attacker's tool contains "Slaying":
			set {_level} to {_level} + 10
		if the 6th line of the lore of the attacker's tool contains "Crushing":
			add {crushing.%attacker%} to {_level}
		chance of {_level}%:
			apply swiftness 4 to the attacker for 10 seconds
			apply strength 4 to the attacker for 10 seconds
			subtract 100 from {sklbuff.%attacker%}
			loop all entities in radius 10 of the attacker:
				if loop-entity is not item:
					if {party.%loop-entity%} is not {party.%attacker%}:
						apply slowness 4 to the loop-entity for 10 seconds
						apply weakness 4 to the loop-entity for 10 seconds
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			send "<gold>Galeforce was activated!" to attacker
			show witch spell on the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
			wait 30 seconds
			add 100 to {sklbuff.%attacker%}

on right click:
	#Lance throw behavior
	if the name of the player's tool contains "<bold>Wooden Lance":
		make the player shoot an arrow with speed 1.75
		set metadata value "JavType" of the last shot projectile to 1
		damage the player's tool by 2
	else if the name of the player's tool contains "<bold>Stone Lance":
		make the player shoot an arrow with speed 1.75
		set metadata value "JavType" of the last shot projectile to 2
		damage the player's tool by 3
	else if the name of the player's tool contains "<bold>Iron Lance":
		make the player shoot an arrow with speed 1.75
		set metadata value "JavType" of the last shot projectile to 3
		damage the player's tool by 4
	else if the name of the player's tool contains "<bold>Golden Lance":
		make the player shoot an arrow with speed 1.75
		set metadata value "JavType" of the last shot projectile to 4
		damage the player's tool by 1
	else if the name of the player's tool contains "<bold>Diamond Lance":
		make the player shoot an arrow with speed 1.75
		set metadata value "JavType" of the last shot projectile to 5
		damage the player's tool by 5
	else if the name of the player's tool contains "Crusader's Lance":
		make the player shoot an arrow with speed 1.75
		set metadata value "JavType" of the last shot projectile to 6
	#Balder Side Sword Parry Behavior
	if the name of the player's tool contains "<gold><bold>Balder Side Sword":
		if {BSSCooldown.%player%} is not set:
			send "<gold>Parrying attacks!" to the player
			set {BSS.%player%} to true
			set {BSSCooldown.%player%} to true
			wait 0.45 seconds
			clear {BSS.%player%}
			send "<red>The parry wore off!" to the player
			wait 0.6 seconds
			clear {BSSCooldown.%player%}
			send "<gold>Ready to parry again!" to the player
	#Ragnell
	if the name of the player's tool contains "<gold><bold>Ragnell":
		if the 6th line of the lore of the player's tool contains "<white><bold>Refined: Unique":
			if player is sneaking:
				set {_temp} to the damage value of the player's tool
				if {_temp} is more than or equal to 1531:
					cancel event
					send "<red>Your tool is too worn down to use this ability!"
					#send "<red>Current Durability: %1561 -{_temp}%"
				else:
					shoot an arrow from the player at speed 1.75
					damage the player's tool by 10
	#Falchion
	if the name of the player's tool contains "<gold><bold>Falchion":
		if player is sneaking:
			set {_temp} to the damage value of the player's tool
			if {_temp} is more than or equal to 1531:
				cancel event
				send "<red>Your tool is too worn down to use this ability!"
				#send "<red>Current Durability: %1561 -{_temp}%"
			else:
				apply regeneration 4 to the player for 3 seconds
				damage player's tool by 10
	#Light Brand
	if the name of the player's tool contains "<gold><bold>Light Brand":
		if player is sneaking:
			set {_temp} to the damage value of the player's tool
			if {_temp} is more than or equal to 1531:
				cancel event
				send "<red>Your tool is too worn down to use this ability!"
				#send "<red>Current Durability: %1561 -{_temp}%"
			else:
				loop all monsters in radius 10 of the player:
					if {_temp} is less than 1531:
						make the player damage loop-monster by 5
						set {lb_ranged.%player%} to true
						strike lightning effect at the loop-monster
						damage the player's tool by 5
						set {_temp} to the damage value of the player's tool
					else:
						send "<red>Your attack was cancelled due to low weapon durability."
						exit 1 loop
	#Binding Blade
	if the name of the player's tool contains "<gold><bold>Binding Blade":
		if player is sneaking:
			set {_temp} to the damage value of the player's tool
			if {_temp} is more than or equal to 1531:
				cancel event
				send "<red>Your tool is too worn down to use this ability!"
				#send "<red>Current Durability: %1561 -{_temp}%"
			else:
				apply regeneration 4 to the player for 5 seconds
				damage player's tool by 15
	#Axtinguisher
	if the name of the player's tool contains "<gold><bold>Axtinguisher":
		push the target upwards at speed 0.5
		damage the player's tool by 1
	#Love is Blue
	#if the name of the player's tool contains "<light blue><bold>Love is Blue":
	#	if player has more than 5 xp:
	#		execute console command "/xp -5 %player%"
	#		shoot an arrow from the player
	#		play sound "entity.blaze.shoot" with volume 1 and pitch 2 at the player
	#		loop 5 times:
	#			play large smoke at the player
	#			play flame at the player
	#			play magical critical hit at the player
	#			wait a tick
	#Scarborough Fair
	#if the name of the player's tool contains "<light red><bold>Scarborough Fair":
	#	if player has more than 5 xp:
	#		execute console command "/xp -5 %player%"
	#		shoot an arrow from the player
	#		play sound "entity.blaze.shoot" with volume 1 and pitch 2 at the player
	#		loop 5 times:
	#			play large smoke at the player
	#			play flame at the player
	#			play magical critical hit at the player
	#			wait a tick
	#Super Shotgun
	if the name of the player's tool contains "<red><bold>Super Shotgun | Clip: 2/2":
		play sound "entity.blaze.shoot" with volume 4 and pitch 0.5 at the player
		play sound "block.dispenser.fire" with volume 2 and pitch 0.5 at the player
		set the name of the player's tool to "<red><bold>Super Shotgun | Clip: 1/2"
		push the player backwards at speed 0.5
		shoot an arrow from the player with speed 6
		play 10 (lava pop with speed 0) at the player
		play 10 (void fog with speed 0) at the player
		set metadata value "SUPERSHOTGUN" of the last shot projectile to 1
		set {_spread} to checkSlots(player,"Controlled Shot")
		loop 7 times:
			if {_spread} is 1:
				set {_ShotSpreadX} to random number between -1 and 1
				set {_ShotSpreadY} to random number between -0.5 and 0.5
			else:
				set {_ShotSpreadX} to random number between -2 and 2
				set {_ShotSpreadY} to random number between -1 and 1
			shoot an arrow from the player with speed 6
			push the last shot projectile right at speed {_ShotSpreadX}
			push the last shot projectile up at speed {_ShotSpreadY}
			set metadata value "SUPERSHOTGUN" of the last shot projectile to 1
		wait 4 ticks
	else if the name of the player's tool contains "<red><bold>Super Shotgun | Clip: 1/2":
		play sound "entity.blaze.shoot" with volume 4 and pitch 0.5 at the player
		play sound "block.dispenser.fire" with volume 2 and pitch 0.5 at the player
		set the name of the player's tool to "<red><bold>Super Shotgun | Clip: 0/2"
		play 10 (lava pop with speed 0) at the player
		play 10 (void fog with speed 0) at the player
		push the player backwards at speed 0.5
		shoot an arrow from the player with speed 6
		set {_spread} to checkSlots(player,"Controlled Shot")
		set metadata value "SUPERSHOTGUN" of the last shot projectile to 1
		loop 7 times:
			if {_spread} is 1:
				set {_ShotSpreadX} to random number between -1 and 1
				set {_ShotSpreadY} to random number between -0.5 and 0.5
			else:
				set {_ShotSpreadX} to random number between -2 and 2
				set {_ShotSpreadY} to random number between -1 and 1
			shoot an arrow from the player with speed 6
			push the last shot projectile right at speed {_ShotSpreadX}
			push the last shot projectile up at speed {_ShotSpreadY}
			set metadata value "SUPERSHOTGUN" of the last shot projectile to 1
		wait 4 ticks
	else if the name of the player's tool contains "<red><bold>Super Shotgun | Clip: 0/2":
		play sound "block.dispenser.dispense" with volume 4 and pitch 0.5 at the player
		play smoke at the player
	#Weapon firing behavior
	set {_spread} to checkSlots(player,"Controlled Shot")
	#Flintlock Pistol
	if the name of the player's tool is "<light gray>Flintlock Pistol":
		if the 8th line of the lore of the player's tool is "1":
			if {_spread} is 1:
				set {_ShotSpreadX} to random number between -0.15 and 0.15
				set {_ShotSpreadY} to random number between -0.15 and 0.15
			else:
				set {_ShotSpreadX} to random number between -0.25 and 0.25
				set {_ShotSpreadY} to random number between -0.25 and 0.25
			make the player shoot an arrow
			push the last shot projectile right at speed {_ShotSpreadX}
			push the last shot projectile up at speed {_ShotSpreadY}
			set metadata value "gunType" of the last shot projectile to 1
			play sound "block.dispenser.launch" with volume 1 and pitch 1.5 at the player
			play sound "entity.generic.explode" with volume 0.5 and pitch 1.5 at the player
			set {_clip} to the 8th line of the lore of the player's tool parsed as integer
			subtract 1 from {_clip}
			set the 8th line of the lore of the player's tool to "%{_clip}%"
		else:
			play sound "block.stone_button.click_off" with volume 1 and pitch 1 at the player
	#Iron Musket
	else if the name of the player's tool is "<light gray>Iron Musket":
		if the 8th line of the lore of the player's tool is "1":
			if {_spread} is 1:
				set {_ShotSpreadX} to random number between -0.15 and 0.15
				set {_ShotSpreadY} to random number between -0.15 and 0.15
			else:
				set {_ShotSpreadX} to random number between -0.35 and 0.35
				set {_ShotSpreadY} to random number between -0.35 and 0.35
			make the player shoot an arrow
			push the last shot projectile right at speed {_ShotSpreadX}
			push the last shot projectile up at speed {_ShotSpreadY}
			push the last shot projectile forwards at speed 1
			set metadata value "gunType" of the last shot projectile to 2
			play sound "block.dispenser.launch" with volume 1 and pitch 1 at the player
			play sound "entity.generic.explode" with volume 0.5 and pitch 1.25 at the player
			set {_clip} to the 8th line of the lore of the player's tool parsed as integer
			subtract 1 from {_clip}
			set the 8th line of the lore of the player's tool to "%{_clip}%"
		else:
			play sound "block.stone_button.click_off" with volume 1 and pitch 1 at the player
	#Iron Pistol
	else if the name of the player's tool is "<light gray>Iron Pistol":
		if the 8th line of the lore of the player's tool is not "0":
			if {_spread} is 1:
				set {_ShotSpreadX} to random number between -0.15 and 0.15
				set {_ShotSpreadY} to random number between -0.15 and 0.15
			else:
				set {_ShotSpreadX} to random number between -0.25 and 0.25
				set {_ShotSpreadY} to random number between -0.25 and 0.25
			make the player shoot an arrow
			push the last shot projectile right at speed {_ShotSpreadX}
			push the last shot projectile up at speed {_ShotSpreadY}
			set metadata value "gunType" of the last shot projectile to 3
			play sound "block.dispenser.launch" with volume 1 and pitch 1.5 at the player
			play sound "entity.generic.explode" with volume 0.5 and pitch 1.5 at the player
			set {_clip} to the 8th line of the lore of the player's tool parsed as integer
			subtract 1 from {_clip}
			set the 8th line of the lore of the player's tool to "%{_clip}%"
		else:
			play sound "block.stone_button.click_on" with volume 1 and pitch 1.6 at the player
	#Redstone Rifle
	else if the name of the player's tool is "<light gray>Redstone Repeater":
		if the 8th line of the lore of the player's tool is not "0":
			if {FirearmsCooldown.%player%::Redstone Rifle} is not true:
				if {_spread} is 1:
					set {_ShotSpreadX} to random number between -0.2 and 0.2
					set {_ShotSpreadY} to random number between -0.2 and 0.2
				else:
					set {_ShotSpreadX} to random number between -0.385 and 0.385
					set {_ShotSpreadY} to random number between -0.385 and 0.385
				make the player shoot an arrow
				push the last shot projectile right at speed {_ShotSpreadX}
				push the last shot projectile up at speed {_ShotSpreadY}
				set metadata value "gunType" of the last shot projectile to 4
				play sound "block.dispenser.launch" with volume 1 and pitch 1.5 at the player
				play sound "entity.generic.explode" with volume 0.5 and pitch 1.5 at the player
				set {_clip} to the 8th line of the lore of the player's tool parsed as integer
				subtract 1 from {_clip}
				set the 8th line of the lore of the player's tool to "%{_clip}%"
				set {FirearmsCooldown.%player%::Redstone Rifle} to true
				wait 0.175 seconds
				clear {FirearmsCooldown.%player%::Redstone Rifle}
		else:
			play sound "block.stone_button.click_on" with volume 1 and pitch 1.6 at the player
	#E-45s
	else if the name of the player's tool is "<light gray>E-45s":
		if the 8th line of the lore of the player's tool is not "0":
			if {_spread} is 1:
				set {_ShotSpreadX} to random number between -0.1 and 0.1
				set {_ShotSpreadY} to random number between -0.1 and 0.1
			else:
				set {_ShotSpreadX} to random number between -0.25 and 0.25
				set {_ShotSpreadY} to random number between -0.25 and 0.25
			make the player shoot an arrow
			push the last shot projectile right at speed {_ShotSpreadX}
			push the last shot projectile up at speed {_ShotSpreadY}
			set metadata value "gunType" of the last shot projectile to "5"
			play sound "block.anvil.place" with volume 0.5 and pitch 2 at the player
			play sound "entity.generic.explode" with volume 0.7 and pitch 1.5 at the player
			set {_clip} to the 8th line of the lore of the player's tool parsed as integer
			subtract 1 from {_clip}
			set the 8th line of the lore of the player's tool to "%{_clip}%"
		else:
			play sound "block.stone_button.click_on" with volume 1 and pitch 1.6 at the player
	#Redgrave Sawn-Off
	else if the name of the player's tool is "<light gray>Redgrave Sawn-Off":
		if the 8th line of the lore of the player's tool is not "0":
			if {FirearmsCooldown.%player%::Redgrave Sawn-Off} is not true:
				play sound "entity.blaze.shoot" with volume 1 and pitch 0.5 at the player
				play sound "entity.generic.explode" with volume 2 and pitch 0.7 at the player
				play sound "block.dispenser.fire" with volume 2 and pitch 0.5 at the player
				make the player shoot an arrow with speed 6
				set {_spread} to checkSlots(player,"Controlled Shot")
				set metadata value "gunType" of the last shot projectile to "6"
				loop 5 times:
					if {_spread} is 1:
						set {_ShotSpreadX} to random number between -0.5 and 0.5
						set {_ShotSpreadY} to random number between -0.4 and 0.4
					else:
						set {_ShotSpreadX} to random number between -1 and 1
						set {_ShotSpreadY} to random number between -0.7 and 0.7
					make the player shoot an arrow with speed 6
					push the last shot projectile right at speed {_ShotSpreadX}
					push the last shot projectile up at speed {_ShotSpreadY}
					set {shotType.%last shot projectile%} to "RSO"
					set metadata value "gunType" of the last shot projectile to "6"
				set {FirearmsCooldown.%player%::Redgrave Sawn-Off} to true
				set {_clip} to the 8th line of the lore of the player's tool parsed as integer
				subtract 1 from {_clip}
				set the 8th line of the lore of the player's tool to "%{_clip}%"
				wait 0.35 seconds
				play sound "block.dispenser.dispense" with volume 2 and pitch 0.8 at the player
				wait 0.35 seconds
				clear {FirearmsCooldown.%player%::Redgrave Sawn-Off}
				play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
		else:
			play sound "block.stone_button.click_off" with volume 1 and pitch 0.6 at the player
	#Gold/Green Herb Use Behavior
	if the name of the player's tool is "<light green><bold>Sacred Herb":
		if player's health is less than player's maximum health:
			remove 1 of tool from tool
			play sound "entity.player.swim" with volume 2 and pitch 1.5 at the player for the player
			play sound "item.bucket.fill" with volume 2 and pitch 1.3 at the player for the player
			play 30 (light green wool break with speed 1) at the player
			heal the player by 6 hearts
			send "<light green>Consumed a Sacred Herb and restored 6 HP."
		else:
			send "<light red>Using this wouldn't benefit you right now."
	if the name of the player's tool is "<light yellow><bold>Golden Herb":
		if player's health is less than player's maximum health:
			remove 1 of tool from tool
			play sound "block.enchantment_table.use" with volume 3 and pitch 2 at the player for the player
			play sound "entity.player.swim" with volume 1 and pitch 1.5 at the player for the player
			play 30 (gold block break with speed 1) at the player
			heal the player by 12 hearts
			send "<light yellow>Consumed a Golden Herb and restored 12 HP."
		else:
			send "<light red>Using this wouldn't benefit you right now."
	if player is sneaking:
		#Fortify Health
		if the 4th line of the lore of player's tool contains "Fortify Health":
			apply absorption 2 to the player for 75 seconds
			damage player's tool by 10
		#Restore
		if the 4th line of the lore of player's tool contains "Restore":
			apply regeneration 4 to the player for 2 seconds
			damage player's tool by 5
	#Wings of Mercy
	if the 2nd line of the lore of the player's tool contains "Wings of Mercy":
		set {_health} to {support.%player%}'s health
		if {_health} is less than {support.%player%}'s maximum health / 2:
			teleport the player to {support.%player%}
			send "%player% has arrived with Wings of Mercy!" to {support.%player%}
			set {_sklcheck.%player%} to checkSlots(player,"Everlasting Bond")
			if {_sklcheck.%player%} is 1:
				send "Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to the player
				add 15 to {strbuff.%player%}
				add 15 to {defbuff.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%player%}
				subtract 15 from {strbuff.%player%}
		else if {bleedout.%{support.%player%}%} is 1:
			teleport the player to {support.%player%}
			send "%player% has arrived with Wings of Mercy!" to {support.%player%}
			set {_sklcheck.%player%} to checkSlots(player,"Everlasting Bond")
			if {_sklcheck.%player%} is 1:
				send "Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to the player
				add 15 to {strbuff.%player%}
				add 15 to {defbuff.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%player%}
				subtract 15 from {strbuff.%player%}
		else:
			send "<red>HP Threshold not met!" to the player
	#Escape Route
	if the 2nd line of the lore of the player's tool contains "Escape Route":
		if player's health is less than (player's maximum health / 2):
			teleport the player to {support.%player%}
			set {_slot} to checkSlots(player,"Everlasting Bond")
			if {_slot} is 1:
				add 15 to {strbuff.%{support.%player%}%}
				add 15 to {defbuff.%{support.%player%}%}
				send "%player%'s Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to {support.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%{support.%player%}%}
				subtract 15 from {defbuff.%{support.%player%}%}
			send "%player% has arrived with Escape Route!" to {support.%player%}
		else if {bleedout.%player%} is 1:
			teleport the player to {support.%player%}
			set {_slot} to checkSlots(player,"Everlasting Bond")
			if {_slot} is 1:
				add 15 to {strbuff.%{support.%player%}%}
				add 15 to {defbuff.%{support.%player%}%}
				send "%player%'s Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to {support.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%{support.%player%}%}
				subtract 15 from {defbuff.%{support.%player%}%}
			send "%player% has arrived with Escape Route" to {support.%player%}
		else:
			send "<red>HP Threshold not met!" to the player
	#Stinger
	if the 4th line of the lore of the player's tool contains "Stinger":
		if {stingerCooldown.%player%} is not set:
			play 20 (smoke with speed 0) at player
			play 20 (red wool break with speed 1) at player
			play sound "entity.blaze.shoot" with volume 1 and pitch 1 at player
			push the player forwards at speed 1.5
			set {stingerCooldown.%player%} to 1
			if {combograde.%player%} is more than 0:
				add (1.5 * (7 - {combograde.%player%})) to {comboscore.%player%}
			wait 1 seconds
			send "<light green>Stinger ready!"
			clear {stingerCooldown.%player%}
			#EEEEEEEEEYAAAAAAAAAAAAAAAAAGH
	#Capture
	if the 4th line of the lore of the player's tool contains "Capture":
		if player is sneaking:
			if {capture.%player%} is set:
				clear {capture.%player%}
				send "<light green>No longer attempting to Capture foes!"
			else:
				set {capture.%player%} to 1
				send "<light green>Now attempting to Capture foes! Attacks will deal 50%% less damage."
	#Taunt
	if the 4th line of the lore of the player's tool is "<light green><bold>Assist - Taunt":
		if player is sneaking:
			if {isTaunting.%player%} is not set:
				set {_rng} to a random integer from 1 to 4
				if {_rng} is 1:
					make player say {skillquote1.%player%}
				else if {_rng} is 2:
					make player say {skillquote2.%player%}
				else if {_rng} is 3:
					make player say {skillquote3.%player%}
				else if {_rng} is 4:
					make player say {skillquote4.%player%}
				set {isTaunting.%player%} to true
				while player is sneaking:
					play sound "block.snow.hit" with volume 0.7 and pitch 0.8 at the player
					add 1 to {_tauntTimer}
					wait 2 tick
					if {_tauntTimer} is more than or equal to 18:
						exit 1 loop
				if {_tauntTimer} is more than or equal to 18:
					buffSFX(player)
					play mob spawner flames at the player
					play 20 (redstone block break with speed 1) at the player
					add 15 to {strbuff.%player%}
					add 15 to {sklbuff.%player%}
					wait 10 seconds
					if {combograde.%player%} is more than 0:
						add (9 * (8 - {combograde.%player%}) + ({comboscale.%player%})) to {comboscore.%player%}
					subtract 15 from {strbuff.%player%}
					subtract 15 from {sklbuff.%player%}
					clear {isTaunting.%player%}
					send "<light red>Taunt's bonus expired!"
	#MAX-Taunt
	else if the 4th line of the lore of the player's tool contains "MAX-Taunt":
		if player is sneaking:
			if {isTaunting.%player%} is not set:
				set {_rng} to a random integer from 1 to 4
				if {_rng} is 1:
					make player say {skillquote1.%player%}
				else if {_rng} is 2:
					make player say {skillquote2.%player%}
				else if {_rng} is 3:
					make player say {skillquote3.%player%}
				else if {_rng} is 4:
					make player say {skillquote4.%player%}
				set {isTaunting.%player%} to true
				while player is sneaking:
					play sound "block.snow.hit" with volume 0.7 and pitch 0.8 at the player
					add 1 to {_tauntTimer}
					wait 2 tick
					if {_tauntTimer} is more than or equal to 36:
						exit 1 loop
				if {_tauntTimer} is more than or equal to 36:
					buffSFX(player)
					play 2 mob spawner flames at the player
					play 40 (lapis block break with speed 1) at the player
					add 30 to {strbuff.%player%}
					add 30 to {sklbuff.%player%}
					if {combograde.%player%} is more than 0:
						add (18 * (7 - {combograde.%player%}) + ({comboscale.%player%})) to {comboscore.%player%}
					wait 20 seconds
					subtract 30 from {strbuff.%player%}
					subtract 30 from {sklbuff.%player%}
					clear {isTaunting.%player%}
					send "<light red>MAX-Taunt's bonus expired!"
				

on right click on an entity:
	#Rally Speed
	if the 4th line of the lore of player's tool contains "Rally Speed":
		apply speed 1 to the target for 30 seconds
		damage the player's tool by 5
	#Rally Strength
	else if the 4th line of the lore of player's tool contains "Rally Strength":
		apply strength 1 to the target for 30 seconds
		damage the player's tool by 5
	#Rally Defence
	else if the 4th line of the lore of player's tool contains "Rally Defence":
		apply resistance 1 to the target for 30 seconds
		damage the player's tool by 5
	#Rally Spectrum
	else if the 4th line of the lore of player's tool contains "Rally Spectrum":
		apply resistance 1 to the target for 30 seconds
		apply strength 1 to the target for 30 seconds
		apply speed 1 to the target for 30 seconds
		damage the player's tool by 15	
	#Shove
	else if the 4th line of the lore of player's tool contains "Shove":
		push the target backwards at speed 0.5
		push the target upwards at speed 0.5
		damage the player's tool by 1
		if {combograde.%player%} is more than 0:
			add (2.5 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Smite
	else if the 4th line of the lore of player's tool contains "Smite":
		push the target backwards at speed 1.5
		damage the player's tool by 1
		if {combograde.%player%} is more than 0:
			add (2.5 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Launcher
	else if the 4th line of the lore of player's tool contains "Launcher":
		damage the target by 1
		push the target upwards at speed 1.5
		if player is sneaking:
			push the player upwards at speed 1.25
		damage the player's tool by 1
		if {combograde.%player%} is more than 0:
			add (3 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Ardent Sacrifice
	else if the 4th line of the lore of player's tool contains "Ardent Sacrifice":
		heal the target by 4 hearts
		damage the player by 4 hearts
		make target say "%{healedQuote.%target%}%"
	#Swap
	else if the 4th line of the lore of player's tool contains "Swap":
		set {_warp} to location of block at the target
		teleport the target to the player
		teleport the player to {_warp}
		push the player forwards at speed 0.75
		push the target backwards at speed 0.75
	#Stomp
	else if the 4th line of the lore of the player's tool contains "Stomp":
		damage the target by 1 heart
		push the target downwards at speed 3
		if {combograde.%player%} is more than 0:
			add (3 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Reposition
	else if the 4th line of the lore of the player's tool contains "Reposition":
		teleport the target to the player
		wait 1 tick
		push the target backwards at speed 1.5
	#Siegmund & Sieglinde
	if the name of the player's tool contains "<gold><bold>Siegmund":
		apply strength 2 to the target for 15 seconds
		damage the player's tool by 5
	if the name of the player's tool contains "<gold><bold>Sieglinde":
		if the 6th line of the lore of the player's tool contains "<white><bold>Refined: Unique":
			loop all players in radius 10 of the player:
				if {party.%loop-player%} is {party.%player%}:
					apply strength 2 to the loop-player for 15 seconds
					if the 4th line of the lore of the player's tool contains "Rally Speed":
						apply swiftness 1 to the loop-player for 15 seconds
					if the 4th line of the lore of the player's tool contains "Rally Resistance":
						apply resistance 1 to the loop-player for 15 seconds
					if the 4th line of the lore of the player's tool contains "Rally Spectrum":
						apply resistance 1 to the loop-player for 15 seconds
						apply swiftness 1 to the loop-player for 15 seconds
					damage the player's tool by 5
			apply strength 2 to the player for 15 seconds
			if the 4th line of the lore of the player's tool contains "Rally Speed":
				apply swiftness 1 to the player for 15 seconds
			else if the 4th line of the lore of the player's tool contains "Rally Resistance":
				apply resistance 1 to the player for 15 seconds
		else:
			apply strength 2 to the target for 15 seconds
			damage the player's tool by 5

#Defiant Skills
on heal:
	#Mystletainn/Folkvangr Eff.
	if player's health is more than (player's max health * 0.7):
		if the name of the player's tool contains "<gold><bold>Folkvangr":
			if {folkvangr.%player%} is 1:
				subtract 40 from {strbuff.%player%}
				subtract 40 from {defbuff.%player%}
				send "<yellow>Folkvangr's effect wore off!" to the player
				clear {folkvangr.%player%}
		else if the name of the player's tool contains "<gold><bold>Mystletainn":
			if {mystletainn.%player%} is 1:
				subtract 30 from {sklbuff.%player%}
				send "<yellow>Mystletainn's effect wore off!" to the player
				clear {mystletainn.%player%}
	if player's health is less than (player's max health * 0.5):
		if the 1st line of the lore of the player's tool contains "Defiant Attack":
			remove strength from the player
			apply strength 4 to the player for 90 seconds
			show mob spawner flames on the player
			set {defiantbuff.%player%} to 1
		if the 1st line of the lore of the player's tool contains "Defiant Speed":
			remove speed from the player
			apply speed 4 to the player for 90 seconds
			show mob spawner flames on the player
			set {defiantbuff.%player%} to 1
		if the 1st line of the lore of the player's tool contains "Defiant Resistance":
			remove resistance from the player
			apply resistance 4 to the player for 90 seconds
			show mob spawner flames on the player
			set {defiantbuff.%player%} to 1
		else if the 2nd line of the lore of the player's tool contains "Wrath":
			set {wrathbuff.%player%} to 1
			show mob spawner flames on the player
	else if {defiantbuff.%player%} is 1:
		remove strength from the player
		remove speed from the player
		remove resistance from the player
		send "<light red>Defiant Skill bonus deactivated!" to the player
		set {defiantbuff.%player%} to 0
		
#Defiant skills, proc on damage.
on damage of a player:
	if (victim's health - final damage) is less than or equal to (victim's max health * 0.5):
		if {defiantbuff.%victim%} is not 1:
			if the 1st line of the lore of the victim's tool contains "Defiant Attack":
				remove strength from the victim
				apply strength 4 to the victim for 90 seconds
				show mob spawner flames on the victim
				set {defiantbuff.%victim%} to 1
				send "<yellow>Defiant Attack bonus now active!" to the victim
			if the 1st line of the lore of the victim's tool contains "<light red><bold>Slot A - Defiant Speed":
				remove speed from the victim
				apply speed 4 to the victim for 90 seconds
				show mob spawner flames on the victim
				set {defiantbuff.%victim%} to 1
				send "<yellow>Defiant Speed bonus now active!" to the victim
			if the 1st line of the lore of the victim's tool contains "Defiant Resistance":
				remove resistance from the victim
				apply resistance 4 to the victim for 90 seconds
				show mob spawner flames on the victim
				set {defiantbuff.%victim%} to 1
				send "<yellow>Defiant Resistance bonus now active!" to the victim
			#Folkvangr Unique
			if the name of the victim's tool contains "<gold><bold>Folkvangr":
				if the 6th line of the lore of the victim's tool contains "<white><bold>Refined: Unique":
					if (victim's health - damage) is less than (victim's health * 0.7):
						if {folkvangr.%victim%} is not set:
							set {folkvangr.%victim%} to 1
							add 40 to {strbuff.%victim%}
							add 40 to {defbuff.%victim%}
							send "<yellow>Folkvangr's effect activated!" to the victim
							show mob spawner flames on the victim
			#Mystletainn
			if the name of the victim's tool contains "<gold><bold>Mystletainn":
				if (victim's health - damage) is less than (victim's health * 0.7):
					if {mystletainn.%victim%} is not set:
						set {mystletainn.%victim%} to 1
						add 30 to {sklbuff.%victim%}
						send "<yellow>Mystletainn's effect activated!" to the victim
						show mob spawner flames on the victim

#Misc
on death:
	#Glory Kill
	if the attacker is a player:
		if the 1st line of the lore of the attacker's chestplate contains "Glory Kills":
			if the attacker's held item is empty:
				remove speed from the attacker
				remove haste from the attacker
				remove resistance from the attacker
				remove strength from the attacker
				wait a tick
				heal the attacker by 1
				increase the attacker's food level by 1
				apply speed 2 to the attacker for 6 seconds
				apply haste 4 to the attacker for 6 seconds
				apply resistance 1 to the attacker for 6 seconds
				apply strength 1 to the attacker for 6 seconds
				send "<red><bold>GLORY KILL!" to the attacker
				play sound "entity.generic.explode" with volume 1 and pitch 1 at victim for attacker
				play 60 (red wool break with speed 2) at the victim
	#Capture
	if {capture.%attacker%} is set:
		if the 4th line of the lore of the attacker's tool contains "Capture":
			drop the victim's tool at the attacker
			drop the victim's helmet at the attacker
			drop the victim's chestplate at the attacker
			drop the victim's leggings at the attacker
			drop the victim's boots at the attacker
			send "<light green>%victim% was captured!" to the attacker

#Mob loot handler
on death of a monster:
	#Resourceful Perk
	set {_perk} to checkSlots(attacker,"Resourceful")
	if {_perk} is 1:
		chance of 75%:
			drop 1 gunpowder at the victim
		chance of 50%:
			drop 1 iron nugget at the victim
			chance of 25%:
				drop 1 iron ingot at the victim
		chance of 25%:
			drop 1 gold nugget at the victim
			chance of 25%:
				drop 1 gold ingot at the victim
	if victim's world is not "Salindrum":
		#Helmund boss bonus
		if the name of the victim is "<light red>Helmund":
			loop {lvl.%victim%} times:
				chance of 5%:
					drop 1 diamond block at the victim
				chance of 30%:
					drop 1 diamond at the victim
				chance of 25%:
					drop 1 emerald at the victim
					chance of 20%:
						drop 1 emerald block at the victim
				drop 1 gold ingot at the victim
				chance of 25%:
					drop 1 gold block at the victim
				drop 1 iron ingot at the victim
				chance of 50%:
					drop 1 iron block at the victim
			add ceil(5 * {lvl.%victim%}) to {_cash}
			add ceil(attacker's level ^ 1.15) to {_xp}
			send "<gold>Helmund has been defeated!" to the attacker
			make player execute command "/qhelmundkilled"
			loop all monsters in radius 128 of the victim:
				if loop-monster is alive:
					clear {isBoss.%loop-monster%}
					kill the loop-monster
					play 80 (yellow wool break with speed 1) at the loop-monster
		clear {str.%victim%}
		clear {def.%victim%}
		clear {spd.%victim%}
		clear {skl.%victim%}
		clear {res.%victim%}
		set {_xp} to 0
		set {_cash} to 0
		#Elite Mode
		if {elitemode.%attacker%} is true:
			add ceil({lvl.%attacker%} ^ 0.5) to {_xp}
			send "<light blue>Elite Mode granted +%{_xp}% xp." to the attacker
		#Ring Bonuses
		loop all items in the attacker's inventory:
			if the name of the loop-item is "<yellow><bold>Thief Ring":
				chance of (({res.%attacker%} + {resbuff.%attacker%} + 25) / 2)%:
					give paper named "<light green><bold>Bullion (S)" with lore "<white>Right-click to gain $25!" to the attacker
			else if the name of the loop-item is "<light blue><bold>Elite Ring":
				add ceil(attacker's level ^ 1.005) to {_xp}
			else if the name of the loop-item is "<gold><bold>Crest of Mastery":
				add ceil(attacker's level ^ 1.15) to {_xp}
		#Boss Bonuses
		if {isBoss.%victim%} is true:
			loop {lvl.%victim%} times:
				chance of 1%:
					chance of 25%:
						drop 1 diamond block at the victim
				chance of 15%:
					drop 1 diamond at the victim
				chance of 25%:
					drop 1 emerald at the victim
					chance of 10%:
						drop 1 emerald block at the victim
				chance of 50%:
					drop 1 gold ingot at the victim
					chance of 10%:
						drop 1 gold block at the victim
				drop 1 iron ingot at the victim
				chance of 10%:
					drop 1 iron block at the victim
			add ceil(5 * {lvl.%victim%}) to {_cash}
			add ceil(attacker's level ^ 1.2) to {_xp}
			clear {isBoss.%victim%}
		#Treasure mob bonus
		if the name of the victim contains "<gold>Treasure":
			loop (10 + {t_lvl.%victim%}) times:
				chance of 1%:
					chance of 1%:
						drop 1 diamond block at the victim
				chance of 5%:
					drop 1 diamond at the victim
				chance of 14%:
					drop 1 emerald at the victim
					chance of 5%:
						drop 1 emerald block at the victim
				chance of 25%:
					drop 1 gold ingot at the victim
					chance of 5%:
						drop 1 gold block at the victim
				drop 1 iron ingot at the victim
				chance of 5%:
					drop 1 iron block at the victim
		#Leveled Monster Bonuses
		if {lvl.%victim%} is set:
			if ({lvl.%attacker%} - {lvl.%victim%}) is less than 0:
				add -1 *(ceil(({lvl.%victim%} - attacker's level) * 1.25)) to {_xp}
				add -1 * (ceil({lvl.%victim%} - attacker's level * 1.25)) to {_cash}
			else:
				add floor(attacker's level + 1 - {lvl.%victim%}) to {_xp}
				add floor(attacker's level + 1 - {lvl.%victim%}) to {_cash}
		else if {t_lvl.%victim%} is set:
			if ({lvl.%attacker%} + ({promoted.%attacker%} * 10) - {t_lvl.%victim%}) is less than 0:
				add -1 * (floor(({t_lvl.%victim%} - attacker's level) * 1.05)) to {_xp}
				add -1 * (floor(({t_lvl.%victim%} - attacker's level) * 1.05)) to {_cash}
			else:
				add floor((attacker's level + 1 - {t_lvl.%victim%}) * 0.75) to {_xp}
				add floor((attacker's level + 1 - {t_lvl.%victim%}) * 0.75) to {_cash}
		#Alstair bonuses
		if victim's world is "Alstair":
			add ceil(attacker's level / 2 ^ 0.6) to {_xp}
			#add 5 to {_cash}
		else if victim's world is "Alstair_Nether":
			add 1 to {_cash}
			add ceil(attacker's level / 2 ^ 0.7) to {_xp}
		else if victim's world is "Alstair_End":
			add 3 to {_cash}
			add ceil(attacker's level / 2 ^ 0.8) to {_xp}
		clear {lvl.%victim%}
		#Paragon bonus
		set {_slot} to checkSlots(attacker,"Paragon")
		if {_slot} is 1:
			add ceil(attacker's level / 2 ^ 0.35) to {_xp}
		#Personal Difficulty bonus
		if {perdiff.%attacker%} is 3:
			add ceil(attacker's level / 2 ^ 0.5) to {_xp}
			add ceil(attacker's level / 2 ^ 0.3) to {_cash}
		else if {perdiff.%attacker%} is 4:
			add ceil(attacker's level / 2 ^ 0.65) to {_xp}
			add ceil(attacker's level / 2 ^ 0.4) to {_cash}
		else if {perdiff.%attacker%} is 5:
			add ceil(attacker's level / 2 ^ 0.8) to {_xp}
			add ceil(attacker's level / 2 ^ 0.5) to {_cash}
		else if {perdiff.%attacker%} is 6:
			add ceil(attacker's level / 2 ^ 0.95) to {_xp}
			add ceil(attacker's level / 2 ^ 0.6) to {_cash}
		else if {perdiff.%attacker%} is 7:
			add ceil(attacker's level ^ 1.1) to {_xp}
			add ceil(attacker's level / 2 ^ 0.7) to {_cash}
		else if {perdiff.%attacker%} is 8:
			add ceil(attacker's level + 1 ^ 1.15) to {_xp}
			add ceil(attacker's level / 2 ^ 0.8) to {_cash}
		#Grant total bonuses
		if {_xp} is more than 0:
			set {_xp} to floor({_xp} ^ 0.9)
			make console execute command "/xp %{_xp}% %attacker%"
			send "<light yellow>+%{_xp}% EXP earned." to the attacker
		if {_cash} is more than 0:
			set {_cash} to floor({_cash} ^ 0.9)
			add {_cash} to attacker's balance
			send "<light yellow>+$%{_cash}% gold earned." to the attacker
	#Holy Weapon Paragon Bonuses
	if the name of the attacker's tool contains "<gold><bold>Mercurius":
		set {_xp} to ceil((attacker's level ^ 0.75) - floor(attacker's level ^ 0.3))
		make console execute command "/xp %{_xp}% %attacker%"
		send "<light green>Mercurius: +%{_xp}% bonus EXP." to the attacker
	else if the name of the attacker's tool contains "<gold><bold>Gradivus":
		set {_xp} to ceil((attacker's level ^ 0.75) - floor(attacker's level ^ 0.3))
		make console execute command "/xp %{_xp}% %attacker%"
		send "<light green>Gradivus: +%{_xp}% bonus EXP." to the attacker
	else if the name of the attacker's tool contains "<gold><bold>Parthia":
		set {_xp} to ceil((attacker's level ^ 0.75) - floor(attacker's level ^ 0.3))
		make console execute command "/xp %{_xp}% %attacker%"
		send "<light green>Parthia: +%{_xp}% bonus EXP." to the attacker
	#Blessed Sword
	else if the name of the attacker's tool contains "<gold><bold>Blessed Sword":
		chance of (50 + ({res.%attacker%} + {resbuff.%attacker%} / 2))%:
			drop 1 steak at the victim
			increase the player's food level by 2
			send "<yellow>Plenitude activated!" to the attacker
	#Experience Sapper
	if the 2nd line of the lore of the attacker's tool contains "Experience Sapper":
		set {_xp} to ceil(attacker's level - 2 ^ 0.35)
		make console execute command "/xp %{_xp}% %attacker%"
		send "<light green>Experience Sapper: +%{_xp}% bonus EXP." to the attacker
	#Plenitude
	if the 2nd line of the lore of the attacker's tool contains "Plenitude":
		chance of (50 + ({res.%attacker%} + {resbuff.%attacker%} / 2))%:
			drop 1 steak at the victim
			increase the player's food level by 1
			send "<yellow>Plenitude activated!" to the attacker
	#Despoil
	if the 2nd line of the lore of the attacker's tool contains "Despoil":
		chance of (10 + ({res.%attacker%} + {resbuff.%attacker%} / 4))%:
			give paper named "<light green><bold>Bullion (S)" with lore "<white>Right-click to gain $25!" to the attacker
		chance of (5 + ({res.%attacker%} + {resbuff.%attacker%} / 4))%:
			give paper named "<light green><bold>Bullion (M)" with lore "<white>Right-click to gain $50!" to the attacker
		chance of (1 + ({res.%attacker%} + {resbuff.%attacker%} / 4))%:
			give paper named "<light green><bold>Bullion (L)" with lore "<white>Right-click to gain $75!" to the attacker
		chance of ({res.%attacker%} + {resbuff.%attacker%} / 4)%:
			give paper named "<light green><bold>Bullion (XL)" with lore "<white>Right-click to gain $100!" to the attacker
	#Focus
	if the 1st line of the lore of the attacker's tool contains "Focus":
		if the 1st line of the lore of the attacker's tool contains "STR":
			add 10 to {strbuff.%attacker%}
			add 10 to {focusStr.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "SPD":
			add 10 to {spdbuff.%attacker%}
			add 10 to {focusSpd.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "DEF":
			add 10 to {defbuff.%attacker%}
			add 10 to {focusDef.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "SKL":
			add 10 to {sklbuff.%attacker%}
			add 10 to {focusSkl.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "MAG":
			add 10 to {resbuff.%attacker%}
			add 10 to {focusMag.%attacker%}
	play 40 (redstone block break with speed 1) at the victim
	#Small chance of Green/Gold Herbs being dropped on mob death.
	chance of 33%:
		play 30 (light green wool break with speed 1) at the victim
		drop 1 green dye named "<light green><bold>Sacred Herb" with lore "<white>A medicinal herb used to heal wounds.","<white>Right-click to restore 6 hearts.","<white>Can also be picked up off the ground to restore 3 hearts if wounded." at the victim
	chance of 10%:
		play 30 (gold block break with speed 1) at the victim
		drop 1 yellow dye named "<light yellow><bold>Golden Herb" with lore "<white>Powerful medicinal herb with extreme healing power.","<white>Right-click to restore 12 hearts.","<white>Can also be picked up off the ground to restore 6 hearts if wounded." at the victim
		
#Quick Draw
on right click with bow:
	if the 1st line of the lore of the player's tool contains "Quick Draw":
		if the player has an arrow:
			make the player shoot an arrow at speed 1.6
			remove 1 arrow from the player
			damage the player's tool by 1
			play sound "block.dispenser.launch" with volume 1 and pitch 1 at the player
		else:
			cancel event

#Bullion
on right-click with paper:
	if the name of the event-item is "<light green><bold>Money Voucher":
		remove the event-item from the player's inventory
		add 100 to the player's balance
		send "<light green><bold>Redeemed the voucher for $100! New balance: %player's money%" to the player
	else if the name of the event-item is "<light green><bold>Bullion (S)":
		remove the event-item from the player's inventory
		add 25 to the player's balance
		send "<light green><bold>Redeemed the Bullion (S) for $25! New balance: %player's money%" to the player
	else if the name of the event-item is "<light green><bold>Bullion (M)":
		remove the event-item from the player's inventory
		add 50 to the player's balance
		send "<light green><bold>Redeemed the Bullion (M) for $50! New balance: %player's money%" to the player
	else if the name of the event-item is "<light green><bold>Bullion (L)":
		remove the event-item from the player's inventory
		add 75 to the player's balance
		send "<light green><bold>Redeemed the Bullion (L) for $75! New balance: %player's money%" to the player
	else if the name of the event-item is "<light green><bold>Bullion (XL)":
		remove the event-item from the player's inventory
		add 100 to the player's balance
		send "<light green><bold>Redeemed the Bullion (XL) for $100! New balance: %player's money%" to the player
		
#Players can stall themselves in the air by attacking.
on left click:
	if player is not on ground:
		if player's tool is not air:
			if player's game mode is not creative:
				if {attackHangtimeCount.%player%} is more than 0:
					if {inHangtime.%player%} is not true:
						subtract 1 from {attackHangtimeCount.%player%}
						send "<bold><italics>Air Hang: %{attackHangtimeCount.%player%}%"
						push the player in horizontal direction of the player at speed 0.06
						loop 4 times:
							set {_magnitude} to (y of player's velocity)
							#Cap hangtime boost if it exceeds a specific amount, and take absolute value.
							if {_magnitude} is less than 0:
								set {_magnitude} to {_magnitude} * -1.05
							else:
								set {_magnitude} to 0.05
							push the player upwards at speed {_magnitude}
							wait 1 tick
							set {inHangtime.%player%} to true
						clear {inHangtime.%player%}
	#Firearms Reload Behavior
	set {_quick} to checkSlots(player,"Fast Fingers")
	set {_gunslinger} to checkSlots(player,"Resourceful")
	if the name of the player's tool contains "<red><bold>Super Shotgun | Clip: 1/2":
		if {_gunslinger} is 1:
			set {_reload} to 3
		else:
			set {_reload} to 6
		if the player has 12 gold nuggets:
			set {reloading.%player%} to 1
			set {_quick} to checkSlots(player,"Fast Fingers")
			if {_quick} is 1:
				play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
				wait 0.5 seconds
				play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
				wait 0.5 seconds
				play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
			else:
				play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
				wait a second
				play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
				wait a second
				play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
			set {_nugs} to "%{_reload}% gold nuggets" parsed as item
			remove {_nugs} from the player
			set the name of the player's tool to "<red><bold>Super Shotgun | Clip: 2/2"
			send "<red><bold>Locked and loaded! Find some meat!"
			set {reloading.%player%} to 0
		else:
			send "<red><bold>Not enough ammo!"
	else if the name of the player's tool contains "<red><bold>Super Shotgun | Clip: 0/2":
		if {_gunslinger} is 1:
			set {_reload} to 6
		else:
			set {_reload} to 12
		if the player has 12 gold nuggets:
			set {reloading.%player%} to 1
			set {_quick} to checkSlots(player,"Fast Fingers")
			if {_quick} is 1:
				play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
				wait 0.5 seconds
				play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
				wait 0.5 seconds
				play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
			else:
				play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
				wait a second
				play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
				wait a second
				play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
			set {_nugs} to "%{_reload}% gold nuggets" parsed as item
			remove {_nugs} from the player
			set the name of the player's tool to "<red><bold>Super Shotgun | Clip: 2/2"
			send "<red><bold>Locked and loaded! Find some meat!"
			set {reloading.%player%} to 0
		else if the player has 6 gold nuggets:
			set {reloading.%player%} to 1
			set {_quick} to checkSlots(player,"Fast Fingers")
			if {_quick} is 1:
				play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
				wait 0.5 seconds
				play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
				wait 0.5 seconds
				play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
			else:
				play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
				wait a second
				play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
				wait a second
				play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
			set {_reload} to {_reload} / 2
			set {_nugs} to "%{_reload}% gold nuggets" parsed as item
			remove {_nugs} from the player
			set the name of the player's tool to "<red><bold>Super Shotgun | Clip: 1/2"
			send "<red><bold>Could only load one barrel!"
			set {reloading.%player%} to 0
		else:
			send "<red><bold>Not enough ammo!"
	else if the name of the player's tool contains "<red><bold>Super Shotgun | Clip: 2/2":
		send "<red><bold>Already loaded! Find some meat!"
	#Flintlock Pistol
	if the name of the player's tool is "<light gray>Flintlock Pistol":
		if the 8th line of the lore of the player's tool is "0":
			if {reloading.%player%} is not set:
				if the player has 2 cobblestone:
					if the player has 1 gunpowder:
						set {reloading.%player%} to 1
						if {_quick} is 1:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.25 seconds
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.25 seconds
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						else:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.5 second
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.5 second
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						set the 8th line of the lore of the player's tool to "1"
						if {_gunslinger} is 1:
							remove 1 cobblestone from the player
						else:
							remove 2 cobblestone from the player
						remove 1 gunpowder from the player
						send "<light green>Locked and loaded!"
						clear {reloading.%player%}
					else:
						send "<light red>You need gunpowder to reload!"
				else:
					send "<light red>You need at least 2 cobblestone to reload!"
			else:
				send "<light red>Already reloading!"
		else:
			send "<light red>Already loaded!"
	#Iron Musket
	if the name of the player's tool is "<light gray>Iron Musket":
		if the 8th line of the lore of the player's tool is "0":
			if {reloading.%player%} is not set:
				if the player has 1 iron nugget:
					if the player has 1 gunpowder:
						set {reloading.%player%} to 1
						if {_quick} is 1:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.35 seconds
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.35 seconds
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						else:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.65 second
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.65 second
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						set the 8th line of the lore of the player's tool to "1"
						if {_gunslinger} is 1:
							chance of 50%:
								remove 1 iron nugget from the player
						else:
							remove 1 iron nugget from the player
						remove 1 gunpowder from the player
						send "<light green>Locked and loaded!"
						clear {reloading.%player%}
					else:
						send "<light red>You need gunpowder to reload!"
				else:
					send "<light red>You need an iron nugget to reload!"
			else:
				send "<light red>Already reloading!"
		else:
			send "<light red>Already loaded!"
	#Iron Pistol
	if the name of the player's tool is "<light gray>Iron Pistol":
		if the 8th line of the lore of the player's tool is not "8":
			if {reloading.%player%} is not set:
				set {_clip} to the 8th line of the lore of the player's tool parsed as integer
				set {_cost} to ceil((({_clip} - 8) * -1) / 2)
				set {_item} to "%{_cost}% iron nugget" parsed as item
				if the player has {_item}:
					if the player has 1 gunpowder:
						set {reloading.%player%} to 1
						if {_quick} is 1:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.325 seconds
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.325 seconds
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						else:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.625 second
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.625 second
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						set the 8th line of the lore of the player's tool to "8"
						if {_gunslinger} is 1:
							loop ceil({_cost} / 2) times:
								remove 1 iron nugget from the player
						else:
							loop {_cost} times:
								remove 1 iron nugget from the player
						remove 1 gunpowder from the player
						send "<light green>Locked and loaded!"
						clear {reloading.%player%}
					else:
						send "<light red>You need gunpowder to reload!"
				else:
					send "<light red>You need %{_cost}% iron nuggets to reload!"
			else:
				send "<light red>Already reloading!"
		else:
			send "<light red>Already at max clip size!"
	#Redstone Rifle
	if the name of the player's tool is "<light gray>Redstone Repeater":
		if the 8th line of the lore of the player's tool is not "30":
			if {reloading.%player%} is not set:
				set {_clip} to the 8th line of the lore of the player's tool parsed as integer
				set {_cost} to ceil((({_clip} - 30) * -1) / 2)
				set {_item} to "%{_cost}% iron nugget" parsed as item
				if the amount of iron nugget in the player's inventory is more than or equal to {_cost}:
					if the player has 1 gunpowder:
						set {reloading.%player%} to 1
						if {_quick} is 1:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.325 seconds
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.325 seconds
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						else:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.625 second
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.625 second
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						set the 8th line of the lore of the player's tool to "30"
						if {_gunslinger} is 1:
							loop ceil({_cost} / 2) times:
								remove 1 iron nugget from the player
						else:
							loop {_cost} times:
								remove 1 iron nugget from the player
						remove 1 gunpowder from the player
						send "<light green>Locked and loaded!"
						clear {reloading.%player%}
					else:
						send "<light red>You need gunpowder to reload!"
				else:
					send "<light red>You need %{_cost}% iron nuggets to reload!"
			else:
				send "<light red>Already reloading!"
		else:
			send "<light red>Already at max clip size!"
	#E-45s
	if the name of the player's tool is "<light gray>E-45s":
		if the 8th line of the lore of the player's tool is not "18":
			if {reloading.%player%} is not set:
				set {_clip} to the 8th line of the lore of the player's tool parsed as integer
				set {_cost} to ceil((({_clip} - 18) * -1))
				set {_item} to "%{_cost}% iron nugget" parsed as item
				if the amount of iron nugget in the player's inventory is more than or equal to {_cost}:
					if the player has 1 gunpowder:
						set {reloading.%player%} to 1
						if {_quick} is 1:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.2 seconds
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.2 seconds
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						else:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.35 second
							play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
							wait 0.35 second
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						set the 8th line of the lore of the player's tool to "18"
						if {_gunslinger} is 1:
							loop ceil({_cost} / 2) times:
								remove 1 iron nugget from the player
						else:
							loop {_cost} times:
								remove 1 iron nugget from the player
						remove 1 gunpowder from the player
						send "<light green>Locked and loaded!"
						clear {reloading.%player%}
					else:
						send "<light red>You need gunpowder to reload!"
				else:
					send "<light red>You need %{_cost}% iron nuggets to reload!"
			else:
				send "<light red>Already reloading!"
		else:
			send "<light red>Already at max clip size!"
	#Redgrave Sawn-Off
	if the name of the player's tool is "<light gray>Redgrave Sawn-Off":
		if the 8th line of the lore of the player's tool is not "5":
			if {reloading.%player%} is not set:
				set {_clip} to the 8th line of the lore of the player's tool parsed as integer
				set {_cost} to ceil((({_clip} - 5) * -1) * 2)
				set {_item} to "%{_cost}% gold nugget" parsed as item
				if the amount of gold nugget in the player's inventory is more than or equal to {_cost}:
					if the player has 1 gunpowder:
						set {reloading.%player%} to 1
						if {_quick} is 1:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.3 seconds
							loop ({_cost} / 2) times:
								play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
								wait 0.3 second
							wait 0.3 seconds
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						else:
							play sound "block.dispenser.dispense" with volume 2 and pitch 2 at the player
							wait 0.44 second
							loop ({_cost} / 2) times:
								play sound "block.dispenser.launch" with volume 2 and pitch 0.5 at the player
								wait 0.44 second
							#wait 0.44 second
							play sound "block.dispenser.dispense" with volume 2 and pitch 1 at the player
						set the 8th line of the lore of the player's tool to "5"
						if {_gunslinger} is 1:
							loop ceil({_cost} / 2) times:
								remove 1 gold nugget from the player
						else:
							loop {_cost} times:
								remove 1 gold nugget from the player
						remove 1 gunpowder from the player
						send "<light green>Locked and loaded!"
						clear {reloading.%player%}
					else:
						send "<light red>You need gunpowder to reload!"
				else:
					send "<light red>You need %{_cost}% gold nuggets to reload!"
			else:
				send "<light red>Already reloading!"
		else:
			send "<light red>Already at max clip size!"
			
#Projectile Collision
on projectile hit:
	#Fujin Yumi Refine Eff
	if the name of the shooter's tool is "<gold><bold>Fujin Yumi":
		if the 6th line of the lore of the shooter's tool contains "Unique":
			if the shooter is sneaking:
				teleport the shooter to the projectile
	if metadata value "gunType" of the projectile is set:
		wait 1 tick
		delete the projectile
	else if metadata value "SUPERSHOTGUN" of the projectile is set:
		wait 1 tick
		delete the projectile
	else if metadata value "JavType" of the projectile is set:
		wait 1 tick
		delete the projectile

#Quarter-Second Periodicals
every 0.1 seconds:
	loop all players:
		if loop-player is on ground:
			set {attackHangtimeCount.%loop-player%} to 4
			clear {inHangtime.%loop-player%}
		if the name of loop-player's tool contains "<gold><bold>":
			play 10 (firework spark with speed 0) at loop-player
			play 10 (critical hit with speed 0) at loop-player
			play 10 (snow shovel with speed 0) at loop-player
		loop all entities in radius 8 of loop-player:
			if loop-entity-2 is a citizen:
				if the name of loop-entity-2's tool contains "<gold><bold>":
					play 10 (firework spark with speed 0) at loop-entity-2
					play 10 (critical hit with speed 0) at loop-entity-2
					play 10 (snow shovel with speed 0) at loop-entity-2
					
#5-Second Periodicals
every 5 seconds:
	loop all players:
		if the name of loop-player's tool contains "<gold><bold>Binding Blade":
			if the 6th line of the lore of loop-player's tool contains "<white><bold>Refined: Unique":
				apply resistance 2 to the loop-player for 5 seconds
		else if the name of loop-player's tool contains "<gold><bold>Armads":
			apply resistance 2 to the loop-player for 5 seconds
		else if the name of loop-player's tool contains "<gold><bold>Falchion":
			if the 6th line of the lore of loop-player's tool contains "<white><bold>Refined: Unique":
				loop all players in radius 8 of loop-player-1:
					if {party.%loop-entity-2%} is {party.%loop-player-1%}:
						apply swiftness 1 to the loop-entity-2 for 5 seconds
						apply resistance 1 to the loop-entity-2 for 5 seconds
						apply strength 1 to the loop-entity-2 for 5 seconds
						play 20 (firework spark with speed 0) at loop-entity-2
						play 20 (critical hit with speed 0) at loop-entity-2
						play 20 (snow shovel with speed 0) at loop-entity-2
		
#Every-Second Periodicals
every 1 second:
	loop all players:
		if the name of loop-player's tool is "<gold><bold>Blessed Sword":
			if the 6th line of the lore of loop-player's tool contains "Unique":
				apply regeneration 2 to loop-player for 1 second
				remove weakness from loop-player
				remove slowness from loop-player
				remove poison from loop-player
				remove wither from loop-player
	
#Players can transfer more momentum into the air.
on jump:
	if player is sprinting:
		set {_magnitude} to sqrt(((x of player's velocity ^ 2) + (y of player's velocity ^ 2) + (z of player's velocity ^ 2))) * 3.5
		#Cap maximum speed if it exceeds a specific amount, and take absolute value.
		if {_magnitude} is less than 0:
			set {_magnitude} to {_magnitude} * -1
		else if {_magnitude} is more than 0.07:
			set {_magnitude} to 0.07
		push the player in horizontal direction of the player at speed {_magnitude}
		set {_magnitude} to {_magnitude} / 1.15
		wait 1 tick
		#ZOOM!
		while {_magnitude} is more than 0.005:
			add 0.01 to {_decay}
			push the player in horizontal direction of the player at speed {_magnitude}
			set {_magnitude} to {_magnitude} / (1.05 + {_decay})
			#send "%{_magnitude}%"
			if player is on ground:
				wait 1 tick
				exit 1 loop
			wait 1 tick
		
#Gold/Green Herb Pickup Behavior
on pick up:
	if the name of the event-item is "<light green><bold>Sacred Herb":
		if player's health is less than player's maximum health:
			cancel event
			delete event-entity
			play sound "entity.player.swim" with volume 2 and pitch 1.5 at the player for the player
			play sound "item.bucket.fill" with volume 2 and pitch 1.3 at the player for the player
			play 30 (light green wool break with speed 1) at the player
			heal the player by 3 hearts
			send "<light green>Consumed a Sacred Herb and restored 3 HP."
	else if the name of the event-item is "<light yellow><bold>Golden Herb":
		if player's health is less than player's maximum health:
			cancel event
			delete event-entity
			play sound "block.enchantment_table.use" with volume 3 and pitch 2 at the player for the player
			play sound "entity.player.swim" with volume 1 and pitch 1.5 at the player for the player
			play 30 (gold block break with speed 1) at the player
			heal the player by 6 hearts
			send "<light yellow>Consumed a Golden Herb and restored 12 HP."
		
#On Equip
on tool change:
	#Light Brand
	if the name of the player's tool contains "<gold><bold>Light Brand":
		if {weaponrank.%player%::lances} is less than 3750:
			send "<light red>You need at least B rank or higher in Swords to wield the Light Brand."
			cancel event
		else if {lightbrandEQ.%player%} is not set:
			add 20 to {sklbuff.%player%}
			set {lightbrandEQ.%player%} to 1
	else if {lightbrandEQ.%player%} is 1:
		subtract 20 from {sklbuff.%player%}
		clear {lightbrandEQ.%player%}
	#Gae Bolg
	else if the name of the player's tool contains "<gold><bold>Gae Bolg":
		set {_slot} to checkSlots(player,"Crusader's Blood")
		if {_slot} is 0:
			if {weapongrade.%player%::lances} is not "<gold><bold>S":
				send "<light red>You need an S rank in Lances OR a Crusader's Blood to wield the Gae Bolg." to the player
				cancel event
			else if {gaebolgEQ.%player%} is not set:
				add 30 to {strbuff.%player%}
				add 30 to {defbuff.%player%}
				add 30 to {sklbuff.%player%}
				set {gaebolgEQ.%player%} to 1
		else if {gaebolgEQ.%player%} is not set:
			add 30 to {strbuff.%player%}
			add 30 to {defbuff.%player%}
			add 30 to {sklbuff.%player%}
			set {gaebolgEQ.%player%} to 1
	else if {gaebolgEQ.%player%} is 1:
		subtract 30 from {sklbuff.%player%}
		subtract 30 from {strbuff.%player%}
		subtract 30 from {defbuff.%player%}
		clear {gaebolgEQ.%player%}
	#Tyrfing Crusader's Blood
	if the name of the player's tool contains "<gold><bold>Tyrfing":
		set {_slot} to checkSlots(player,"Crusader's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::swords} is less than 7500:
				send "<light red>You need at least an A rank in Swords OR a Crusader's blood to wield Tyrfing." to the player
				cancel event
	#Mystletainn Crusader's Blood
	else if the name of the player's tool contains "<gold><bold>Mystletainn":
		set {_slot} to checkSlots(player,"Crusader's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::swords} is less than 7500:
				send "<light red>You need at least an A rank in Swords OR a Crusader's blood to wield Mystletainn." to the player
				cancel event
			else if {mystletainnEQ.%player%} is not set:
				add 40 to {sklbuff.%player%}
				set {mystletainnEQ.%player%} to 1
				if the 6th line of the lore of the player's tool contains "Unique":
					add 20 to {strbuff.%player%}
					add 20 to {spdbuff.%player%}
					add 20 to {sklbuff.%player%}
					add 20 to {defbuff.%player%}
					add 20 to {resbuff.%player%}
					set {mystletainnRefine.%player%} to 1
					show mob spawner flames at the player
		else if {mystletainnEQ.%player%} is not set:
			add 40 to {sklbuff.%player%}
			set {mystletainnEQ.%player%} to 1
			if the 6th line of the lore of the player's tool contains "Unique":
				add 20 to {strbuff.%player%}
				add 20 to {spdbuff.%player%}
				add 20 to {sklbuff.%player%}
				add 20 to {defbuff.%player%}
				add 20 to {resbuff.%player%}
				show mob spawner flames at the player
	else if {mystletainnEQ.%player%} is 1:
		subtract 40 from {sklbuff.%player%}
		clear {mystletainnEQ.%player%}
		if {mystletainnRefine.%player%} is 1:
			subtract 20 from {strbuff.%player%}
			subtract 20 from {spdbuff.%player%}
			subtract 20 from {sklbuff.%player%}
			subtract 20 from {defbuff.%player%}
			subtract 20 from {resbuff.%player%}
			clear {mystletainnRefine.%player%}
	#Falchion Lord's Blood
	if the name of the player's tool contains "<gold><bold>Falchion":
		set {_slot} to checkSlots(player,"Lord's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::swords} is less than 7500:
				send "<light red>You need at least A rank in Swords OR a Lord's blood to wield Falchion." to the player
				cancel event
	#Binding Blade Lord's Blood
	else if the name of the player's tool contains "<gold><bold>Binding Blade":
		set {_slot} to checkSlots(player,"Lord's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::swords} is less than 7500:
				send "<light red>You need at least A rank in Swords OR a Lord's blood to wield the Binding Blade." to the player
				cancel event
	#Sieglinde Lord's Blood
	else if the name of the player's tool contains "<gold><bold>Sieglinde":
		set {_slot} to checkSlots(player,"Lord's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::swords} is less than 7500:
				send "<light red>You need at least A rank in Swords OR a Lord's blood to wield Sieglinde." to the player
				cancel event
	#Siegmund Lord's Blood
	else if the name of the player's tool contains "<gold><bold>Siegmund":
		set {_slot} to checkSlots(player,"Lord's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::lances} is less than 7500:
				send "<light red>You need at least A rank in Lances OR a Lord's blood to wield Siegmund." to the player
				cancel event
	#Folkvangr Lord's Blood
	else if the name of the player's tool contains "<gold><bold>Folkvangr":
		set {_slot} to checkSlots(player,"Lord's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::swords} is less than 7500:
				send "<light red>You need at least A rank in Swords OR a Lord's blood to wield Folkvangr." to the player
				cancel event
	#Fensalir Lord's Blood
	else if the name of the player's tool contains "<gold><bold>Fensalir":
		set {_slot} to checkSlots(player,"Lord's Blood")
		if {_slot} is 0:
			if {weaponrank.%player%::lances} is less than 7500:
				send "<light red>You need at least A rank in Lances OR a Lord's blood to wield Fensalir." to the player
				cancel event
	#Ragnell
	else if the name of the player's tool is "<gold><bold>Ragnell":
		if {weaponrank.%player%::swords} is less than 7500:
			send "<light red>You need at least A rank in Swords to wield Ragnell."
			cancel event
	#Armads
	else if the name of the player's tool is "<gold><bold>Armads":
		if {weaponrank.%player%::axes} is less than 7500:
			send "<light red>You need at least A rank in Axes to wield Armads."
			cancel event
	#Parthia
	else if the name of the player's tool is "<gold><bold>Parthia":
		if {weaponrank.%player%::bows} is less than 3750:
			send "<light red>You need at least B rank in Bows to wield Parthia."
			cancel event
	#Durandal
	else if the name of the player's tool is "<gold><bold>Durandal":
		if {weaponrank.%player%::swords} is less than 7500:
			send "<light red>You need at least A rank in Swords to wield Durandal."
			cancel event
	#Mercurius
	else if the name of the player's tool is "<gold><bold>Mercurius":
		if {weaponrank.%player%::swords} is less than 3750:
			send "<light red>You need at least B rank in Swords to wield Mercurius."
			cancel event
	#Basilikos
	else if the name of the player's tool is "<gold><bold>Basilikos":
		if {weaponrank.%player%::axes} is less than 3750:
			send "<light red>You need at least B rank in Axes to wield Basilikos."
			cancel event
	#Basilikos
	else if the name of the player's tool is "<gold><bold>Basilikos":
		if {weaponrank.%player%::axes} is less than 3750:
			send "<light red>You need at least B rank in Axes to wield Basilikos."
			cancel event
	#Gradivus
	else if the name of the player's tool is "<gold><bold>Gradivus":
		if {weaponrank.%player%::lances} is less than 3750:
			send "<light red>You need at least B rank in Lances to wield Gradivus."
			cancel event
	#BSS
	else if the name of the player's tool is "<gold><bold>Balder Side Sword":
		if {weaponrank.%player%::swords} is less than 3750:
			send "<light red>You need at least B rank in Swords to wield the Balder Side Sword."
			cancel event
	#Fujin Yumi
	else if the name of the player's tool is "<gold><bold>Fujin Yumi":
		if {weaponrank.%player%::bows} is less than 3750:
			send "<light red>You need at least B rank in Bows to wield the Fujin Yumi."
			cancel event
	#Rex Hasta
	else if the name of the player's tool is "<gold><bold>Rex Hasta":
		if {weaponrank.%player%::lances} is less than 7500:
			send "<light red>You need at least B rank in Lances to wield the Rex Hasta."
			cancel event
	#Meisterschwert
	else if the name of the player's tool is "<gold><bold>Meisterschwert":
		if {weaponrank.%player%::swords} is less than 3750:
			send "<light red>You need at least B rank in Lances to wield the Meisterschwert."
			cancel event
	#Dire Thunder
	else if the name of the player's tool is "<gold><bold>Dire Thunder":
		if {weaponrank.%player%::magic} is less than 3750:
			send "<light red>You need at least B rank in Magic to cast Dire Thunder."
			cancel event
	#Rhomphaia
	else if the name of the player's tool is "<gold><bold>Rhomphaia":
		if {weaponrank.%player%::lances} is less than 3750:
			send "<light red>You need at least B rank in Lances to wield Rhomphaia."
			cancel event
	#Alondite
	else if the name of the player's tool is "<gold><bold>Alondite":
		if {weaponrank.%player%::swords} is less than 7500:
			send "<light red>You need at least A rank in Swords to wield Alondite."
			cancel event
	#Guard Bow
	else if the name of the player's tool is "<gold><bold>Guard Bow":
		if {weaponrank.%player%::bows} is less than 1875:
			send "<light red>You need at least C rank in Bows to wield a Guard Bow."
			cancel event
	#Fujin Yumi
	else if the name of the player's tool is "<gold><bold>Fujin Yumi":
		if {weaponrank.%player%::bows} is less than 3750:
			send "<light red>You need at least B rank in Bows to wield the Fujin Yumi."
			cancel event
		else if {FYEQ.%player%} is not set:
			add 20 to {resbuff.%player%}
			set {FYEQ.%player%} to 1
	else if {FYEQ.%player%} is 1:
		clear {FYEQ.%player%}
		subtract 20 from {resbuff.%player%}
	#Brave Bow
	if the name of the player's tool is "<gold><bold>Brave Bow":
		if {weaponrank.%player%::bow} is less than 1875:
			send "<light red>You need at least C rank in Bows to wield a Brave Bow."
			cancel event
		else:
			set {BraveBowEQ.%player%} to true
			subtract 15 from {spdbuff.%player%}
	else if {BraveBowEQ.%player%} is true:
		add 15 to {spdbuff.%player%}
		clear {BraveBowEQ.%player%}
	#Crowbar
	else if the name of the player's tool contains "<gold><bold>Crowbar":
		apply swiftness 1 to the player for 9999 seconds
		apply haste 4 to the player for 9999 seconds
		set {crowbareq.%player%} to 1
	else if {crowbareq.%player%} is 1:
		remove swiftness from the player
		remove haste from the player
		set {crowbareq.%player%} to 0
	#Hauteclere
	if the name of the player's tool contains "<gold><bold>Hauteclere":
		if {weaponrank.%player%::Axes} is less than 3750:
			send "<light red>You need at least B rank in Axes to wield Hauteclere."
			cancel event
		else:
			add 15 to {sklbuff.%player%}
			set {hauteclereEQ.%player%} to 1
	else if {hauteclereEQ.%player%} is 1:
		subtract 15 from {sklbuff.%player%}
		clear {hauteclereEQ.%player%}
	#Dracoshield
	if the name of the player's offhand tool contains "<gold><bold>Dracoshield":
		if {dracoshieldEQ.%player%} is not set:
			add 20 to {defbuff.%player%}
			add 20 to {resbuff.%player%}
			set {dracoshieldEQ.%player%} to true
	else if {dracoshieldEQ.%player%} is set:
		subtract 20 from {defbuff.%player%}
		subtract 20 from {resbuff.%player%}
	#
	#Prevent Hotswaps While Reloading
	if {reloading.%player%} is 1:
		cancel event
		send "<red><bold>Can't swap weapons while reloading!"
	#Holy Weapons produce particles
	if the name of the player's tool contains "<gold><bold>":
		strike lightning effect at the player
		play 30 (firework spark with speed 0) at the player
		play 30 (critical hit with speed 0) at the player
		play 30 (snow shovel with speed 0) at the player
		
#Judgement Cut
on right click:
	if the name of the player's tool is "<gold><bold>Yamato":
		if the player is sneaking:
			if player is on ground:
				if {JCActive.%player%} is not set:
					set {JCActive.%player%} to true
					make player say "<Light blue>Slay all..."
					apply slowness 100 to the player for 12 seconds
					apply weakness 100 to the player for 12 seconds
					apply blindness 1 to the player for 12 seconds
					play sound "entity.generic.explode" with volume 1.5 and pitch 0.5 at the player
					play large explosion at the player
					loop 40 times:
						if player is not on ground:
							exit loop
						else if player is not sneaking:
							exit loop
						else:
							add 1 to {_JCWait}
							loop all blocks in radius 20 of the player:
								if y coordinate of loop-block is more than or equal to y coordinate of the block at the player:
									chance of 2%:
										play 5 (cyan wool break with speed 1) at the loop-block
										play 5 (blue wool break with speed 1) at the loop-block
							loop all monsters in radius 20 of the player:
								play 10 (white wool break with speed 1) at the loop-monster
							loop all players in radius 20 of the player:
								if loop-player is not the player:
									play 10 (white wool break with speed 1) at the loop-player
							wait 0.25 seconds
							send action bar "<light blue><bold>JUDGEMENT CUT CHARGE: %%%{_JCWAIT} * 2.5%" to the player
							play sound "entity.minecart.riding" with volume 0.5 and pitch 0.5 at the player
					if {_JCWait} is more than 8:
						play sound "entity.player.attack.sweep" with volume 2 and pitch 0.7 at the player
						wait 0.3 seconds
						play sound "entity.enderdragon.shoot" with volume 1.5 and pitch 0.7 at the player
						play sound "entity.generic.explode" with volume 2 and pitch 0.5 at the player
						play sound "block.end_portal.spawn" with volume 2 and pitch 1 at the player
						loop all monsters in radius 20 of the player:
							make the player damage loop-monster by {_JCWait}
							play 40 (cyan wool break with speed 1) at the loop-monster
							play 40 (quartz block break with speed 1) at the loop-monster
							play explosion at the loop-monster
						loop all players in radius 20 of the player:
							if loop-player is not the player:
								make the player damage loop-player by {_JCWait}
								play 40 (cyan wool break with speed 1) at the loop-player
								play 40 (quartz block break with speed 1) at the loop-player
								play explosion at the loop-player
						set {_rng} to a random integer between 1 and 4
						if {_rng} is 1:
							make player say "%{skillquote1.%player%}%"
						else if {_rng} is 2:
							make player say "%{skillquote2.%player%}%"
						else if {_rng} is 3:
							make player say "%{skillquote3.%player%}%"
						else if {_rng} is 4:
							make player say "%{skillquote4.%player%}%"
						remove slowness from the player
						remove weakness from the player
						remove blindness from the player
						#apply slowness 100 to the player for 2 seconds
						#apply weakness 100 to the player for 2 seconds
					else:
						remove slowness from the player
						remove weakness from the player
						remove blindness from the player
					clear {JCActive.%player%}
		
#Holy Weapons become Broken Weapons instead of Dissapearing
on tool break:
	if the name of the event-item contains "<gold><bold>Binding Blade":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of the Binding Blade." to the player
	else if the name of the event-item contains "<gold><bold>Falchion":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of Falchion." to the player
	else if the name of the event-item contains "<gold><bold>Ragnell":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of Ragnell." to the player
	else if the name of the event-item contains "<gold><bold>Tyrfing":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of Tyrfing" to the player
	else if the name of the event-item contains "<gold><bold>Light Brand":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of the Light Brand." to the player
	else if the name of the event-item contains "<gold><bold>Armads":
		give stone axe of unbreaking 100 named "<light blue><bold>Broken Axe" with lore "A broken axe.", "This is all that remains of Armads." to the player
	else if the name of the event-item contains "<gold><bold>Parthia":
		give bow of unbreaking 100 named "<light blue><bold>Broken Bow" with lore "A broken bow.", "This is all that remains of Parthia." to the player
	else if the name of the event-item contains "<gold><bold>Leif's Blade":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "When repaired:", "Broken Sword --> Leif's Blade" to the player
	else if the name of the event-item contains "<gold><bold>Siegmund":
		give stone shovel of unbreaking 100 named "<light blue><bold>Broken Lance" with lore "A broken lance.", "This is all that remains of Siegmund." to the player
	else if the name of the event-item contains "<gold><bold>Sieglinde":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of the Sieglinde." to the player
	else if the name of the event-item contains "<gold><bold>Durandal":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of Durandal." to the player
	else if the name of the event-item contains "<gold><bold>Blazing Durandal":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "When repaired:", "Broken Sword --> Blazing Durandal" to the player
	else if the name of the event-item contains "<gold><bold>Gae Bolg":
		give stone shovel of unbreaking 100 named "<light blue><bold>Broken Lance" with lore "A broken lance.", "This is all that remains of the Gae Bolg." to the player
	else if the name of the event-item contains "<gold><bold>Gradivus":
		give stone shovel of unbreaking 100 named "<light blue><bold>Broken Lance" with lore "A broken lance.", "This is all that remains of Gradivus." to the player
	else if the name of the event-item contains "<gold><bold>Hauteclere":
		give stone axe of unbreaking 100 named "<light blue><bold>Broken Axe" with lore "A broken axe.", "This is all that remains of the Hauteclere." to the player
	else if the name of the event-item contains "<gold><bold>Folkvangr":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of Folkvangr." to the player
	else if the name of the event-item contains "<gold><bold>Fensalir":
		give stone shovel of unbreaking 100 named "<light blue><bold>Broken Lance" with lore "A broken lance.", "This is all that remains of Fensalir." to the player
	else if the name of the event-item contains "<gold><bold>Basilikos":
		give stone axe of unbreaking 100 named "<light blue><bold>Broken Axe" with lore "A broken axe.", "This is all that remains of the Basilikos." to the player
	else if the name of the event-item contains "<gold><bold>Mystletainn":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "This is all that remains of Mystletainn." to the player
	else if the name of the event-item contains "<gold><bold>Dark Mystletainn":
		give stone sword of unbreaking 100 named "<light blue><bold>Broken Sword" with lore "A broken sword.", "When repaired:", "Broken Sword --> Dark Mystletainn" to the player