#Overhauls survival to be more challenging, implementing a temperature system, thirst, and other additions.

command /realism <number>:
	trigger:
		if arg 1 is 1:
			set {realism.%player%} to 1
			set {temperature.%player%} to 100
			set {thirst.%player%} to 100
			create bossbar titled "<cyan>Thirst" and id "thirstmeter.%player's uuid%" for player with progress 100 with colors blue
			display bossbar "thirstmeter.%player's uuid%"
			send "<gold>Realism mode enabled."
		else:
			set {realism.%player%} to 0
			set {temperature.%player%} to 100
			set {thirst.%player%} to 100
			hide bossbar "thirstmeter.%player's uuid%"
			destroy bossbar "thirstmeter.%player's uuid%"
			send "<gold>Realism mode disabled."

function getHelmetWarmthMod(PLR: player) :: number:
	if {_PLR} is wearing a leather helmet:
		return 1.2
	else if {_PLR} is wearing a chain helmet:
		return 0.5
	else if {_PLR} is wearing an iron helmet:
		return -0.3
	else if {_PLR} is wearing a gold helmet:
		return -0.15
	else if {_PLR} is wearing a diamond helmet:
		return 0
		
function getChestplateWarmthMod(PLR: player) :: number:
	if {_PLR} is wearing a leather chestplate:
		return 1.6
	else if {_PLR} is wearing a chain chestplate:
		return 0.6
	else if {_PLR} is wearing an iron chestplate:
		return -0.5
	else if {_PLR} is wearing a gold chestplate:
		return -0.25
	else if {_PLR} is wearing a diamond chestplate:
		return 0

function getLeggingsWarmthMod(PLR: player) :: number:
	if {_PLR} is wearing leather leggings:
		return 1.2
	else if {_PLR} is wearing chain leggings:
		return 0.6
	else if {_PLR} is wearing iron leggings:
		return -0.5
	else if {_PLR} is wearing gold leggings:
		return -0.2
	else if {_PLR} is wearing diamond leggings:
		return 0
		
function getBootsWarmthMod(PLR: player) :: number:
	if {_PLR} is wearing leather boots:
		return 1
	else if {_PLR} is wearing chain boots:
		return 0.5
	else if {_PLR} is wearing iron boots:
		return -0.3
	else if {_PLR} is wearing gold boots:
		return -0.15
	else if {_PLR} is wearing diamond boots:
		return 0
	
function getShelterInsulation(PLR: player) :: number:
	set {_totalInsulation} to 0
	loop all blocks in radius 20 of {_PLR}:
		#Blocks far below the player are not counted
		if loop-block's y-coordinate is more than or equal to ({_PLR}'s y-coordinate - 1):
			if loop-block is air:
				if time in {_PLR}'s world is not between 18:00 and 6:00:
					if {_nighttimeAirPenalty} is not set:
						subtract 0.001 from {_totalInsulation}
						set {_nighttimeAirPenalty} to 2
					else:
						subtract 1 from {_nighttimeAirPenalty}
						if {_nighttimeAirPenalty} is less than or equal to 0:
							clear {_nighttimeAirPenalty}
				else:
					if {_nighttimeAirPenalty} is not set:
						subtract 0.001 from {_totalInsulation}
						set {_nighttimeAirPenalty} to 5
					else:
						subtract 1 from {_nighttimeAirPenalty}
						if {_nighttimeAirPenalty} is less than or equal to 0:
							clear {_nighttimeAirPenalty}
			#Stone is a poor insulator, but is better than nothing
			else if loop-block is any stone:
				add 0.001 to {_totalInsulation}
			else if loop-block is cobblestone:
				add 0.001 to {_totalInsulation}
			else if loop-block is any ore:
				add 0.001 to {_totalInsulation}
			else if loop-block is netherrack:
				add 0.001 to {_totalInsulation}
			else if loop-block is brick block:
				add 0.001 to {_totalInsulation}
			#Logs are slightly better but still let air leak in
			else if loop-block is any log:
				add 0.002 to {_totalInsulation}
			#Misc decoration blocks
			else if loop-block is oak stairs:
				add 0.004 to {_totalInsulation}
			else if loop-block is birch stairs:
				add 0.004 to {_totalInsulation}
			else if loop-block is jungle stairs:
				add 0.004 to {_totalInsulation}
			else if loop-block is spruce stairs:
				add 0.004 to {_totalInsulation}
			else if loop-block is acacia stairs:
				add 0.004 to {_totalInsulation}
			else if loop-block is dark oak stairs:
				add 0.004 to {_totalInsulation}
			else if loop-block is oak fence:
				add 0.004 to {_totalInsulation}
			else if loop-block is birch fence:
				add 0.004 to {_totalInsulation}
			else if loop-block is jungle fence:
				add 0.004 to {_totalInsulation}
			else if loop-block is spruce fence:
				add 0.004 to {_totalInsulation}
			else if loop-block is acacia fence:
				add 0.004 to {_totalInsulation}
			else if loop-block is dark oak fence:
				add 0.004 to {_totalInsulation}
			else if loop-block is any carpet:
				add 0.002 to {_totalInsulation}
			else if loop-block is oak slab:
				add 0.004 to {_totalInsulation}
			else if loop-block is birch slab:
				add 0.004 to {_totalInsulation}
			else if loop-block is jungle slab:
				add 0.004 to {_totalInsulation}
			else if loop-block is spruce slab:
				add 0.004 to {_totalInsulation}
			else if loop-block is acacia slab:
				add 0.004 to {_totalInsulation}
			else if loop-block is dark oak slab:
				add 0.004 to {_totalInsulation}
			#Heat sources
			else if loop-block is fire:
				add 0.01 to {_totalInsulation}
			else if loop-block is torch:
				add 0.004 to {_totalInsulation}
			#Planks are basic but effective.
			else if loop-block is oak planks:
				add 0.006 to {_totalInsulation}
			else if loop-block is birch planks:
				add 0.006 to {_totalInsulation}
			else if loop-block is jungle planks:
				add 0.006 to {_totalInsulation}
			else if loop-block is spruce planks:
				add 0.006 to {_totalInsulation}
			else if loop-block is acacia planks:
				add 0.006 to {_totalInsulation}
			else if loop-block is dark oak planks:
				add 0.006 to {_totalInsulation}
			#Wool is strong insulation
			else if loop-block is any wool:
				add 0.01 to {_totalInsulation}
			else:
				if {_unrecognizedBlockBonus} is not set:
					add 0.001 to {_totalInsulation}
					set {_unrecognizedBlockBonus} to true
				else:
					clear {_unrecognizedBlockBonus}
	return {_totalInsulation}

on load:
	register new shaped recipe for stick named "<bold>Thermometor" with lore "Right-click to check your temperature. 71-129 is healthy." using air, iron ingot, air, air, redstone, air, air, iron ingot, air with id "thermometer" in group "hardcore"

on respawn:
	set {temperature.%player%} to 100
	set {thirst.%player%} to 100

on right click with stick:
	if {realism.%player%} is 1:
		if the name of the player's tool is "<bold>Thermometor":
			set {_h.%player%} to getHelmetWarmthMod(player)
			set {_c.%player%} to getChestplateWarmthMod(player)
			set {_l.%player%} to getLeggingsWarmthMod(player)
			set {_b.%player%} to getBootsWarmthMod(player)
			add {_h.%player%} to {_exposure.%player%}
			add {_c.%player%} to {_exposure.%player%}
			add {_l.%player%} to {_exposure.%player%}
			add {_b.%player%} to {_exposure.%player%}
			add getShelterInsulation(player) to {_exposure.%player%}
			send "<gray>Temperature: %{temperature.%player%}%"
			send "<gray>Current Exposure: %{_exposure.%player%}%"
			send "<gray>Shelter Rating: %getShelterInsulation(player)%"
		else:
			send "<gray>This biome's temperature: %temperature of the targeted block%" to the player
			send "<gray>Altitude: %altitude of the player%"
	
on consume:
	if {realism.%player%} is 1:
		if event-item is potion:
			if {temperature.%player%} is more than 100:
				subtract 10 from {temperature.%player%}
				send "<light blue>-10 Temperature"
				set {thirstWarnBlocker.%player%} to 20
			if the name of the event-item is "<light blue>Purified Water":
				if {thirst.%player%} is less than 99:
					set {_thirstRecovered} to (50 + floor({abilities.%player%::Survival} / 6))
					add {_thirstRecovered} to {thirst.%player%}
					send "<light blue>+%{_thirstRecovered}% Thirst"
					set {thirstWarnBlocker.%player%} to 20
			else:
				if {thirst.%player%} is less than 99:
					set {_thirstRecovered} to (25 + floor({abilities.%player%::Survival} / 6))
					add {_thirstRecovered} to {thirst.%player%}
					send "<light blue>+%{_thirstRecovered}% Thirst"
					set {thirstWarnBlocker.%player%} to 20
				set {_poisonChance} to (85 - ceil({abilities.%player%::Survival} / 4))
				chance of {_poisonChance}%:
					set {_rng} to random integer from 3 to 7
					applyOOCStatusEffect(player,"Poison",{_rng})
					send "<light red>The water had a strange taste..."
					send formatted "<light red>You have been poisoned. [%{_rng}% seconds]"
			if {thirst.%player%} is more than 100:
				set {thirst.%player%} to 100
			send "<light blue>Thirst Level: %{thirst.%player%}%"
			set bossbar "thirstmeter.%player's uuid%" progress to floor({thirst.%player%})
		else:
			if {temperature.%player%} is less than 100:
				send "<orange>+10 Temperature"
				set {thirstWarnBlocker.%player%} to 20
				add 10 to {temperature.%player%}

on mine:
	if {realism.%player%} is 1:
		add 0.1 to {thirstexhaustion.%player%}

on damage of a player:
	if {realism.%victim%} is 1:
		add 0.25 to {thirstexhaustion.%victim%}
	if {realism.%attacker%} is 1:
		add 0.15 to {thirstexhaustion.%attacker%}
		
on food bar change:
	if {realism.%player%} is 1:
		set {_hungerDrainOdds} to (130 - {abilities.%player%::Survival})
		if {_hungerDrainOdds} is more than 100:
			set {_hungerDrainOdds} to 100
		chance of {_hungerDrainOdds}%:
			set the player's food level to the player's food level - 0.5
	
on heal:
	if {realism.%player%} is 1:
		#set {_healing.%player%} to event-item
		#set {_healing.%player%} to {_healing.%player%} / 2
		#cancel event
		#heal the player by {_healing.%player%}
		add 0.25 to {thirstexhaustion.%player%}
	
on sprint toggle:
	if {realism.%player%} is 1:
		add 0.15 to {thirstexhaustion.%player%}
	
every 5 seconds:
	loop all players:
		if {realism.%loop-player%} is 1:
			subtract ({thirstexhaustion.%loop-player%} / 1) + 0.1 from {thirst.%loop-player%}
			if {thirst.%loop-player%} is less than 70:
				if {thirstWarnBlocker.%loop-player%} is less than or equal to 0:
					if {thirst.%loop-player%} is more than 55:
						send "<light blue>You're starting to get thirsty." to loop-player
					else if {thirst.%loop-player%} is more than 25:
						send "<orange>Your throat is dry..." to loop-player
					else if {thirst.%loop-player%} is more than 5:
						send "<light red>You need to drink something, and fast!" to loop-player
					else:
						send "<red>You need to drink something now! You're dying from thirst!" to loop-player
					set {thirstWarnBlocker.%loop-player%} to 20
				else:
					subtract 1 from {thirstWarnBlocker.%loop-player%}
				#Critical thirst damage
				if {thirst.%loop-player%} is less than or equal to 5:
					applyRecoilDamage(loop-player,2)
			set bossbar "thirstmeter.%loop-player's uuid%" progress to floor({thirst.%loop-player%})
			clear {thirstexhaustion.%loop-player%}
			
every 10 seconds:
	loop all players:
		if {realism.%loop-player%} is 1:
			#Get info on player's location & equipment
			set {_loc} to loop-player's location
			#Player's current biome influences temperature (Savannahs are hot, Frost Peaks are cold, etc)
			set {_localtemp.%loop-player%} to the temperature of the block at {_loc}
			set {_fire.%loop-player%} to 0
			set {_h.%loop-player%} to getHelmetWarmthMod(loop-player)
			set {_c.%loop-player%} to getChestplateWarmthMod(loop-player)
			set {_l.%loop-player%} to getLeggingsWarmthMod(loop-player)
			set {_b.%loop-player%} to getBootsWarmthMod(loop-player)
			#add player's warmth modifiers to their exposure, which helps the player survive temperature changes
			add {_h.%loop-player%} to {_exposure.%loop-player%}
			add {_c.%loop-player%} to {_exposure.%loop-player%}
			add {_l.%loop-player%} to {_exposure.%loop-player%}
			add {_b.%loop-player%} to {_exposure.%loop-player%}
			#Player's Survival ability grants bonus exposure
			add ({abilities.%loop-player%::Survival} / 100) to {_exposure.%loop-player%}
			#Player's current shelter changes exposure
			add getShelterInsulation(loop-player) to {_exposure.%loop-player%}
			subtract 0.25 from {_localtemp.%loop-player%}
			if weather in loop-player's world is rain:
				if temperature of the block at loop-player is less than 0.4:
					subtract 0.4 from {_localtemp.%loop-player%}
				else:
					subtract 0.2 from {_localtemp.%loop-player%}
			if weather in loop-player's world is thunder:
				subtract 0.2 from {_localtemp.%loop-player%}
			if loop-player's world is "world_nether":
				add 0.2 to {_localtemp.%loop-player%}
			if sunlight level at the loop-player is less than 9:
				subtract 0.25 from {_localtemp.%loop-player%}
			#Hot blocks check
			loop blocks in radius 16 of the loop-player:
				if loop-block is fire:
					add 0.05 to {_localtemp.%loop-player%}
				if loop-block is torch:
					add 0.001 to {_localtemp.%loop-player%}
				if loop-block is lava:
					add 0.075 to {_localtemp.%loop-player%}
				if loop-block is lit furnace:
					add 0.05 to {_localtemp.%loop-player%}
			#Temperature mod (higher altitude = lower temp and vice versa)
			if altitude of loop-player is more than 160:
				subtract (0.1 * (altitude of loop-player ^ 0.35)) from {_localtemp.%loop-player%}
			if altitude of loop-player is less than 45:
				add (0.1 * (abs(altitude of loop-player - 45)) ^ 0.35) to {_localtemp.%loop-player%}
			#Water reduces temperature
			loop blocks in radius 2 of the loop-player:
				loop-block is water
				subtract 0.05 from {_localtemp.%loop-player%}
			#Sprinting raises temperature
			if loop-player is sprinting:
				add 0.1 to {_localtemp.%loop-player%}
			#Being on fire massively raises temperature
			if loop-player is on fire:
				add 0.4 to {_localtemp.%loop-player%}
			if {_localtemp.%loop-player%} is more than 3.5:
				set {_localtemp.%loop-player%} to 3.5
			else if {_localtemp.%loop-player%} is less than -0.5:
				set {_localtemp.%loop-player%} to -0.5
			if {_localtemp.%loop-player%} is more than 1.2:
				loop blocks in radius 7 of the loop-player:
					if loop-block is fire:
						add 1 to {_fire.%loop-player%}
					else if loop-block is fire:
						add 2 to {_fire.%loop-player%}
					else if loop-block is torch:
						add 0.25 to {_fire.%loop-player%}
				#Gets colder at night
				#if time in loop-player's world is between 18:00 and 6:00:
				#	subtract (abs({_localtemp.%loop-player%}) * 2) from {temperature.%loop-player%}
				add abs({_localtemp.%loop-player%}) to {temperature.%loop-player%} 				
			else if {_localtemp.%loop-player%} + ({_exposure.%loop-player%} / 1.5) is less than 0.5:
				subtract (abs({_localtemp.%loop-player%}) + 1) from {temperature.%loop-player%}
			#Temperature naturally attempts to return to the base value of 100
			else:
				if {temperature.%loop-player%} is more than 100:
					subtract (abs({_localtemp.%loop-player%}) * 15) from {temperature.%loop-player%}
				else if {temperature.%loop-player%} is less than 100:
					add ((abs({_localtemp.%loop-player%}) * 15) + {_exposure.%loop-player%}) to {temperature.%loop-player%}
			#Abnormal temperature debuffs
			if {temperature.%loop-player%} is less than 30:
				apply slowness 3 to loop-player for 10 seconds
				apply mining fatigue 2 to loop-player for 10 seconds
				applyRecoilDamage(loop-player,2)
				if {extremeTempsWarnBlocker.%loop-player%} is less than or equal to 0:
					send "<cyan>You are suffering from severe frostbite." to loop-player
					set {extremeTempsWarnBlocker.%loop-player%} to 20
				else:
					subtract 1 from {extremeTempsWarnBlocker.%loop-player%}
			else if {temperature.%loop-player%} is less than 50:
				apply slowness 2 to loop-player for 10 seconds
				apply mining fatigue 1 to loop-player for 10 seconds
				if {extremeTempsWarnBlocker.%loop-player%} is less than or equal to 0:
					send "<cyan>You are starting to suffer from frostbite." to loop-player
					set {extremeTempsWarnBlocker.%loop-player%} to 20
				else:
					subtract 1 from {extremeTempsWarnBlocker.%loop-player%}
			else if {temperature.%loop-player%} is less than 70:
				apply slowness 1 to loop-player for 10 seconds
				if {extremeTempsWarnBlocker.%loop-player%} is less than or equal to 0:
					send "<cyan>You are getting cold." to loop-player
					set {extremeTempsWarnBlocker.%loop-player%} to 20
				else:
					subtract 1 from {extremeTempsWarnBlocker.%loop-player%}
			if {temperature.%loop-player%} is more than 129:
				if {temperature.%loop-player%} is less than 150:
					apply slowness 1 to loop-player for 10 seconds
					if {extremeTempsWarnBlocker.%loop-player%} is less than or equal to 0:
						send "<light red>You are getting hot." to loop-player
						set {extremeTempsWarnBlocker.%loop-player%} to 20
					else:
						subtract 1 from {extremeTempsWarnBlocker.%loop-player%}
				else if {temperature.%loop-player%} is less than 170:
					apply slowness 2 to loop-player for 10 seconds
					apply mining fatigue 1 to loop-player for 10 seconds
					if {extremeTempsWarnBlocker.%loop-player%} is less than or equal to 0:
						send "<light red>You are developing heat stroke." to loop-player
						set {extremeTempsWarnBlocker.%loop-player%} to 20
					else:
						subtract 1 from {extremeTempsWarnBlocker.%loop-player%}
				else if {temperature.%loop-player%} is less than 200:
					apply slowness 3 to loop-player for 10 seconds
					apply mining fatigue 2 to loop-player for 10 seconds
					damage loop-player by 2 heart
					if {extremeTempsWarnBlocker.%loop-player%} is less than or equal to 0:
						send "<light red><bold>You are suffering from severe heat stroke." to loop-player
						set {extremeTempsWarnBlocker.%loop-player%} to 20
					else:
						subtract 1 from {extremeTempsWarnBlocker.%loop-player%}
			#Hard cap on temperature
			if {temperature.%loop-player%} is less than 0:
				set {temperature.%loop-player%} to 0
			if {temperature.%loop-player%} is more than 200:
				set {temperature.%loop-player%} to 200
			#if the name of loop-player's tool is "<bold>Thermometor":
			#	send "DEBUG | Local Temperature: %{_localtemp.%loop-player%}%" to loop-player
				
every minecraft day:
	loop all players:
		if {realism.%loop-player%} is 1:
			add 1 to {daysWithoutSleep.%loop-player%}
			if {daysWithoutSleep.%loop-player%} is more than 5:
				damage the loop-player by 40
				send formatted "<red>You're dying of sleep exhaustion!" to the loop-player
			else if {daysWithoutSleep.%loop-player%} is more than 4:
				apply slowness 2 to the loop-player for 1 day
				apply weakness 3 to the loop-player for 1 day
				apply mining fatigue 2 to the loop-player for 1 day
				send formatted "<light red>You can barely stay awake! You need to sleep!" to the loop-player				
			else if {daysWithoutSleep.%loop-player%} is more than 2:
				apply slowness 1 to the loop-player for 1 day
				apply weakness 1 to the loop-player for 1 day
				apply mining fatigue 1 to the loop-player for 1 day
				send formatted "<light red>You're exhausted! You need to sleep soon." to the loop-player
			else if {daysWithoutSleep.%loop-player%} is more than 1:
				apply weakness 1 to the loop-player for 1 day
				send formatted "<orange>You're growing tired. It's time for some sleep soon." to the loop-player
				
#Force-sleep in bed to reset the days without sleep counter but not recieve the debuff clearing and healing
on right click:
	if event-block is any bed:
		if {realism.%player%} is 1:
			if time in player's world is between 6:00 and 18:00:
				if {daysWithoutSleep.%player%} is more than or equal to 1:
					send formatted "<italics>There's still daylight outside. I can try to nap anyways, but it won't be restful..."
					send formatted "<run command:/forceSleep><gold>1 - Take a nap."
				else:
					send formatted "<italics>I'm already well rested. There's no need to sleep now."
			
command /forceSleep:
	trigger:
		apply blindness 1 to the player for 5 seconds
		wait 5 seconds
		send formatted "<orange>You awaken feeling refreshed."
		subtract 1 from {daysWithoutSleep.%player%}
				
on bed leave:
	if {realism.%player%} is set:
		set {daysWithoutSleep.%player%} to -1
		remove slowness from the player
		remove weakness from the player
		remove mining fatigue from the player
		heal the player by 200 hearts
		send formatted "<orange>You awaken feeling rested."
		apply regeneration 2 to the player for 30 minutes
			