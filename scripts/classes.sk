#Class Data
#
#Races
#
#Human - +2 Health, +2 Strength, +2 Magic, +2 Defense, +2 Resistance, +2 Speed, +2 Luck, +2 Charm
#Dragonborn - +2 Health, +0 Strength, +5 Magic, +2 Defense, +3 Resistance, +0 Speed, +2 Luck, -4 Charm
#Elf - +0 Health, -1 Strength, +4 Magic, -2 Defense, +2 Resistance, +4 Speed, +3 Luck, +4 Charm
#Dwarf - +5 Health, +5 Strength, +0 Magic, +4 Defense, +0 Resistance, -2 Speed, +2 Luck, +2 Charm
#Orc - +6 Health, +4 Strength, -2 Magic, +4 Defense, +4 Resistance, -4 Speed, +2 Luck, +2 Charm
#
#Background
#Assign your character a background that slightly changes Stats growth rates, and what values your Abilities start at.
#Commoner - +5% growth for all stats, +4 to Traditional Weapons/Medicine/Repair/Fabrication/Speech/Barter/Survival
#Nobility - HP/LCK/CHA + 15%, STR/MAG +5%. +13 to Traditional Weapons/Speech/Barter
#Chemist - HP/MAG/RES +15%, SPD/CHA +5%. +13 to Medicine/Speech/Magical Weapons
#Enchanter - HP/MAG/SPD +15%, LCK/RES +5%. +20 to Enchanting/Magical Weapons
#Sellsword - HP/STR/DEF +15%, SPD/RES +5%. +13 to Traditional Weapons/Barter/Survival
#Thief - SPD/LCK/STR +15%, DEF/RES +5%. +13 to Traditional Weapons/Lockpicking/Barter
#Smith - STR/DEF/CHA +15%, LCK/HP +5%. +13 to Guns/Fabrication/Repair
#Forager - HP/DEF/RES +15%, STR/SPD +5%. +13 to Repair/Medicine/Survival
#
#If playing Dragonborn, Backgrounds are replaced with Clans (Grants the [clan] Soul perk depending on chosen Clan):
#
#Windcaller - HP/SPD +20%, STR/MAG + 10%, +13 to Traditional Weapons/Magical Weapons/Enchanting
#Waterflow - HP/DEF +20%, RES/LCK +10%, +13 to Repair/Medicine/Survival
#Firestorm - STR/MAG +20%, SPD/LCK +10%, +13 to Traditional Weapons/Magical Weapons/Fabrication
#
#Stats (Influenced by Race + User point distribution, increases randomly based on investment + Luck)
#
#Health - Overall health
#Strength - Physical Strength
#Magic - Magical strength
#Defense - Physical Bulk
#Resistance - Magical Bulk
#Speed
#Luck
#Charm
#
#Point System
#
#All Statss start at 5 points.
#Statss can be raised up to 10 or lowered down to 1 (Racial bonuses are not counted).
#Lowering a stat's points lets you add those points to another stat.
#You start with 7 free points to spend. Any other points must be taken out of a Stats.
#
#
#Abilities (Influenced by Class & Statss)
#
#Traditional Weapons - Proficiency in old-world weaponry. (Swords, Lances, Axes, Bows, Daggers, Gauntlets) [STR]
#Magical Weapons - Proficiency in magical weaponry. (Wands, Tomes, Staves) [MAG]
#Guns - Proficiency in new-world weaponry. (Pistols, Shotguns, Rifles, Grenades) [STR]
#Lockpicking - Ability to unlock doors and chests without a key. [LCK, SPD]
#Medicine - Effectiveness at using healing items like potions and herbs. [HP, MAG]
#Repair - Ability to maintain your equipment. [STR, DEF]
#Fabrication - Ability to create and upgrade equipment. [STR, DEF]
#Enchanting - Ability to create and upgrade enchantments for equipment. [MAG, RES]
#Speech - Ability to influence other people with words. [CHA, LCK]
#Barter - Ability to haggle with merchants and make under-the-table deals. [CHA, STR, MAG]
#Survival - General survival adeptness. [HP, DEF, RES]
#
#Every 3 levels, a player can place up to 9 points into any of their Abilities via the Journal.
#Abilities can also be increased at special shops with enough gold.
#
#Players can mark up to 2 stats as a Proficiency, granting +1 to that stat on every level-up.
#
#Traits grant extra abilities or adjustments to Stats and Abilities... for a price.
#Each Trait grants a positive and negative effect.
#
#All In! - Grants STR/MAG +5, inflicts DEF/RES/HP -3.
#Honorable - Grants STR/MAG/SPD +3, inflicts LCK -5 and doubles the duration of combat tags
#Small Frame - Grants SPD/LCK +5, but increases damage taken by 10% if it exceeds 25% of your maximum HP.
#Veteran - Grants +5 to all stats, but reduces XP earned from combat by 35% and lowers Growth Rates for all stats by 30%.
#Trainee - Inflicts -4 to all stats, but raises the cap of all stats by +10 and increases XP earned from combat by 25%.
#Perceptive - Grants night vision when needed, and foes who are not combat tagged can be seen through walls. Inflicts SPD -5 and raises damage taken from foes that are not combat-tagged by 30%.
#Old Fashioned - Grants STR/DEF +3 and raises Traditional Weapons by +13. Inflicts MAG -5 and lowers Magical Weapons & Guns by -7.
#Economical - Grants CHA +5 and raises Barter by +20. Inflicts Speech -20.
#Kaga's Teachings - Everything has a higher chance to Critical Miss.
#Good Natured - Grants CHA +5 and raises Speech/Medicine by +10. Inflicts STR/MAG -2 and lowers Traditional/Magical Weapons & Guns by -7.
#Kamikaze - Grants bonus damage equal to health missing during combat. Inflicts DEF/RES -5 and lowers Medicine and Survival by -7.
#Lone Wolf - Grants STR/DEF +5 when no allies are within 10 blocks, but inflicts STR/DEF -5 if an ally is within 10 blocks.
#Strong-Armed - Grants STR/DEF +4, and HP +2, but inflicts Traditional Weapons/Magical Weapons/Guns/Speech -7.
#Pacifist - Grants HP/DEF/RES +2 and raises Medicine/Survival by +13. Inflicts STR/MAG -4 and lowers Traditional Weapons/Magical Weapons/Guns by -7.
#Level-Headed - Your combat performance is unaffected by Morale.
#
#Race-Specific Traits
#Human: Jack of all Trades - Your Stats caps become the average of all Stats caps.
#Dragonborn: Half-Breed -  You gain 50% of the bonuses from your chosen lineage's Soul perk as a passive bonus. However, you cannot activate the effects of Dragon Soul perks and are inflicted with Speech/Barter -25.
#Elf: Spellscribe - Grants MAG +5 and boosts Magical Weapons/Enchanting by +13. Inflicts RES -5 and lowers Traditional Weapons/Guns by -13.
#Dwarf: Tinkerer - Grants STR/DEF +2 and Repair/Fabrication/Traditional Weapons/Guns +10, but inflicts SPD/CHA -5 and lowers Barter by -7.
#Orc: Heavy-Hitter - Boosts damage against non-Combat Tagged opponents by 15%. Reduces damage against Combat Tagged opponents by 15%.

#Server CVAR to allow players to select unreleased/experimental classes.
command /cvar_enableIndevClasses <boolean>:
	trigger:
		set {enableIndevClasses} to arg 1
		send "<white>Set enableIndevClasses to %arg 1%."


#Start Character Creator Code
#Main Character Configuration command
#Argument = page number to jump to
command /charsetup <number>:
	trigger:
		#check for holy blood to adjust char builder points
		clear {hasMinorHolyBlood.%player%}
		clear {hasMajorHolyBlood.%player%}
		loop {holyBlood.%player%::*}:
			if loop-value is 1:
				set {hasMinorHolyBlood.%player%} to true
			else if loop-value is 2:
				set {hasMajorHolyBlood.%player%} to true
		if {csetup_pointsToSpend.%player%} is not set:
			set {charsetup_holyBloodAlloc.%player%} to 2
			set {csetup_pointsToSpend.%player%} to 8
			set {pts_HP.%player%} to 15
			set {pts_MAG.%player%} to 5
			set {pts_RES.%player%} to 5
			set {pts_STR.%player%} to 5
			set {pts_DEF.%player%} to 5
			set {pts_SPD.%player%} to 5
			set {pts_LCK.%player%} to 5
			set {pts_CHR.%player%} to 5
		set {hpbuff.%player%} to 0
		set {strbuff.%player%} to 0
		set {defbuff.%player%} to 0
		set {magbuff.%player%} to 0
		set {resbuff.%player%} to 0
		set {spdbuff.%player%} to 0
		set {lckbuff.%player%} to 0
		set {chrbuff.%player%} to 0
		set {lvl.%player%} to 1
		clear {activeBuffs.hp.%player%::*}
		clear {activeBuffs.str.%player%::*}
		clear {activeBuffs.def.%player%::*}
		clear {activeBuffs.mag.%player%::*}
		clear {activeBuffs.res.%player%::*}
		clear {activeBuffs.spd.%player%::*}
		clear {activeBuffs.lck.%player%::*}
		clear {activeBuffs.chr.%player%::*}
		#Initialize Abilities
		set {abilities.%player%::Traditional Weapons} to 1
		set {abilities.%player%::Magical Weapons} to 1
		set {abilities.%player%::Guns} to 1
		set {abilities.%player%::Lockpicking} to 1
		set {abilities.%player%::Medicine} to 1
		set {abilities.%player%::Repair} to 1
		set {abilities.%player%::Fabrication} to 1
		set {abilities.%player%::Enchanting} to 1
		set {abilities.%player%::Speech} to 1
		set {abilities.%player%::Barter} to 1
		set {abilities.%player%::Survival} to 1
		#Class Data
		#Bases
		set {hpcap.%player%} to floor(({pts_HP.%player%} - 5) * 2)
		set {strcap.%player%} to floor(({pts_STR.%player%} - 5) * 1.5)
		set {defcap.%player%} to floor(({pts_DEF.%player%} - 5) * 1.5)
		set {lckcap.%player%} to floor(({pts_LCK.%player%} - 5) * 1.5)
		set {chrcap.%player%} to floor(({pts_CHR.%player%} - 5) * 1.5)
		set {spdcap.%player%} to floor(({pts_SPD.%player%} - 5) * 1.5)
		set {magcap.%player%} to floor(({pts_MAG.%player%} - 5) * 1.5)
		set {rescap.%player%} to floor(({pts_RES.%player%} - 5) * 1.5)
		set {hp.%player%} to ({pts_HP.%player%})
		set {str.%player%} to ({pts_STR.%player%})
		set {def.%player%} to ({pts_DEF.%player%})
		set {CHR.%player%} to ({pts_CHR.%player%})
		set {LCK.%player%} to ({pts_LCK.%player%})
		set {spd.%player%} to ({pts_SPD.%player%})
		set {mag.%player%} to ({pts_MAG.%player%})
		set {RES.%player%} to ({pts_RES.%player%})
		if {class.%player%} is "Mercenary":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 7.5) + 25
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 7.5) + 25
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 7.5) + 25
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 7.5) + 25
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 7.5) + 25
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 7.5) + 25
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 7.5) + 25
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 7.5) + 25
			add 13 to {hpcap.%player%}
			add 12 to {strcap.%player%}
			add 12 to {defcap.%player%}
			add 12 to {chrcap.%player%}
			add 12 to {lckcap.%player%}
			add 12 to {spdcap.%player%}
			add 12 to {magcap.%player%}
			add 12 to {rescap.%player%}
			add 5 to {str.%player%}
			add 5 to {def.%player%}
			add 5 to {spd.%player%}
			add 5 to {mag.%player%}
			add 5 to {res.%player%}
			add 5 to {hp.%player%}
			add 5 to {chr.%player%}
			add 5 to {lck.%player%}
		else if {class.%player%} is "Knight":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 45
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 25
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 45
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 25
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 20
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 20
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 10
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 10
			add 16 to {hpcap.%player%}
			add 14 to {strcap.%player%}
			add 13 to {defcap.%player%}
			add 13 to {chrcap.%player%}
			add 13 to {lckcap.%player%}
			add 10 to {spdcap.%player%}
			add 8 to {magcap.%player%}
			add 9 to {rescap.%player%}
			add 9 to {hp.%player%}
			add 4 to {str.%player%}
			add 8 to {def.%player%}
			add 6 to {chr.%player%}
			add 5 to {lck.%player%}
			add 4 to {spd.%player%}
			add 2 to {mag.%player%}
			add 3 to {res.%player%}
		else if {class.%player%} is "Bladesman":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 45
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 10
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 25
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 40
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 50
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 5
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 5
			add 10 to {hpcap.%player%}
			add 18 to {strcap.%player%}
			add 6 to {defcap.%player%}
			add 10 to {chrcap.%player%}
			add 20 to {lckcap.%player%}
			add 21 to {spdcap.%player%}
			add 6 to {magcap.%player%}
			add 6 to {rescap.%player%}
			add 5 to {hp.%player%}
			add 8 to {str.%player%}
			add 2 to {def.%player%}
			add 2 to {chr.%player%}
			add 9 to {lck.%player%}
			add 10 to {spd.%player%}
			add 2 to {mag.%player%}
			add 2 to {res.%player%}
		else if {class.%player%} is "Fighter":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 40
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 45
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 35
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 20
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 10
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 25
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 10
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 15
			add 15 to {hpcap.%player%}
			add 16 to {strcap.%player%}
			add 16 to {defcap.%player%}
			add 12 to {chrcap.%player%}
			add 10 to {lckcap.%player%}
			add 12 to {spdcap.%player%}
			add 6 to {magcap.%player%}
			add 10 to {rescap.%player%}
			add 8 to {hp.%player%}
			add 9 to {str.%player%}
			add 7 to {def.%player%}
			add 2 to {chr.%player%}
			add 2 to {lck.%player%}
			add 5 to {spd.%player%}
			add 1 to {mag.%player%}
			add 6 to {res.%player%}
		else if {class.%player%} is "Archer":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 30
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 35
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 25
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 25
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 25
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 15
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 20
			add 14 to {hpcap.%player%}
			add 15 to {strcap.%player%}
			add 14 to {defcap.%player%}
			add 12 to {chrcap.%player%}
			add 12 to {lckcap.%player%}
			add 12 to {spdcap.%player%}
			add 9 to {magcap.%player%}
			add 9 to {rescap.%player%}
			add 6 to {hp.%player%}
			add 7 to {str.%player%}
			add 6 to {def.%player%}
			add 5 to {chr.%player%}
			add 5 to {lck.%player%}
			add 5 to {spd.%player%}
			add 3 to {mag.%player%}
			add 3 to {res.%player%}	
		else if {class.%player%} is "Cavalier":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 35
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 35
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 20
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 30
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 30
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 5
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 25
			add 11 to {hpcap.%player%}
			add 14 to {strcap.%player%}
			add 14 to {defcap.%player%}
			add 12 to {chrcap.%player%}
			add 14 to {lckcap.%player%}
			add 14 to {spdcap.%player%}
			add 2 to {magcap.%player%}
			add 12 to {rescap.%player%}
			add 4 to {hp.%player%}
			add 8 to {str.%player%}
			add 5 to {def.%player%}
			add 5 to {chr.%player%}
			add 7 to {lck.%player%}
			add 6 to {spd.%player%}
			add 1 to {mag.%player%}
			add 4 to {res.%player%}
		else if {class.%player%} is "Survivor":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 60
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 20
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 40
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 10
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 10
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 20
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 35
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 25
			add 20 to {hpcap.%player%}
			add 13 to {strcap.%player%}
			add 13 to {defcap.%player%}
			add 6 to {chrcap.%player%}
			add 6 to {lckcap.%player%}
			add 12 to {spdcap.%player%}
			add 14 to {magcap.%player%}
			add 13 to {rescap.%player%}
			add 10 to {hp.%player%}
			add 4 to {str.%player%}
			add 4 to {def.%player%}
			add 1 to {chr.%player%}
			add 2 to {lck.%player%}
			add 6 to {spd.%player%}
			add 6 to {mag.%player%}
			add 7 to {res.%player%}
		else if {class.%player%} is "Gunslinger":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 45
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 10
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 35
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 35
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 45
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 5
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 5
			add 12 to {hpcap.%player%}
			add 18 to {strcap.%player%}
			add 11 to {defcap.%player%}
			add 14 to {chrcap.%player%}
			add 15 to {lckcap.%player%}
			add 15 to {spdcap.%player%}
			add 6 to {magcap.%player%}
			add 6 to {rescap.%player%}
			add 4 to {hp.%player%}
			add 10 to {str.%player%}
			add 3 to {def.%player%}
			add 8 to {chr.%player%}
			add 7 to {lck.%player%}
			add 7 to {spd.%player%}
			add 1 to {mag.%player%}
			add 3 to {res.%player%}
		else if {class.%player%} is "Devil Hunter":
			set {combosenabled.%player%} to true
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 15
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 30
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 15
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 30
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 35
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 30
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 30
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 15
			add 8 to {hpcap.%player%}
			add 14 to {strcap.%player%}
			add 8 to {defcap.%player%}
			add 16 to {chrcap.%player%}
			add 15 to {lckcap.%player%}
			add 14 to {spdcap.%player%}
			add 14 to {magcap.%player%}
			add 8 to {rescap.%player%}
			add 3 to {hp.%player%}
			add 6 to {str.%player%}
			add 2 to {def.%player%}
			add 8 to {chr.%player%}
			add 7 to {lck.%player%}
			add 6 to {spd.%player%}
			add 6 to {mag.%player%}
			add 2 to {res.%player%}
		else if {class.%player%} is "Strategist":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 30
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 25
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 30
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 20
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 20
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 35
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 20
			add 11 to {hpcap.%player%}
			add 13 to {strcap.%player%}
			add 14 to {defcap.%player%}
			add 14 to {chrcap.%player%}
			add 10 to {lckcap.%player%}
			add 10 to {spdcap.%player%}
			add 15 to {magcap.%player%}
			add 10 to {rescap.%player%}
			add 4 to {hp.%player%}
			add 5 to {str.%player%}
			add 6 to {def.%player%}
			add 7 to {chr.%player%}
			add 4 to {lck.%player%}
			add 4 to {spd.%player%}
			add 6 to {mag.%player%}
			add 4 to {res.%player%}
		else if {class.%player%} is "Mage":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 15
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 15
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 25
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 30
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 25
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 35
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 35
			add 10 to {hpcap.%player%}
			add 8 to {strcap.%player%}
			add 10 to {defcap.%player%}
			add 12 to {chrcap.%player%}
			add 12 to {lckcap.%player%}
			add 12 to {spdcap.%player%}
			add 19 to {magcap.%player%}
			add 14 to {rescap.%player%}
			add 3 to {hp.%player%}
			add 3 to {str.%player%}
			add 3 to {def.%player%}
			add 5 to {chr.%player%}
			add 5 to {lck.%player%}
			add 5 to {spd.%player%}
			add 10 to {mag.%player%}
			add 6 to {res.%player%}
		else if {class.%player%} is "Trickster":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 20
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 20
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 45
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 40
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 35
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 10
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 10
			add 13 to {hpcap.%player%}
			add 10 to {strcap.%player%}
			add 9 to {defcap.%player%}
			add 18 to {chrcap.%player%}
			add 15 to {lckcap.%player%}
			add 15 to {spdcap.%player%}
			add 8 to {magcap.%player%}
			add 9 to {rescap.%player%}
			add 4 to {hp.%player%}
			add 3 to {str.%player%}
			add 3 to {def.%player%}
			add 11 to {chr.%player%}
			add 7 to {lck.%player%}
			add 7 to {spd.%player%}
			add 2 to {mag.%player%}
			add 3 to {res.%player%}
		else if {class.%player%} is "Summoner":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 45
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 10
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 10
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 10
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 30
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 35
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 40
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 20
			add 22 to {hpcap.%player%}
			add 6 to {strcap.%player%}
			add 6 to {defcap.%player%}
			add 6 to {chrcap.%player%}
			add 12 to {lckcap.%player%}
			add 16 to {spdcap.%player%}
			add 17 to {magcap.%player%}
			add 12 to {rescap.%player%}
			add 9 to {hp.%player%}
			add 2 to {str.%player%}
			add 2 to {def.%player%}
			add 2 to {chr.%player%}
			add 5 to {lck.%player%}
			add 7 to {spd.%player%}
			add 9 to {mag.%player%}
			add 4 to {res.%player%}
		else if {class.%player%} is "Cleric":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 25
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 5
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 10
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 15
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 40
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 10
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 45
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 50
			add 15 to {hpcap.%player%}
			add 6 to {strcap.%player%}
			add 10 to {defcap.%player%}
			add 8 to {chrcap.%player%}
			add 15 to {lckcap.%player%}
			add 9 to {spdcap.%player%}
			add 12 to {magcap.%player%}
			add 22 to {rescap.%player%}
			add 5 to {hp.%player%}
			add 2 to {str.%player%}
			add 3 to {def.%player%}
			add 3 to {chr.%player%}
			add 8 to {lck.%player%}
			add 3 to {spd.%player%}
			add 7 to {mag.%player%}
			add 9 to {res.%player%}
		#ARMORMAGE
		else if {class.%player%} is "Keeper":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 25
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 10
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 35
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 10
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 25
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 20
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 40
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 35
			add 15 to {hpcap.%player%}
			add 12 to {strcap.%player%}
			add 13 to {defcap.%player%}
			add 8 to {chrcap.%player%}
			add 11 to {lckcap.%player%}
			add 11 to {spdcap.%player%}
			add 12 to {magcap.%player%}
			add 13 to {rescap.%player%}
			add 8 to {hp.%player%}
			add 3 to {str.%player%}
			add 6 to {def.%player%}
			add 4 to {chr.%player%}
			add 5 to {lck.%player%}
			add 4 to {spd.%player%}
			add 5 to {mag.%player%}
			add 5 to {res.%player%}
		#CHEMIST
		else if {class.%player%} is "Charlatan":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 30
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 15
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 20
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 20
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 20
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 25
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 35
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 35
			add 12 to {hpcap.%player%}
			add 10 to {strcap.%player%}
			add 13 to {defcap.%player%}
			add 10 to {chrcap.%player%}
			add 8 to {lckcap.%player%}
			add 12 to {spdcap.%player%}
			add 15 to {magcap.%player%}
			add 17 to {rescap.%player%}
			add 5 to {hp.%player%}
			add 4 to {str.%player%}
			add 3 to {def.%player%}
			add 4 to {chr.%player%}
			add 4 to {lck.%player%}
			add 5 to {spd.%player%}
			add 7 to {mag.%player%}
			add 8 to {res.%player%}
		#BARD
		else if {class.%player%} is "Poet":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 15
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 10
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 20
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 40
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 40
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 40
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 20
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 20
			add 10 to {hpcap.%player%}
			add 10 to {strcap.%player%}
			add 9 to {defcap.%player%}
			add 17 to {chrcap.%player%}
			add 14 to {lckcap.%player%}
			add 15 to {spdcap.%player%}
			add 13 to {magcap.%player%}
			add 9 to {rescap.%player%}
			add 3 to {str.%player%}
			add 2 to {def.%player%}
			add 7 to {spd.%player%}
			add 6 to {mag.%player%}
			add 2 to {res.%player%}
			add 4 to {hp.%player%}
			add 7 to {chr.%player%}
			add 7 to {lck.%player%}
		#ASSASSIN
		else if {class.%player%} is "Outlaw":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 40
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 15
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 15
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 45
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 35
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 10
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 15
			add 16 to {hpcap.%player%}
			add 14 to {strcap.%player%}
			add 9 to {defcap.%player%}
			add 9 to {chrcap.%player%}
			add 16 to {lckcap.%player%}
			add 16 to {spdcap.%player%}
			add 8 to {magcap.%player%}
			add 9 to {rescap.%player%}
			add 4 to {hp.%player%}
			add 10 to {str.%player%}
			add 3 to {def.%player%}
			add 4 to {chr.%player%}
			add 9 to {lck.%player%}
			add 7 to {spd.%player%}
			add 2 to {mag.%player%}
			add 3 to {res.%player%}
		#DARKMAGE
		else if {class.%player%} is "Conjurer":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 45
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 20
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 20
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 5
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 20
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 15
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 45
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 30
			add 18 to {hpcap.%player%}
			add 9 to {strcap.%player%}
			add 11 to {defcap.%player%}
			add 8 to {chrcap.%player%}
			add 10 to {lckcap.%player%}
			add 9 to {spdcap.%player%}
			add 19 to {magcap.%player%}
			add 13 to {rescap.%player%}
			add 9 to {hp.%player%}
			add 4 to {str.%player%}
			add 4 to {def.%player%}
			add 2 to {chr.%player%}
			add 4 to {lck.%player%}
			add 3 to {spd.%player%}
			add 9 to {mag.%player%}
			add 6 to {res.%player%}
		#TROUBADOR
		else if {class.%player%} is "Troubador":
			set {hpgrowth.%player%} to floor(({pts_HP.%player%} - 15) * 5) + 20
			set {strgrowth.%player%} to floor(({pts_STR.%player%} - 5) * 5) + 20
			set {defgrowth.%player%} to floor(({pts_DEF.%player%} - 5) * 5) + 15
			set {chrgrowth.%player%} to floor(({pts_CHR.%player%} - 5) * 5) + 20
			set {lckgrowth.%player%} to floor(({pts_LCK.%player%} - 5) * 5) + 45
			set {spdgrowth.%player%} to floor(({pts_SPD.%player%} - 5) * 5) + 40
			set {maggrowth.%player%} to floor(({pts_MAG.%player%} - 5) * 5) + 25
			set {resgrowth.%player%} to floor(({pts_RES.%player%} - 5) * 5) + 15
			add 11 to {hpcap.%player%}
			add 11 to {strcap.%player%}
			add 9 to {defcap.%player%}
			add 11 to {chrcap.%player%}
			add 16 to {lckcap.%player%}
			add 17 to {spdcap.%player%}
			add 13 to {magcap.%player%}
			add 9 to {rescap.%player%}
			add 4 to {str.%player%}
			add 3 to {def.%player%}
			add 8 to {spd.%player%}
			add 6 to {mag.%player%}
			add 3 to {res.%player%}
			add 4 to {hp.%player%}
			add 4 to {chr.%player%}
			add 8 to {lck.%player%}
		#Racial stat bonus
		if {race.%player%} is "Human":
			add 2 to {hp.%player%}
			add 2 to {hpcap.%player%}
			add 2 to {str.%player%}
			add 2 to {strcap.%player%}
			add 2 to {def.%player%}
			add 2 to {defcap.%player%}
			add 2 to {mag.%player%}
			add 2 to {magcap.%player%}
			add 2 to {res.%player%}
			add 2 to {rescap.%player%}
			add 2 to {spd.%player%}
			add 2 to {spdcap.%player%}
			add 2 to {lck.%player%}
			add 2 to {lckcap.%player%}
			add 2 to {chr.%player%}
			add 2 to {chrcap.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Guns}
			add 13 to {abilities.%player%::Speech}
			add 13 to {abilities.%player%::Barter}
		else if {race.%player%} is "Dragonborn":
			add 2 to {hp.%player%}
			add 2 to {hpcap.%player%}
			add 0 to {str.%player%}
			add 0 to {strcap.%player%}
			add 2 to {def.%player%}
			add 2 to {defcap.%player%}
			add 5 to {mag.%player%}
			add 5 to {magcap.%player%}
			add 3 to {res.%player%}
			add 3 to {rescap.%player%}
			add 0 to {spd.%player%}
			add 0 to {spdcap.%player%}
			add 2 to {lck.%player%}
			add 2 to {lckcap.%player%}
			subtract 4 from {chr.%player%}
			subtract 4 from {chrcap.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Medicine}
			add 13 to {abilities.%player%::Survival}
			add 13 to {abilities.%player%::Enchanting}
		else if {race.%player%} is "Elf":
			add 0 to {hp.%player%}
			add 0 to {hpcap.%player%}
			subtract 1 from {str.%player%}
			subtract 1 from {strcap.%player%}
			subtract 2 from {def.%player%}
			subtract 2 from {defcap.%player%}
			add 4 to {mag.%player%}
			add 4 to {magcap.%player%}
			add 2 to {res.%player%}
			add 2 to {rescap.%player%}
			add 4 to {spd.%player%}
			add 4 to {spdcap.%player%}
			add 2 to {lck.%player%}
			add 2 to {lckcap.%player%}
			add 4 to {chr.%player%}
			add 4 to {chrcap.%player%}
			add 13 to {abilities.%player%::Enchanting}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Medicine}
			add 13 to {abilities.%player%::Speech}
			add 13 to {abilities.%player%::Lockpicking}
		else if {race.%player%} is "Dwarf":
			add 5 to {hp.%player%}
			add 5 to {hpcap.%player%}
			add 5 to {str.%player%}
			add 5 to {strcap.%player%}
			add 4 to {def.%player%}
			add 4 to {defcap.%player%}
			add 0 to {mag.%player%}
			add 0 to {magcap.%player%}
			add 0 to {res.%player%}
			add 0 to {rescap.%player%}
			subtract 2 from {spd.%player%}
			subtract 2 from {spdcap.%player%}
			add 2 to {lck.%player%}
			add 2 to {lckcap.%player%}
			add 2 to {chr.%player%}
			add 2 to {chrcap.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Guns}
			add 13 to {abilities.%player%::Fabrication}
			add 13 to {abilities.%player%::Barter}
			add 13 to {abilities.%player%::Repair}
		else if {race.%player%} is "Orc":
			add 6 to {hp.%player%}
			add 6 to {hpcap.%player%}
			add 4 to {str.%player%}
			add 4 to {strcap.%player%}
			add 4 to {def.%player%}
			add 4 to {defcap.%player%}
			subtract 2 from {mag.%player%}
			subtract 2 from {magcap.%player%}
			add 4 to {res.%player%}
			add 4 to {rescap.%player%}
			subtract 4 from {spd.%player%}
			subtract 4 from {spdcap.%player%}
			add 2 to {lck.%player%}
			add 2 to {lckcap.%player%}
			add 2 to {chr.%player%}
			add 2 to {chrcap.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Medicine}
			add 13 to {abilities.%player%::Repair}
			add 13 to {abilities.%player%::Fabrication}
			add 13 to {abilities.%player%::Enchanting}
		#Backgrounds
		if {background.%player%} is "Commoner":
			add 5 to {hpgrowth.%player%}
			add 5 to {strgrowth.%player%}
			add 5 to {defgrowth.%player%}
			add 5 to {spdgrowth.%player%}
			add 5 to {maggrowth.%player%}
			add 5 to {resgrowth.%player%}
			add 5 to {lckgrowth.%player%}
			add 5 to {chrgrowth.%player%}
			add 4 to {abilities.%player%::Traditional Weapons}
			add 4 to {abilities.%player%::Medicine}
			add 4 to {abilities.%player%::Repair}
			add 4 to {abilities.%player%::Fabrication}
			add 4 to {abilities.%player%::Speech}
			add 4 to {abilities.%player%::Barter}
			add 4 to {abilities.%player%::Survival}
		else if {background.%player%} is "Nobility":
			add 15 to {hpgrowth.%player%}
			add 5 to {strgrowth.%player%}
			add 5 to {maggrowth.%player%}
			add 15 to {lckgrowth.%player%}
			add 15 to {chrgrowth.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Speech}
			add 13 to {abilities.%player%::Barter}
		else if {background.%player%} is "Chemist":
			add 15 to {hpgrowth.%player%}
			add 5 to {spdgrowth.%player%}
			add 15 to {maggrowth.%player%}
			add 15 to {resgrowth.%player%}
			add 5 to {chrgrowth.%player%}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Medicine}
			add 13 to {abilities.%player%::Speech}
		else if {background.%player%} is "Enchanter":
			add 15 to {hpgrowth.%player%}
			add 15 to {spdgrowth.%player%}
			add 15 to {maggrowth.%player%}
			add 5 to {resgrowth.%player%}
			add 5 to {lckgrowth.%player%}
			add 20 to {abilities.%player%::Magical Weapons}
			add 20 to {abilities.%player%::Enchanting}
		else if {background.%player%} is "Sellsword":
			add 15 to {hpgrowth.%player%}
			add 15 to {strgrowth.%player%}
			add 15 to {defgrowth.%player%}
			add 5 to {spdgrowth.%player%}
			add 5 to {resgrowth.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Barter}
			add 13 to {abilities.%player%::Survival}
		else if {background.%player%} is "Thief":
			add 5 to {hpgrowth.%player%}
			add 15 to {strgrowth.%player%}
			add 5 to {defgrowth.%player%}
			add 15 to {spdgrowth.%player%}
			add 5 to {resgrowth.%player%}
			add 15 to {lckgrowth.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Lockpicking}
			add 13 to {abilities.%player%::Barter}
		else if {background.%player%} is "Smith":
			add 5 to {hpgrowth.%player%}
			add 15 to {strgrowth.%player%}
			add 15 to {defgrowth.%player%}
			add 5 to {lckgrowth.%player%}
			add 15 to {chrgrowth.%player%}
			add 13 to {abilities.%player%::Guns}
			add 13 to {abilities.%player%::Repair}
			add 13 to {abilities.%player%::Fabrication}
		else if {background.%player%} is "Forager":
			add 15 to {hpgrowth.%player%}
			add 5 to {strgrowth.%player%}
			add 15 to {defgrowth.%player%}
			add 5 to {maggrowth.%player%}
			add 15 to {resgrowth.%player%}
			add 13 to {abilities.%player%::Medicine}
			add 13 to {abilities.%player%::Repair}
			add 13 to {abilities.%player%::Survival}
		else if {background.%player%} is "Inventor":
			add 15 to {maggrowth.%player%}
			add 5 to {spdgrowth.%player%}
			add 15 to {strgrowth.%player%}
			add 5 to {maggrowth.%player%}
			add 15 to {chrgrowth.%player%}
			add 13 to {abilities.%player%::Fabrication}
			add 13 to {abilities.%player%::Enchanting}
			add 13 to {abilities.%player%::Speech}
		else if {background.%player%} is "Immigrant":
			add 15 to {strgrowth.%player%}
			add 5 to {defgrowth.%player%}
			add 15 to {spdgrowth.%player%}
			add 5 to {chrgrowth.%player%}
			add 15 to {lckgrowth.%player%}
			add 13 to {abilities.%player%::Fabrication}
			add 13 to {abilities.%player%::Guns}
			add 13 to {abilities.%player%::Survival}
		else if {background.%player%} is "Farmer":
			add 15 to {strgrowth.%player%}
			add 5 to {hpgrowth.%player%}
			add 15 to {defgrowth.%player%}
			add 5 to {maggrowth.%player%}
			add 15 to {resgrowth.%player%}
			add 13 to {abilities.%player%::Medicine}
			add 13 to {abilities.%player%::Barter}
			add 13 to {abilities.%player%::Traditional Weapons}
		else if {background.%player%} is "Researcher":
			add 15 to {maggrowth.%player%}
			add 5 to {chrgrowth.%player%}
			add 15 to {lckgrowth.%player%}
			add 5 to {hpgrowth.%player%}
			add 15 to {resgrowth.%player%}
			add 13 to {abilities.%player%::Enchanting}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Guns}
		else if {background.%player%} is "Weaponmaster":
			add 15 to {strgrowth.%player%}
			add 5 to {defgrowth.%player%}
			add 15 to {maggrowth.%player%}
			add 5 to {resgrowth.%player%}
			add 15 to {lckgrowth.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Guns}
		#Dragonborn Backgrounds
		else if {background.%player%} is "Windcaller":
			add 20 to {hpgrowth.%player%}
			add 20 to {spdgrowth.%player%}
			add 10 to {strgrowth.%player%}
			add 10 to {maggrowth.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Enchanting}
		else if {background.%player%} is "Firestorm":
			add 20 to {strgrowth.%player%}
			add 20 to {maggrowth.%player%}
			add 10 to {spdgrowth.%player%}
			add 10 to {lckgrowth.%player%}
			add 13 to {abilities.%player%::Traditional Weapons}
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Fabrication}
		else if {background.%player%} is "Waterflow":
			add 20 to {hpgrowth.%player%}
			add 20 to {defgrowth.%player%}
			add 10 to {resgrowth.%player%}
			add 10 to {lckgrowth.%player%}
			add 13 to {abilities.%player%::Repair}
			add 13 to {abilities.%player%::Medicine}
			add 13 to {abilities.%player%::Survival}
		#Traits
		if {traits.%player%::All In!} is true:
			set {_debug} to changeEntityStatBuff(player,"STR",5,"All In! (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"MAG",5,"All In! (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"SPD",5,"All In! (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",-3,"All In! (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"RES",-3,"All In! (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"HP",-3,"All In! (Trait)",0)
		if {traits.%player%::Honorable} is true:
			set {_debug} to changeEntityStatBuff(player,"STR",3,"Honorable (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"MAG",3,"Honorable (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"SPD",3,"Honorable (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"LCK",-5,"Honorable (Trait)",0)
		if {traits.%player%::Small Frame} is true:
			set {_debug} to changeEntityStatBuff(player,"SPD",5,"Small Frame (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"LCK",5,"Small Frame (Trait)",0)
		if {traits.%player%::Veteran} is true:
			set {_debug} to changeEntityStatBuff(player,"HP",5,"Veteran (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"STR",5,"Veteran (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",5,"Veteran (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"MAG",5,"Veteran (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"RES",5,"Veteran (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"SPD",5,"Veteran (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"LCK",5,"Veteran (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"CHR",5,"Veteran (Trait)",0)
			subtract 30 from {hpgrowth.%player%}
			subtract 30 from {strgrowth.%player%}
			subtract 30 from {defgrowth.%player%}
			subtract 30 from {maggrowth.%player%}
			subtract 30 from {resgrowth.%player%}
			subtract 30 from {spdgrowth.%player%}
			subtract 30 from {lckgrowth.%player%}
			subtract 30 from {chrgrowth.%player%}
		if {traits.%player%::Trainee} is true:
			set {_debug} to changeEntityStatBuff(player,"HP",-7,"Trainee (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"STR",-7,"Trainee (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",-7,"Trainee (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"MAG",-7,"Trainee (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"RES",-7,"Trainee (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"SPD",-7,"Trainee (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"LCK",-7,"Trainee (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"CHR",-7,"Trainee (Trait)",0)
			add 5 to {hpcap.%player%}
			add 5 to {strcap.%player%}
			add 5 to {defcap.%player%}
			add 5 to {chrcap.%player%}
			add 5 to {lckcap.%player%}
			add 5 to {spdcap.%player%}
			add 5 to {magcap.%player%}
			add 5 to {rescap.%player%}
			add 30 to {hpgrowth.%player%}
			add 30 to {strgrowth.%player%}
			add 30 to {defgrowth.%player%}
			add 30 to {maggrowth.%player%}
			add 30 to {resgrowth.%player%}
			add 30 to {spdgrowth.%player%}
			add 30 to {lckgrowth.%player%}
			add 30 to {chrgrowth.%player%}
		if {traits.%player%::Perceptive} is true:
			set {_debug} to changeEntityStatBuff(player,"SPD",-5,"Perceptive (Trait)",0)
		if {traits.%player%::Old Fashioned} is true:
			set {_debug} to changeEntityStatBuff(player,"STR",3,"Old Fashioned (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",3,"Old Fashioned (Trait)",0)
			add 13 to {abilities.%player%::Traditional Weapons}
			set {_debug} to changeEntityStatBuff(player,"MAG",-5,"Old Fashioned (Trait)",0)
			subtract 7 from {abilities.%player%::Magical Weapons}
			subtract 7 from {abilities.%player%::Guns}
		if {traits.%player%::Economical} is true:
			set {_debug} to changeEntityStatBuff(player,"CHR",5,"Economical (Trait)",0)
			add 20 to {abilities.%player%::Barter}
			subtract 20 from {abilities.%player%::Speech}
		if {traits.%player%::Good Natured} is true:
			set {_debug} to changeEntityStatBuff(player,"CHR",5,"Good Natured (Trait)",0)
			add 10 to {abilities.%player%::Speech}
			add 10 to {abilities.%player%::Medicine}
			set {_debug} to changeEntityStatBuff(player,"STR",-2,"Good Natured (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"MAG",-2,"Good Natured (Trait)",0)
			subtract 7 from {abilities.%player%::Traditional Weapons}
			subtract 7 from {abilities.%player%::Magical Weapons}
			subtract 7 from {abilities.%player%::Guns}
		if {traits.%player%::Kamikaze} is true:
			set {_debug} to changeEntityStatBuff(player,"DEF",-5,"Kamikaze (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"RES",-5,"Kamikaze (Trait)",0)
			subtract 7 from {abilities.%player%::Medicine}
			subtract 7 from {abilities.%player%::Survival}
		if {traits.%player%::Strong-Armed} is true:
			set {_debug} to changeEntityStatBuff(player,"STR",4,"Strong-Armed (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",4,"Strong-Armed (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"HP",2,"Strong-Armed (Trait)",0)
			subtract 7 from {abilities.%player%::Traditional Weapons}
			subtract 7 from {abilities.%player%::Magical Weapons}
			subtract 7 from {abilities.%player%::Guns}
		if {traits.%player%::Protective} is true:
			add 10 to {abilities.%player%::Medicine}
			add 10 to {abilities.%player%::Survival}
			set {_debug} to changeEntityStatBuff(player,"STR",-6,"Protective (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"MAG",-6,"Protective (Trait)",0)
			subtract 7 from {abilities.%player%::Traditional Weapons}
			subtract 7 from {abilities.%player%::Magical Weapons}
			subtract 7 from {abilities.%player%::Guns}
		if {traits.%player%::Skilled} is true:
			add 20 to {abilities.%player%::Traditional Weapons}
			add 20 to {abilities.%player%::Magical Weapons}
			add 20 to {abilities.%player%::Guns}
			add 20 to {abilities.%player%::Lockpicking}
			add 20 to {abilities.%player%::Medicine}
			add 20 to {abilities.%player%::Repair}
			add 20 to {abilities.%player%::Fabrication}
			add 20 to {abilities.%player%::Enchanting}
			add 20 to {abilities.%player%::Speech}
			add 20 to {abilities.%player%::Barter}
			add 20 to {abilities.%player%::Survival}
		if {traits.%player%::Forest Dweller} is true:
			set {_debug} to changeEntityStatBuff(player,"MAG",3,"Forest Dweller (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"RES",3,"Forest Dweller (Trait)",0)
			add 13 to {abilities.%player%::Magical Weapons}
			set {_debug} to changeEntityStatBuff(player,"STR",-5,"Forest Dweller (Trait)",0)
			subtract 7 from {abilities.%player%::Traditional Weapons}
			subtract 7 from {abilities.%player%::Guns}
		if {traits.%player%::Bruiser} is true:
			set {_debug} to changeEntityStatBuff(player,"STR",4,"Bruiser (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",4,"Bruiser (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"MAG",4,"Bruiser (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"RES",4,"Bruiser (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"SPD",-5,"Bruiser (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"CHR",-5,"Bruiser (Trait)",0)
		if {traits.%player%::Honest Heart} is true:
			add 20 to {abilities.%player%::Barter}
			add 20 to {abilities.%player%::Speech}
		if {traits.%player%::Blade Sponge} is true:
			remove regeneration from the player
			apply regeneration 2 to the player for 1 day
		if {traits.%player%::Physician} is true:
			add 20 to {abilities.%player%::Medicine}
			add 20 to {abilities.%player%::Speech}
		if {traits.%player%::Jack of all Trades} is true:
			set {_statCapAverage} to ceil(({hpcap.%player%} + {strcap.%player%} + {defcap.%player%} + {magcap.%player%} + {rescap.%player%} + {spdcap.%player%} + {lckcap.%player%} + {chrcap.%player%}) / 8)
			set {hpcap.%player%} to floor({_statCapAverage} * 1.5)
			set {strcap.%player%} to {_statCapAverage}
			set {defcap.%player%} to {_statCapAverage}
			set {lckcap.%player%} to {_statCapAverage}
			set {chrcap.%player%} to {_statCapAverage}
			set {spdcap.%player%} to {_statCapAverage}
			set {magcap.%player%} to {_statCapAverage}
			set {rescap.%player%} to {_statCapAverage}			
		else if {traits.%player%::Spellscribe} is true:
			set {_debug} to changeEntityStatBuff(player,"MAG",5,"Spellscribe (Trait)",0)
			add 13 to {abilities.%player%::Magical Weapons}
			add 13 to {abilities.%player%::Enchanting}
			set {_debug} to changeEntityStatBuff(player,"RES",5,"Spellscribe (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"STR",-5,"Spellscribe (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",-5,"Spellscribe (Trait)",0)
			subtract 13 from {abilities.%player%::Traditional Weapons}
			subtract 13 from {abilities.%player%::Guns}
		else if {traits.%player%::Tinkerer} is true:
			set {_debug} to changeEntityStatBuff(player,"STR",2,"Tinkerer (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"DEF",2,"Tinkerer (Trait)",0)
			add 10 to {abilities.%player%::Repair}
			add 10 to {abilities.%player%::Fabrication}
			add 10 to {abilities.%player%::Traditional Weapons}
			add 10 to {abilities.%player%::Guns}
			set {_debug} to changeEntityStatBuff(player,"SPD",-5,"Tinkerer (Trait)",0)
			set {_debug} to changeEntityStatBuff(player,"CHR",-5,"Tinkerer (Trait)",0)
			subtract 7 from {abilities.%player%::Barter}
		#Dragonborn Half-Breed is now universal from minor D'al Versain Holy Blood
		else if {holyblood.%player%::D'al Versain} is 1:
			subtract 15 from {abilities.%player%::Speech}
			subtract 15 from {abilities.%player%::Barter}
			if {background.%player%} is "Windcaller":
				set {_debug} to changeEntityStatBuff(player,"SPD",7,"Windcaller Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"LCK",7,"Windcaller Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"STR",3,"Windcaller Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"MAG",3,"Windcaller Clan Half-Breed",0)
				add 7 to {abilities.%player%::Traditional Weapons}
				add 7 to {abilities.%player%::Magical Weapons}
				add 7 to {abilities.%player%::Enchanting}
			else if {background.%player%} is "Firestorm":
				set {_debug} to changeEntityStatBuff(player,"STR",7,"Firestorm Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"MAG",7,"Firestorm Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"SPD",3,"Firestorm Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"LCK",3,"Firestorm Clan Half-Breed",0)
				add 7 to {abilities.%player%::Traditional Weapons}
				add 7 to {abilities.%player%::Magical Weapons}
				add 7 to {abilities.%player%::Fabrication}
			else if {background.%player%} is "Waterflow":
				set {_debug} to changeEntityStatBuff(player,"DEF",7,"Waterflow Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"RES",7,"Waterflow Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"SPD",3,"Waterflow Clan Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"LCK",3,"Waterflow Clan Half-Breed",0)
				add 7 to {abilities.%player%::Medicine}
				add 7 to {abilities.%player%::Survival}
				add 7 to {abilities.%player%::Repair}
			else:
				set {_debug} to changeEntityStatBuff(player,"MAG",7,"Mixed Race Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"LCK",7,"Mixed Race Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"STR",3,"Mixed Race Half-Breed",0)
				set {_debug} to changeEntityStatBuff(player,"SPD",3,"Mixed Race Half-Breed",0)
				add 7 to {abilities.%player%::Magical Weapons}
				add 7 to {abilities.%player%::Survival}
				add 7 to {abilities.%player%::Medicine}		
		#Stats (except for HP) start at a base of 1
		add -3 to {str.%player%}
		add -3 to {mag.%player%}
		add -3 to {spd.%player%}
		add -3 to {lck.%player%}
		add -3 to {chr.%player%}
		add -3 to {def.%player%}
		add -3 to {res.%player%}
		#All stats have a base cap of 6
		add 10 to {strcap.%player%}
		add 10 to {magcap.%player%}
		add 10 to {spdcap.%player%}
		add 10 to {lckcap.%player%}
		add 10 to {chrcap.%player%}
		add 10 to {defcap.%player%}
		add 10 to {rescap.%player%}
		#Patch dump stats going below 0
		if {chr.%player%} is less than 1:
			set {chr.%player%} to 1
		if {spd.%player%} is less than 1:
			set {spd.%player%} to 1
		if {str.%player%} is less than 1:
			set {str.%player%} to 1
		if {def.%player%} is less than 1:
			set {def.%player%} to 1
		if {lck.%player%} is less than 1:
			set {lck.%player%} to 1
		if {mag.%player%} is less than 1:
			set {mag.%player%} to 1
		if {res.%player%} is less than 1:
			set {res.%player%} to 1
		#Dump caps still end up decent
		if {hpcap.%player%} is less than 30:
			set {hpcap.%player%} to 30
		if {strcap.%player%} is less than 25:
			set {strcap.%player%} to 25
		else if {defcap.%player%} is less than 25:
			set {defcap.%player%} to 25
		else if {chrcap.%player%} is less than 20:
			set {chrcap.%player%} to 20
		else if {lckcap.%player%} is less than 25:
			set {lckcap.%player%} to 25
		else if {spdcap.%player%} is less than 25:
			set {spdcap.%player%} to 25
		else if {magcap.%player%} is less than 25:
			set {magcap.%player%} to 25
		else if {rescap.%player%} is less than 25:
			set {rescap.%player%} to 25
		#Patch dump growths going below 0
		if {strgrowth.%player%} is less than 10:
			set {strgrowth.%player%} to 10
		else if {defgrowth.%player%} is less than 10:
			set {defgrowth.%player%} to 10
		else if {chrgrowth.%player%} is less than 10:
			set {chrgrowth.%player%} to 10
		else if {lckgrowth.%player%} is less than 10:
			set {lckgrowth.%player%} to 10
		else if {spdgrowth.%player%} is less than 10:
			set {spdgrowth.%player%} to 10
		else if {maggrowth.%player%} is less than 10:
			set {maggrowth.%player%} to 10
		else if {resgrowth.%player%} is less than 10:
			set {resgrowth.%player%} to 10
		#Small bump to growth rates
		add 20 to {hpgrowth.%player%}
		add 10 to {strgrowth.%player%}
		add 10 to {defgrowth.%player%}
		add 15 to {chrgrowth.%player%}
		add 10 to {lckgrowth.%player%}
		add 10 to {spdgrowth.%player%}
		add 10 to {maggrowth.%player%}
		add 10 to {resgrowth.%player%}
		#Holy Blood bonuses
		#1 = Major Holy Blood | 2 = Minor Holy Blood (bonuses halved)
		#
		#Selena
		if {holyBlood.%player%::Selena} is more than 0:
			add (4 / {holyBlood.%player%::Selena}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Selena}) to {hpcap.%player%}
			add (2 / {holyBlood.%player%::Selena}) to {str.%player%}
			add (4 / {holyBlood.%player%::Selena}) to {strcap.%player%}
			add (2 / {holyBlood.%player%::Selena}) to {lck.%player%}
			add (4 / {holyBlood.%player%::Selena}) to {lckcap.%player%}
			add (2 / {holyBlood.%player%::Selena}) to {chr.%player%}
			add (4 / {holyBlood.%player%::Selena}) to {chrcap.%player%}
			add (40 / {holyBlood.%player%::Selena}) to {hpgrowth.%player%}
			add (20 / {holyBlood.%player%::Selena}) to {strgrowth.%player%}
			add (20 / {holyBlood.%player%::Selena}) to {lckgrowth.%player%}
			add (20 / {holyBlood.%player%::Selena}) to {chrgrowth.%player%}
		#Edainn
		if {holyBlood.%player%::Edainn} is more than 0:
			add (4 / {holyBlood.%player%::Edainn}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Edainn}) to {hpcap.%player%}
			add (4 / {holyBlood.%player%::Edainn}) to {lck.%player%}
			add (8 / {holyBlood.%player%::Edainn}) to {lckcap.%player%}
			add (2 / {holyBlood.%player%::Edainn}) to {spd.%player%}
			add (4 / {holyBlood.%player%::Edainn}) to {spdcap.%player%}
			add (40 / {holyBlood.%player%::Edainn}) to {hpgrowth.%player%}
			add (40 / {holyBlood.%player%::Edainn}) to {lckgrowth.%player%}
			add (20 / {holyBlood.%player%::Edainn}) to {spdgrowth.%player%}
		#Tresvian
		if {holyBlood.%player%::Tresvian} is more than 0:
			add (6 / {holyBlood.%player%::Tresvian}) to {hp.%player%}
			add (12 / {holyBlood.%player%::Tresvian}) to {hpcap.%player%}
			add (2 / {holyBlood.%player%::Tresvian}) to {spd.%player%}
			add (4 / {holyBlood.%player%::Tresvian}) to {spdcap.%player%}
			add (2 / {holyBlood.%player%::Tresvian}) to {def.%player%}
			add (4 / {holyBlood.%player%::Tresvian}) to {defcap.%player%}		
			add (40 / {holyBlood.%player%::Tresvian}) to {hpgrowth.%player%}
			add (30 / {holyBlood.%player%::Tresvian}) to {spdgrowth.%player%}
			add (30 / {holyBlood.%player%::Tresvian}) to {defgrowth.%player%}
		#Rexas
		if {holyBlood.%player%::Rexas} is more than 0:
			add (6 / {holyBlood.%player%::Rexas}) to {spd.%player%}
			add (12 / {holyBlood.%player%::Rexas}) to {spdcap.%player%}
			add (2 / {holyBlood.%player%::Rexas}) to {lck.%player%}
			add (4 / {holyBlood.%player%::Rexas}) to {lckcap.%player%}
			add (2 / {holyBlood.%player%::Rexas}) to {str.%player%}
			add (4 / {holyBlood.%player%::Rexas}) to {strcap.%player%}	
			add (40 / {holyBlood.%player%::Rexas}) to {spdgrowth.%player%}
			add (30 / {holyBlood.%player%::Rexas}) to {lckgrowth.%player%}
			add (30 / {holyBlood.%player%::Rexas}) to {strgrowth.%player%}
		#Valkyria
		if {holyBlood.%player%::Valkyria} is more than 0:
			add (4 / {holyBlood.%player%::Valkyria}) to {res.%player%}
			add (8 / {holyBlood.%player%::Valkyria}) to {rescap.%player%}
			add (2 / {holyBlood.%player%::Valkyria}) to {hp.%player%}
			add (4 / {holyBlood.%player%::Valkyria}) to {hpcap.%player%}
			add (2 / {holyBlood.%player%::Valkyria}) to {mag.%player%}
			add (4 / {holyBlood.%player%::Valkyria}) to {magcap.%player%}
			add (2 / {holyBlood.%player%::Valkyria}) to {lck.%player%}
			add (4 / {holyBlood.%player%::Valkyria}) to {lckcap.%player%}
			add (20 / {holyBlood.%player%::Valkyria}) to {hpgrowth.%player%}
			add (20 / {holyBlood.%player%::Valkyria}) to {maggrowth.%player%}
			add (40 / {holyBlood.%player%::Valkyria}) to {resgrowth.%player%}
			add (20 / {holyBlood.%player%::Valkyria}) to {lckgrowth.%player%}
		#Aquillo
		if {holyBlood.%player%::Aquillo} is more than 0:
			add (8 / {holyBlood.%player%::Aquillo}) to {lck.%player%}
			add (16 / {holyBlood.%player%::Aquillo}) to {lckcap.%player%}
			add (2 / {holyBlood.%player%::Aquillo}) to {hp.%player%}
			add (4 / {holyBlood.%player%::Aquillo}) to {hpcap.%player%}
			add (2 / {holyBlood.%player%::Aquillo}) to {mag.%player%}
			add (4 / {holyBlood.%player%::Aquillo}) to {magcap.%player%}		
			add (20 / {holyBlood.%player%::Aquillo}) to {hpgrowth.%player%}
			add (60 / {holyBlood.%player%::Aquillo}) to {lckgrowth.%player%}
			add (20 / {holyBlood.%player%::Aquillo}) to {maggrowth.%player%}
		#Delphi
		if {holyBlood.%player%::Delphi} is more than 0:
			add (8 / {holyBlood.%player%::Delphi}) to {mag.%player%}
			add (16 / {holyBlood.%player%::Delphi}) to {magcap.%player%}
			add (4 / {holyBlood.%player%::Delphi}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Delphi}) to {hpcap.%player%}
			add (40 / {holyBlood.%player%::Delphi}) to {hpgrowth.%player%}
			add (60 / {holyBlood.%player%::Delphi}) to {maggrowth.%player%}
		#Zelahan
		if {holyBlood.%player%::Zelahan} is more than 0:
			add (4 / {holyBlood.%player%::Zelahan}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Zelahan}) to {hpcap.%player%}
			add (4 / {holyBlood.%player%::Zelahan}) to {str.%player%}
			add (8 / {holyBlood.%player%::Zelahan}) to {strcap.%player%}
			add (2 / {holyBlood.%player%::Zelahan}) to {def.%player%}
			add (4 / {holyBlood.%player%::Zelahan}) to {defcap.%player%}
			add (40 / {holyBlood.%player%::Zelahan}) to {hpgrowth.%player%}
			add (40 / {holyBlood.%player%::Zelahan}) to {strgrowth.%player%}
			add (20 / {holyBlood.%player%::Zelahan}) to {defgrowth.%player%}
		#Kallin
		if {holyBlood.%player%::Kallin} is more than 0:
			add (4 / {holyBlood.%player%::Kallin}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Kallin}) to {hpcap.%player%}
			add (2 / {holyBlood.%player%::Kallin}) to {str.%player%}
			add (4 / {holyBlood.%player%::Kallin}) to {strcap.%player%}
			add (2 / {holyBlood.%player%::Kallin}) to {spd.%player%}
			add (4 / {holyBlood.%player%::Kallin}) to {spdcap.%player%}
			add (2 / {holyBlood.%player%::Kallin}) to {def.%player%}
			add (4 / {holyBlood.%player%::Kallin}) to {defcap.%player%}
			add (40 / {holyBlood.%player%::Kallin}) to {hpgrowth.%player%}
			add (20 / {holyBlood.%player%::Kallin}) to {strgrowth.%player%}
			add (20 / {holyBlood.%player%::Kallin}) to {spdgrowth.%player%}
			add (20 / {holyBlood.%player%::Kallin}) to {defgrowth.%player%}
		#Makalis
		if {holyBlood.%player%::Makallan} is more than 0:
			add (8 / {holyBlood.%player%::Makallan}) to {def.%player%}
			add (16 / {holyBlood.%player%::Makallan}) to {defcap.%player%}
			add (4 / {holyBlood.%player%::Makallan}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Makallan}) to {hpcap.%player%}
			add (40 / {holyBlood.%player%::Makallan}) to {hpgrowth.%player%}
			add (60 / {holyBlood.%player%::Makallan}) to {defgrowth.%player%}
		#D'al Versain
		if {holyBlood.%player%::D'al Versain} is more than 0:
			add (2 / {holyBlood.%player%::D'al Versain}) to {hp.%player%}
			add (4 / {holyBlood.%player%::D'al Versain}) to {hpcap.%player%}
			add (4 / {holyBlood.%player%::D'al Versain}) to {mag.%player%}
			add (8 / {holyBlood.%player%::D'al Versain}) to {magcap.%player%}
			add (4 / {holyBlood.%player%::D'al Versain}) to {res.%player%}
			add (8 / {holyBlood.%player%::D'al Versain}) to {rescap.%player%}
			add (20 / {holyBlood.%player%::D'al Versain}) to {hpgrowth.%player%}
			add (40 / {holyBlood.%player%::D'al Versain}) to {maggrowth.%player%}
			add (40 / {holyBlood.%player%::D'al Versain}) to {resgrowth.%player%}
		#Gaia
		if {holyBlood.%player%::Gaia} is more than 0:
			add (8 / {holyBlood.%player%::Gaia}) to {spd.%player%}
			add (16 / {holyBlood.%player%::Gaia}) to {spdcap.%player%}
			add (4 / {holyBlood.%player%::Gaia}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Gaia}) to {hpcap.%player%}
			add (40 / {holyBlood.%player%::Gaia}) to {hpgrowth.%player%}
			add (60 / {holyBlood.%player%::Gaia}) to {spdgrowth.%player%}
		#Jubilo
		if {holyBlood.%player%::Jublio} is more than 0:
			add (4 / {holyBlood.%player%::Selena}) to {hp.%player%}
			add (8 / {holyBlood.%player%::Selena}) to {hpcap.%player%}
			add (2 / {holyBlood.%player%::Selena}) to {str.%player%}
			add (4 / {holyBlood.%player%::Selena}) to {strcap.%player%}
			add (2 / {holyBlood.%player%::Selena}) to {lck.%player%}
			add (4 / {holyBlood.%player%::Selena}) to {lckcap.%player%}
			add (2 / {holyBlood.%player%::Selena}) to {chr.%player%}
			add (4 / {holyBlood.%player%::Selena}) to {chrcap.%player%}
			add (40 / {holyBlood.%player%::Jubilo}) to {hpgrowth.%player%}
			add (20 / {holyBlood.%player%::Jubilo}) to {maggrowth.%player%}
			add (20 / {holyBlood.%player%::Jubilo}) to {defgrowth.%player%}
			add (20 / {holyBlood.%player%::Jubilo}) to {resgrowth.%player%}
		#
		#
		add floor({hpgrowth.%player%} * 0.2) to {hpgrowth.%player%}
		add floor({strgrowth.%player%} * 0.1) to {strgrowth.%player%}
		add floor({defgrowth.%player%} * 0.1) to {defgrowth.%player%}
		add floor({chrgrowth.%player%} * 0.1) to {chrgrowth.%player%}
		add floor({lckgrowth.%player%} * 0.1) to {lckgrowth.%player%}
		add floor({spdgrowth.%player%} * 0.1) to {spdgrowth.%player%}
		add floor({maggrowth.%player%} * 0.1) to {maggrowth.%player%}
		add floor({resgrowth.%player%} * 0.1) to {resgrowth.%player%}
		#LCK growth rate bonus
		add floor({lck.%player%} * 1.5) to {hpgrowth.%player%}
		add floor({lck.%player%} * 1.5) to {strgrowth.%player%}
		add floor({lck.%player%} * 1.5) to {defgrowth.%player%}
		add floor({lck.%player%} * 1.5) to {chrgrowth.%player%}
		add floor({lck.%player%} * 1.5) to {lckgrowth.%player%}
		add floor({lck.%player%} * 1.5) to {spdgrowth.%player%}
		add floor({lck.%player%} * 1.5) to {maggrowth.%player%}
		add floor({lck.%player%} * 1.5) to {resgrowth.%player%}
		#Abilities bonus from stats
		add floor({str.%player%} * 0.8) to {abilities.%player%::Traditional Weapons}
		add floor({mag.%player%} * 0.8) to {abilities.%player%::Magical Weapons}
		add floor({str.%player%} * 0.8) to {abilities.%player%::Guns}
		add floor(({lck.%player%} + {spd.%player%}) / 2) to {abilities.%player%::Lockpicking}
		add floor(({hp.%player%} + {mag.%player%})  / 2) to {abilities.%player%::Medicine}
		add floor(({str.%player%} + {def.%player%}) / 2) to {abilities.%player%::Repair}
		add floor(({str.%player%} + {def.%player%}) / 2) to {abilities.%player%::Fabrication}
		add floor(({mag.%player%} + {res.%player%}) / 2) to {abilities.%player%::Enchanting}
		add floor(({chr.%player%} + {lck.%player%}) / 1) to {abilities.%player%::Speech}
		add floor(({chr.%player%} + {mag.%player%} + {str.%player%}) * 0.5) to {abilities.%player%::Barter}
		add floor(({hp.%player%} + {def.%player%} + {res.%player%}) * 0.33) to {abilities.%player%::Survival}
		#Prevent abilities starting at less than 10:
		loop {abilities.%player%::*}:
			if loop-value is less than 10:
				set {abilities.%player%::%loop-index%} to 10
		#Playing the button click SFX on menu refresh gives a slight reduction in line count versus calling it on each item click
		play sound "ui.button.click" with volume 0.25 and pitch 1 at the player for the player
		#Global buttons
		open chest inventory with 6 rows named "<gold>Character Creator" for the player
		set slot 53 of the player's current inventory to 1 redstone dust named "<gold>Final Review" with lore "<white>Review your character and begin your adventure."
		set slot 52 of the player's current inventory to 1 bow named "<gold>Change Preferences" with lore "<white>Change various gameplay options for this character."
		set slot 47 of the player's current inventory to 1 golden chestplate named "<gold>Select Class" with lore "<white>Select a class for your character."
		set slot 51 of the player's current inventory to 1 eye of ender named "<gold>Select Difficulty" with lore "<white>Change how difficult this character's journey will be."
		set slot 50 of the player's current inventory to 1 gold ingot named "<gold>Select Traits" with lore "<white>Assign Traits to your character."
		set slot 49 of the player's current inventory to 1 iron pickaxe named "<gold>Select Proficiencies" with lore "<white>Review your Abilities and tag up to two as Proficient."
		set slot 48 of the player's current inventory to 1 shulker shell named "<gold>Stats Adjustor" with lore "<white>Fine-tune your character's Stats."
		set slot 46 of the player's current inventory to 1 iron sword named "<gold>Select Background" with lore "<white>Select your character's origin story."
		set slot 45 of the player's current inventory to 1 totem of undying named "<gold>Select Race" with lore "<white>Change your Character's race."
		#Pg 0: Select Race
		if arg 1 is 0:
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>Select a Race for your character.", "<white>Each race has different attributes and a unique Trait.", "<white>Click on a race's icon to select it."
			set slot 1 of the player's current inventory to 1 totem of undying named "<light yellow>Your Race: %{race.%player%}%"
			set slot 9 of the player's current inventory to 1 totem of undying named "<light yellow>Human" with lore "<white>Well-balanced and hardy.", "<white>Racial Bonuses:", "<white>All Stats +2.", "<white>+13 to Traditional Weapons/Magical Weapons/Guns/Speech/Barter.", "<light green>EXP Gain: Fast", "<white>Unique Perk: <gold>[Intuition]<white>.", "<gold>[Intuition]: <white>Gain 2x Class XP during combat while equipped."
			set slot 10 of the player's current inventory to 1 totem of undying named "<light yellow>Elf" with lore "<white>Magically inclined, but slightly fragile. Smooth talkers.", "<white>Racial Bonuses:", "<white>MAG/SPD/CHA +4, LCK +3, RES +2, STR -1, DEF -2", "<white>+13 to Magical Weapons/Enchanting/Medicine/Speech/Lockpicking.", "<white>EXP Gain: Normal", "<white>Unique Perk: <gold>[Concentration]<white>.", "<gold>[Concentration]: <white>Gain up to 30%% bonus damage dealt by not taking damage."
			set slot 11 of the player's current inventory to 1 totem of undying named "<light yellow>Dwarf" with lore "<white>Short-statured smiths and warriors.", "<white>Racial Bonuses:", "<white>HP/STR +5, DEF +4, LCK/CHA +2, SPD -2", "<white>+13 to Traditional Weapons/Guns/Fabrication/Barter/Repair.", "<white>EXP Gain: Normal", "<white>Unique Perk: <gold>[Gold Digger]<white>.", "<gold>[Gold Digger]: <white>Mining any ore grants an extra drop of it."
			set slot 12 of the player's current inventory to 1 totem of undying named "<light yellow>Orc" with lore "<white>Imposing natural-born tanks.", "<white>Racial Bonuses:", "<white>HP +6, STR/DEF/RES +4, LCK/CHA +2, MAG -2, SPD -4,", "<white>+13 to Traditional Weapons/Medicine/Repair/Fabrication/Survival.", "<light red>EXP Gain: Slow", "<white>Unique Perk: <gold>[Face The Enemy]<white>.", "<gold>[Face The Enemy]: <white>Deal 15%% more damage and take 15%% less damage while combat tagged."
			set slot 13 of the player's current inventory to 1 totem of undying named "<light yellow>Dragonborn" with lore "<white>Endangered warriors of mythical descent.", "<white>Racial Bonuses:", "<white>MAG +5, RES +3, HP/DEF/LCK +2, CHA -4", "<white>+13 to Traditional Weapons/Magical Weapons/Medicine/Survival/Enchanting.", "<light red>EXP Gain: Slow", "<white>Unique Perk: <gold>[Dragon Soul]<white>.", "<gold>[Dragon Soul]: <white>Transform into a dragon by dealing damage.", "<white>This perk changes based on your Background."
			if {dev_enableCustomRaces.%player%} is true:
				set slot 14 of the player's current inventory to 1 chest named "<light yellow>Custom Race" with lore "<white>Create your own custom race."
			if {dev_enableHiddenRaces.%player%} is true:
				set slot 14 of the player's current inventory to 1 totem of undying named "<light yellow>Laguz" with lore "<white>LAGUZ_DESCRIPTION", "<white>Racial Bonuses:", "<white>All Stats +2.", "<white>+13 to Traditional Weapons/Survival/Medicine/Magical Weapons/Lockpicking.", "<white>Unique Perk: <gold>[Beast Soul]<white>", "<gold>[Beast Soul]<white> Transform into your beast state by dealing damage.", "<white>This perk changes based on your Background."
		#Pg 1: Select Background
		else if arg 1 is 1:
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>Your character's Background slightly influences how their stats grow over time.", "<white>Additionally, each Background gives your character a starting bonus to specific Abilities.", "<white>Your Background: %{background.%player%}%"
			if {race.%player%} is not "Dragonborn":			
				set slot 9 of the player's current inventory to 1 book named "<light yellow>Commoner" with lore "<white>Average, but unspecialized.", "<white>Background bonus:", "<white>+5%% growth rate to all stats.", "<white>+4 to Tradtional Weapons/Medicine/Repair/Fabrication/Speech/Barter/Survival"
				set slot 10 of the player's current inventory to 1 book named "<light yellow>Nobility" with lore "<white>Charmtic and fair combatants.", "<white>Background bonus:", "<white>HP/LCK/CHA +15%%, STR/MAG +5%%.", "<white>+13 to Traditional Weapons/Speech/Barter"
				set slot 11 of the player's current inventory to 1 book named "<light yellow>Chemist" with lore "<white>Healer with strong knowledge of medicine.", "<white>Background bonus:", "<white>HP/MAG/RES +15%%, SPD/CHA +5%%.", "<white>+13 to Medicine/Speech/Magical Weapons"
				set slot 12 of the player's current inventory to 1 book named "<light yellow>Enchanter" with lore "<white>Mage familiar with arcane enchantments.", "<white>Background bonus:", "<white>HP/MAG/SPD +15%%, LCK/RES +5%%.", "<white>+20 to Enchanting/Magical Weapons"
				set slot 13 of the player's current inventory to 1 book named "<light yellow>Sellsword" with lore "<white>Roaming blade-for-hire.", "<white>Background bonus:", "<white>HP/STR/DEF +15%%, SPD/RES +5%%.", "<white>+13 to Traditional Weapons/Barter/Survival"
				set slot 14 of the player's current inventory to 1 book named "<light yellow>Thief" with lore "<white>Free-spirited rouge that makes their own rules.", "<white>Background bonus:", "<white>SPD/LCK/STR +15%%, DEF/RES +5%%.", "<white>+13 to Traditional Weapons/Lockpicking/Barter"
				set slot 15 of the player's current inventory to 1 book named "<light yellow>Smith" with lore "<white>Master of the forge.", "<white>Background bonus:", "<white>STR/DEF/CHA +15%%, LCK/HP +5%%.", "<white>+13 to Barter/Fabrication/Repair"
				set slot 16 of the player's current inventory to 1 book named "<light yellow>Forager" with lore "<white>Strong and tough.", "<white>Background bonus:", "<white>HP/DEF/RES +15%%, STR/MAG +5%%.", "<white>+13 to Repair/Medicine/Survival"
				set slot 17 of the player's current inventory to 1 book named "<light yellow>Inventor" with lore "<white>Inspired and forward-thinking.", "<white>Background bonus:", "<white>MAG/STR/LCK +15%%, SPD/CHR +5%%.", "<white>+13 to Fabrication/Enchanting/Speech"
				set slot 18 of the player's current inventory to 1 book named "<light yellow>Immigrant" with lore "<white>Foreigner from Elrid.", "<white>Background bonus:", "<white>STR/SPD/LCK +15%%, DEF/CHR +5%%.", "<white>+13 to Guns/Fabrication/Survival"
				set slot 19 of the player's current inventory to 1 book named "<light yellow>Farmer" with lore "<white>Keeper of the land.", "<white>Background bonus:", "<white>STR/DEF/RES +15%%, MAG/HP +5%%.", "<white>+13 to Medicine/Barter/Traditional Weapons"
				set slot 20 of the player's current inventory to 1 book named "<light yellow>Researcher" with lore "<white>Seeker of knowledge.", "<white>Background bonus:", "<white>MAG/LCK/RES +15%%, CHR/HP +5%%.", "<white>+13 to Enchanting/Magical Weapons/Guns"
				set slot 21 of the player's current inventory to 1 book named "<light yellow>Weaponmaster" with lore "<white>Skilled with all manner of combat.", "<white>Background bonus:", "<white>STR/MAG/LCK +15%%, DEF/RES +5%%.", "<white>+13 to Traditional Weapons/Magical Weapons/Guns"
			else:
				set slot 1 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>As a Dragonborn, you have a unique set of Backgrounds to select.", "<white>Your chosen Clan grants you a unique draconic state to transform into during combat.", "<white>While transformed, you gain flight and increased healing."
				set slot 9 of the player's current inventory to 1 book named "<light yellow>Windcaller" with lore "<white>Ace fliers, but fragile.", "<white>Background bonus:", "<white>HP/SPD +20%%, STR/MAG +10%%.", "<white>+13 to Traditional Weapons/Magical Weapons/Enchanting", "<gold>[Wind Dragon]: <white>Grants SPD/LCK +14, STR/MAG +6 while transformed."
				set slot 10 of the player's current inventory to 1 book named "<light yellow>Firestorm" with lore "<white>Hardened warriors, good with metalworking.", "<white>Background bonus:", "<white>STR/MAG +20%%, SPD/LCK +10%%.", "<white>+13 to Traditional Weapons/Magical Weapons/Fabrication", "<gold>[Flame Dragon]: <white>Grants STR/MAG +14, SPD/LCK +6 while transformed."
				set slot 11 of the player's current inventory to 1 book named "<light yellow>Waterflow" with lore "<white>Carefree and peaceful, tend to avoid fighting.", "<white>Background bonus:", "<white>HP/DEF +20%%, RES/LCK +10%%.", "<white>+13 to Repair/Medicine/Survival", "<gold>[Water Dragon]: <white>Grants DEF/RES +14, SPD/LCK +6 while transformed."
			set slot 31 of the player's current inventory to 1 ghast tear named "<light yellow>Select Holy Blood" with lore "<white>The blood of one of the ancients who settled Silgrund.", "<white>Those posessing Holy Blood gain a respectable boost", "<white>to that bloodline's specific stats and growths."
			#set slot 40 of the player's current inventory to 1 redstone dust named "<light yellow>Select Major Holy Blood" with lore "<white>The blood of one of the ancients who settled Silgrund.", "<white>Those posessing major Holy Blood gain an extreme boost", "<white>to that bloodline's specific stats and growths."
		#Pg 2: Stats Adjustor
		else if arg 1 is 2:
			#Add Points Buttons - Row 1
			set slot 0 of the player's current inventory to green wool named "<green><bold>Increase Vitality" with lore "<white>Click to add 1 point to Vitality.", "<white>Minimum: 10 | Maximum: 20", "<white>Points Invested: %{pts_HP.%player%}%"
			set slot 1 of the player's current inventory to green wool named "<green><bold>Increase Strength" with lore "<white>Click to add 1 point to Strength.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_STR.%player%}%"
			set slot 2 of the player's current inventory to green wool named "<green><bold>Increase Defense" with lore "<white>Click to add 1 point to Defense.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_DEF.%player%}%"
			set slot 3 of the player's current inventory to green wool named "<green><bold>Increase Charm" with lore "<white>Click to add 1 point to Charm.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_CHR.%player%}%"
			set slot 4 of the player's current inventory to green wool named "<green><bold>Increase Luck" with lore "<white>Click to add 1 point to Luck.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_LCK.%player%}%"
			set slot 5 of the player's current inventory to green wool named "<green><bold>Increase Speed" with lore "<white>Click to add 1 point to Speed.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_SPD.%player%}%"
			set slot 6 of the player's current inventory to green wool named "<green><bold>Increase Magic" with lore "<white>Click to add 1 point to Magic.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_MAG.%player%}%"
			set slot 7 of the player's current inventory to green wool named "<green><bold>Increase Resistance" with lore "<white>Click to add 1 point to Resistance.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_RES.%player%}%"
			set slot 8 of the player's current inventory to 1 hopper named "<green><bold>Reset Points" with lore "<white>Clears all allocated points."
			#Stat Explanations - Row 2
			set slot 9 of the player's current inventory to 1 book named "<orange>Vitality" with lore "<white>Vitality is the amount of damage your character can take.", "<white>Every 1 point of Vitality adds 1/2 heart to your health bar.", "<white>Minimum: 10 pts | Maximum: 20 pts", "<white>Points Invested: %{pts_HP.%player%}%"
			set slot 10 of the player's current inventory to 1 book named "<orange>Strength" with lore "<white>Strength is a measure of your physical strength.", "<white>Those with higher Strength deal more damage with physical weapons like Swords.", "<white>Points Invested: %{pts_STR.%player%}%"
			set slot 11 of the player's current inventory to 1 book named "<orange>Defense" with lore "<white>Defense influences how much damage your character takes from physical attacks.", "<white>One point of Defence counteracts one point of Strength.", "<white>Points Invested: %{pts_DEF.%player%}%"
			set slot 12 of the player's current inventory to 1 book named "<orange>Charm" with lore "<white>Charm gives a bonus similar to LCK to both you and your allies while near them,", "<white>increasing the chance of critical hits and reducing the chance of critical misses.", "<white>Points Invested: %{pts_CHR.%player%}%"
			set slot 13 of the player's current inventory to 1 book named "<orange>Luck" with lore "<white>Luck plays a hand in every character's adventure.", "<white>The higher your Luck, the more consistently you trigger critical hits", "<white>and activate Special skills.", "<white>It also slightly improves every stat's growth rates.", "<white>The growth rate bonus is based on your initial Luck, and cannot be increased by levelling up.", "<white>Points Invested: %{pts_LCK.%player%}%"
			set slot 14 of the player's current inventory to 1 book named "<orange>Speed" with lore "<white>Speed can give characters an upper-hand in all aspects of their journey.", "<white>By having 5 more Speed than your opponent, you attack twice for double damage during combat.", "<white>Points Invested: %{pts_SPD.%player%}%"
			set slot 15 of the player's current inventory to 1 book named "<orange>Magic" with lore "<white>Magic is a character's attunement with their latent magical talents.", "<white>High Magic influences the effects of certain consumables and abilities.", "<white>Magical attacks use this stat rather than Strength to determine damage.", "<white>Points Invested: %{pts_MAG.%player%}%"
			set slot 16 of the player's current inventory to 1 book named "<orange>Resistance" with lore "<white>Resistance is how resillent a character is to magical damage.", "<white>Characters with high Resistance can more easily shrug off magical damage.", "<white>Points Invested: %{pts_RES.%player%}%"
			set slot 17 of the player's current inventory to 1 diamond named "<white><bold>Points to spend:" with lore "<gold><bold>%{csetup_pointsToSpend.%player%}%"
			#Remove points buttons - Row 3
			set slot 18 of the player's current inventory to red wool named "<red><bold>Decrease Vitality" with lore "<white>Click to remove 1 point from Vitality.", "<white>Minimum: 10 | Maximum: 20", "<white>Points Invested: %{pts_HP.%player%}%"
			set slot 19 of the player's current inventory to red wool named "<red><bold>Decrease Strength" with lore "<white>Click to remove 1 point from Strength.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_STR.%player%}%"
			set slot 20 of the player's current inventory to red wool named "<red><bold>Decrease Defense" with lore "<white>Click to remove 1 point from Defense.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_DEF.%player%}%"
			set slot 21 of the player's current inventory to red wool named "<red><bold>Decrease Charm" with lore "<white>Click to remove 1 point from Charm.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_CHR.%player%}%"
			set slot 22 of the player's current inventory to red wool named "<red><bold>Decrease Luck" with lore "<white>Click to remove 1 point from Luck.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_LCK.%player%}%"
			set slot 23 of the player's current inventory to red wool named "<red><bold>Decrease Speed" with lore "<white>Click to remove 1 point from Speed.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_SPD.%player%}%"
			set slot 24 of the player's current inventory to red wool named "<red><bold>Decrease Magic" with lore "<white>Click to remove 1 point from Magic.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_MAG.%player%}%"
			set slot 25 of the player's current inventory to red wool named "<red><bold>Decrease Resistance" with lore "<white>Click to remove 1 point from Resistance.", "<white>Minimum: 1 | Maximum: 10", "<white>Points Invested: %{pts_RES.%player%}%"
			set slot 26 of the player's current inventory to 1 book named "<white>Click a stat to adjust your proficiency in it." with lore "<white>1 point increases the stat's growth rate,", "<white>grants +1.66 to the stat's maximum value,", "<white>and +1 to the stat's base amount.", "<white>Decimal values will be rounded down after allocations are complete.", "<white>Each stat must have at least 1 point.", "<white>Your class will further adjust your stats."
			#stats preview
			set slot 27 of the player's current inventory to 1 book named "<gold>Vitality" with lore "<white>Base value: %{hp.%player%}%", "<white>Maximum value: %{hpcap.%player%}%", "<white>Trait bonuses: %{hpbuff.%player%}%", "<white>Growth Rate: %{hpgrowth.%player%}%%%"
			set slot 28 of the player's current inventory to 1 book named "<gold>Strength" with lore "<white>Base value: %{str.%player%}%", "<white>Maximum value: %{strcap.%player%}%", "<white>Trait bonuses: %{strbuff.%player%}%", "<white>Growth Rate: %{strgrowth.%player%}%%%"
			set slot 32 of the player's current inventory to 1 book named "<gold>Speed" with lore "<white>Base value: %{spd.%player%}%", "<white>Maximum value: %{spdcap.%player%}%", "<white>Trait bonuses: %{spdbuff.%player%}%", "<white>Growth Rate: %{spdgrowth.%player%}%%%"
			set slot 31 of the player's current inventory to 1 book named "<gold>Luck" with lore "<white>Base value: %{lck.%player%}%", "<white>Maximum value: %{lckcap.%player%}%", "<white>Trait bonuses: %{lckbuff.%player%}%", "<white>Growth Rate: %{lckgrowth.%player%}%%%"
			set slot 30 of the player's current inventory to 1 book named "<gold>Charm" with lore "<white>Base value: %{chr.%player%}%", "<white>Maximum value: %{chrcap.%player%}%", "<white>Trait bonuses: %{chrbuff.%player%}%", "<white>Growth Rate: %{chrgrowth.%player%}%%%"
			set slot 33 of the player's current inventory to 1 book named "<gold>Magic" with lore "<white>Base value: %{mag.%player%}%", "<white>Maximum value: %{magcap.%player%}%", "<white>Trait bonuses: %{magbuff.%player%}%", "<white>Growth Rate: %{maggrowth.%player%}%%%"
			set slot 29 of the player's current inventory to 1 book named "<gold>Defense" with lore "<white>Base value: %{def.%player%}%", "<white>Maximum value: %{defcap.%player%}%", "<white>Trait bonuses: %{defbuff.%player%}%", "<white>Growth Rate: %{defgrowth.%player%}%%%"
			set slot 34 of the player's current inventory to 1 book named "<gold>Resistance" with lore "<white>Base value: %{res.%player%}%", "<white>Maximum value: %{rescap.%player%}%", "<white>Trait bonuses: %{resbuff.%player%}%", "<white>Growth Rate: %{resgrowth.%player%}%%%"
		#Pg 3: Select Proficiencies
		else if arg 1 is 3:
			#Abilities
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>This is a list of your character's Abilities.", "<white>Hover your mouse over an Ability's icon for more information on it.", "<white>You can click on an Ability's icon to mark it as Proficient.", "<white>A Proficient Ability will increase by +2 each time your character levels up.", "<white>Proficient Abilities: %{abilityProficiencies.%player%::1}%, %{abilityProficiencies.%player%::2}%"
			set slot 9 of the player's current inventory to 1 iron sword named "<light yellow>Traditional Weapons" with lore "<white>How well you can wield physical weapons.", "<white>More complex weapon skill sets require a higher Tradtional Weapons value to wield without a penalty.", "<white>This Ability affects your combat with the following weapon types:", "<white>- Swords", "<white>- Lances", "<white>- Axes", "<white>- Bows", "<white>- Daggers", "<white>- Gauntlets", "<light blue>Starting value: %{abilities.%player%::Traditional Weapons}%"
			set slot 10 of the player's current inventory to 1 book of power 1 named "<light yellow>Magical Weapons" with lore "<white>How well you can use magical weapons.", "<white>More complex magic skill sets require a higher Magical Weapons value to cast without a penalty.", "<white>This Ability affects your combat with the following weapon types:", "<white>- Wands", "<white>- Tomes", "<white>- Staves", "<light blue>Starting value: %{abilities.%player%::Magical Weapons}%"
			set slot 11 of the player's current inventory to 1 iron horse armor named "<light yellow>Guns" with lore "<white>How well you can use various firearms.", "<white>More complex gun skill sets require a higher Guns value to wield without a penalty.", "<white>This Ability affects your combat with the following weapon types:", "<white>- Pistols", "<white>- Shotguns", "<white>- Rifles", "<white>- Grenades", "<light blue>Starting value: %{abilities.%player%::Guns}%"
			set slot 12 of the player's current inventory to 1 tripwire hook named "<light yellow>Lockpicking" with lore "<white>How well you can open doors and chests without a key.", "<white>A high Lockpicking ability can open hard-to-pick doors and chests,", "<white>and also allow you to steal equipped items from foes.", "<light blue>Starting value: %{abilities.%player%::Lockpicking}%"
			set slot 13 of the player's current inventory to 1 green dye named "<light yellow>Medicine" with lore "<white>How well you can utilize various potions and medicines.", "<white>A high Medicine value increases the healing factor of potions, herbs, and healing staves.", "<white>High Medicine skill also reduces the cooldown of items.", "<light blue>Starting value: %{abilities.%player%::Medicine}%"
			set slot 14 of the player's current inventory to 1 anvil named "<light yellow>Repair" with lore "<white>How well you can maintain your equipment out on the field.", "<white>A high Repair value makes equipment lose less durability, and makes it less costly to manually repair damaged equipment.", "<light blue>Starting value: %{abilities.%player%::Repair}%"
			set slot 15 of the player's current inventory to 1 iron axe named "<light yellow>Fabrication" with lore "<white>How well you can apply skill upgrades to equipment.", "<white>By having a higher Fabrication score than the skill you want to purchase,", "<white>you can apply that skill to a weapon for no cost.", "<light blue>Starting value: %{abilities.%player%::Fabrication}%"
			set slot 16 of the player's current inventory to 1 enchanting table named "<light yellow>Enchanting" with lore "<white>How well you can apply enchantments and other magical upgrades to equipment.", "<white>Every 20 points of Enchanting grants an extra level to any", "<white>enchantment you apply to a tool/weapon at an Enchanting Table.", "<light blue>Starting value: %{abilities.%player%::Enchanting}%"
			set slot 17 of the player's current inventory to 1 emerald item named "<light yellow>Speech" with lore "<white>How well you can influence others to help you.", "<white>A high Speech skill enables extra dialouge options with NPCs", "<white>and will also unlock new items to purchase from vendors.", "<light blue>Starting value: %{abilities.%player%::Speech}%"
			set slot 18 of the player's current inventory to 1 gold ingot named "<light yellow>Barter" with lore "<white>How well you can haggle with merchants and make under-the-table deals.", "<white>The higher your Barter skill, the lower shop prices become.", "<light blue>Starting value: %{abilities.%player%::Barter}%"
			set slot 19 of the player's current inventory to 1 cooked pork named "<light yellow>Survival" with lore "<white>How well you can survive out in the field.", "<white>A high Survival skill makes hunger deplete more slowly, and can occasionally produce extra items when breaking blocks.", "<light blue>Starting value: %{abilities.%player%::Survival}%"
			#Weapon Types
			set slot 27 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>Below is the list of the different weapon types", "<white>you will encounter in Silgrund.", "<white>You can mark one as a Primary Preference,", "<white>and another as a Secondary Preference.", "<white>Primary Preferences sets your starting Weapon Rank in that", "<white>type of weapon to B,", "<white>and a Secondary Preference starts that rank at D.", "<white>Higher Weapon Ranks cause weapons of that type to deal more damage,", "<white>hit more frequently, and have lower Weapon Ability requirements.", "<light red>Primary Preference: %{primaryWeaponType.%player%}%", "<light blue>Secondary Preference: %{secondaryWeaponType.%player%}%"
			set slot 29 of the player's current inventory to 1 iron sword named "<gold>Swords" with lore "<white>A common and reliable close-range weapon.", "<white>They deal average damage and hit foes in a small radius.", "<white>Their Finishing Blow damages any foe within 7 blocks.", "<white>Ability Type: Traditional Weapons", "<white>Finishing Blow Buildup: Average", "<white>Finishing Blow Fatigue: Average"
			set slot 30 of the player's current inventory to 1 iron axe named "<gold>Axes" with lore "<white>A heavy and powerful melee weapon.", "<white>They deal very high damage to a single target.", "<white>Their Finishing Blow pierces armor.", "<white>Ability Type: Traditional Weapons", "<white>Finishing Blow Buildup: Very Fast", "<white>Finishing Blow Fatigue: Very Long"
			set slot 31 of the player's current inventory to 1 iron shovel named "<gold>Lances" with lore "<white>A weighty weapon that can be thrown at a distance.", "<white>Deals reliable damage at both close and long range.", "<white>Their Finishing Blow immobilizes foes.", "<white>Ability Type: Traditional Weapons", "<white>Finishing Blow Buildup: Fast", "<white>Finishing Blow Fatigue: Long"
			set slot 32 of the player's current inventory to 1 iron hoe named "<gold>Gauntlets" with lore "<white>A light weapon that attacks multiple times.", "<white>Not very damaging, but always attacks twice.", "<white>Their Finishing Blow restores health and hunger.", "<white>Ability Type: Traditional Weapons", "<white>Finishing Blow Buildup: Fast", "<white>Finishing Blow Fatigue: Short"
			set slot 33 of the player's current inventory to 1 arrow named "<gold>Daggers" with lore "<white>Low-damage weapons that debilitate foes.", "<white>Inflicts DEF/RES -7 on foes after combat.", "<white>Their Finishing Blow inflicts STR/SPD/DEF/RES -7 on the foe.", "<white>Ability Type: Traditional Weapons", "<white>Finishing Blow Buildup: Slow", "<white>Finishing Blow Fatigue: Very Short"
			set slot 34 of the player's current inventory to 1 bow named "<gold>Bows" with lore "<white>Long-range weapons with high damage.", "<white>Easy to use, but is ammo-hungry.", "<white>Can be used during Melee Fatigue at no penalty.", "<white>Ability Type: Traditional Weapons"
			set slot 35 of the player's current inventory to 1 blaze rod named "<gold>Wands" with lore "<white>Magical spells with various effects you can customize.", "<white>Affects the environment based on element combinations.", "<white>Can be used during Melee Fatigue at no penalty.", "<white>Ability Type: Magical Weapons"
			set slot 36 of the player's current inventory to 1 book named "<gold>Tomes" with lore "<white>High-damage spells of a single type.", "<white>They have shorter cooldowns than Wand spells.", "<white>Can be used during Melee Fatigue at no penalty.", "<white>Ability Type: Magical Weapons"
			set slot 37 of the player's current inventory to 1 wooden hoe named "<gold>Staves" with lore "<white>Non-combat staves that heal and buff allies.", "<white>Restores health of allies, among other effects.", "<white>Can be used as a weapon in an emergency.", "<white>Ability Type: Magical Weapons"
			set slot 38 of the player's current inventory to 1 iron horse armor named "<gold>Pistols" with lore "<white>Low-damage but accurate and reliable firearms.", "<white>Uses little ammuntion and reloads quickly.", "<white>Can be used during Melee Fatigue at no penalty.", "<white>Ability Type: Guns"
			set slot 39 of the player's current inventory to 1 iron horse armor named "<gold>Rifles" with lore "<white>Strong, well-rounded firearms.", "<white>Their tricky spread patterns requires training to master these powerful weapons.", "<white>Can be used during Melee Fatigue at no penalty.", "<white>Ability Type: Guns"
			set slot 40 of the player's current inventory to 1 iron horse armor named "<gold>Shotguns" with lore "<white>Devastating but inaccurate firearms.", "<white>Ammo-hungry and has a wide spread, making them most effective at point-blank.", "<white>Can be used during Melee Fatigue at no penalty.", "<white>Ability Type: Guns"
		#Pg 4: Select Traits
		else if arg 1 is 4:
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>Traits give both a positive and negative effect.", "<white>You can select a trait by clicking its entry in the menu."
			set slot 4 of the player's current inventory to 1 lava bucket named "<white>Deselect All Traits" with lore "<white>Deselects all traits and refunds points if applicable."
			if {playerdifficulty.%player%} is more than or equal to 4:
				set slot 8 of the player's current inventory to 1 chest named "<white>Traits to Select: %5 - {traitsSelected.%player%}%" with lore "<white>On difficulties above HARD, the traits you can take are limited.", "<white>You can select up to 5 traits, but some traits may cost more."
			#Generic Traits
			if {traits.%player%::All In!} is not true:
				set slot 9 of the player's current inventory to 1 redstone block named "<light red>All In!" with lore "<white>The best defense is a good offense!", "<cyan>Grants STR/MAG/SPD +5.", "<light red>Inflicts DEF/RES/HP -3."
			else:
				set slot 9 of the player's current inventory to 1 lapis block named "<light blue>All In!" with lore "<white>The best defense is a good offense!", "<cyan>Grants STR/MAG/SPD +5.", "<light red>Inflicts DEF/RES/HP -3.", "<light yellow>This Trait is active!"
			if {traits.%player%::Honorable} is not true:
				set slot 10 of the player's current inventory to 1 redstone block named "<light red>Honorable" with lore "<white>A true warrior duels with honesty.", "<cyan>Grants STR/MAG/SPD +3.", "<light red>Inflicts LCK -5. The duration of Combat Tags from your combats are doubled."
			else:
				set slot 10 of the player's current inventory to 1 lapis block named "<light blue>Honorable" with lore "<white>A true warrior duels with honesty.", "<cyan>Grants STR/MAG/SPD +3.", "<light red>Inflicts LCK -5. The duration of Combat Tags from your combats are doubled.", "<light yellow>This Trait is active!"
			if {traits.%player%::Small Frame} is not true:
				set slot 11 of the player's current inventory to 1 redstone block named "<light red>Small Frame" with lore "<white>While your unusually small body grants extra agility, things <italics>really <reset><white>hurt when they hit.", "<cyan>Grants SPD/LCK +5.", "<light red>Increases damage taken by 10%% if it exceeds 25%% of your max Vitality."
			else:
				set slot 11 of the player's current inventory to 1 lapis block named "<light blue>Small Frame" with lore "<white>While your unusually small body grants extra agility, things <italics>really <reset><white>hurt when they hit.", "<cyan>Grants SPD/LCK +5.", "<light red>Increases damage taken by 10%% if it exceeds 25%% of your max Vitality.", "<light yellow>This Trait is active!"
			if {traits.%player%::Veteran} is not true:
				set slot 12 of the player's current inventory to 1 redstone block named "<light red>Veteran" with lore "<white>While you've got years of experience under your belt, you don't have much room for improvement.", "<cyan>Grants +5 to all Stats.", "<light red>Growth Rates for all stats are reduced by -30%%, and you gain 35%% less XP from combat."
			else:
				set slot 12 of the player's current inventory to 1 lapis block named "<light blue>Veteran" with lore "<white>While you've got years of experience under your belt, you don't have much room for improvement.", "<cyan>Grants +5 to all Stats.", "<light red>Growth Rates for all stats are reduced by -30%%, and you gain 35%% less XP from combat.", "<light yellow>This Trait is active!"
			if {traits.%player%::Trainee} is not true:
				set slot 13 of the player's current inventory to 1 redstone block named "<light red>Trainee" with lore "<white>You've got plenty of room to grow, but it's going to be a bumpy ride there.", "<cyan>Grants +10 to all Stats caps.", "<cyan>Growth Rates for all stats are increased by +30%%.", "<light red>Inflicts -4 to all Stats."
			else:
				set slot 13 of the player's current inventory to 1 lapis block named "<light blue>Trainee" with lore "<white>You've got plenty of room to grow, but it's going to be a bumpy ride there.", "<cyan>Grants +10 to all Stats caps.", "<cyan>Growth Rates for all stats are increased by +30%%.", "<light red>Inflicts -4 to all Stats.", "<light yellow>This Trait is active!"
			if {traits.%player%::Perceptive} is not true:
				set slot 14 of the player's current inventory to 1 redstone block named "<light red>Perceptive" with lore "<white>You take squinting to the extreme, being able to see things others can't.", "<cyan>Foes that are not combat-tagged can be seen through walls.", "<cyan>You automatically gain Night Vision when needed.", "<light red>Inflicts SPD -4. Foes that are not combat-tagged deal 25%% more damage."
			else:
				set slot 14 of the player's current inventory to 1 lapis block named "<light blue>Perceptive" with lore "<white>You take squinting to the extreme, being able to see things others can't.", "<cyan>Foes that are not combat-tagged can be seen through walls.", "<cyan>You automatically gain Night Vision when needed.", "<light red>Inflicts SPD -4. Foes that are not combat-tagged deal 25%% more damage.", "<light yellow>This Trait is active!"
			if {traits.%player%::Old Fashioned} is not true:
				set slot 15 of the player's current inventory to 1 redstone block named "<light red>Old Fashioned" with lore "<white>If it ain't broke, don't fix it.", "<cyan>Grants STR/DEF +3.", "<cyan>Grants +13 to Traditional Weapons.", "<light red>Inflicts MAG -5.", "<light red>Lowers Magical Weapons and Guns by -7."
			else:
				set slot 15 of the player's current inventory to 1 lapis block named "<light blue>Old Fashioned" with lore "<white>If it ain't broke, don't fix it.", "<cyan>Grants STR/DEF +3.", "<cyan>Grants +13 to Traditional Weapons.", "<light red>Inflicts MAG -5.", "<light red>Lowers Magical Weapons and Guns by -7.", "<light yellow>This Trait is active!"
			if {traits.%player%::Economical} is not true:
				set slot 16 of the player's current inventory to 1 redstone block named "<light red>Economical" with lore "<white>You're always able to haggle a good deal, to the frustration of everyone else.", "<white>Grants CHA +5.", "<cyan>Grants +20 to Barter.", "<light red>Inflicts Speech -25."
			else:
				set slot 16 of the player's current inventory to 1 lapis block named "<light blue>Economical" with lore "<white>You're always able to haggle a good deal, to the frustration of everyone else.", "<cyan>Grants CHA +5.", "<cyan>Grants +20 to Barter.", "<light red>Inflicts Speech -25.", "<light yellow>This Trait is active!"
			if {traits.%player%::Kaga's Teachings} is not true:
				set slot 17 of the player's current inventory to 1 redstone block named "<light red>Kaga's Teachings" with lore "<white>Wise master Kaga taught you everything about evasion... at least, that's what the syllabus said.", "<cyan>If a foe can Critically Miss, raises their Critical Miss chance by +20%%.", "<light red>If you can Critically Miss, raises your Critical Miss chance by 35%%."
			else:
				set slot 17 of the player's current inventory to 1 lapis block named "<light blue>Kaga's Teachings" with lore "<white>Wise master Kaga taught you everything about evasion... at least, that's what the syllabus said.", "<cyan>If a foe can Critically Miss, raises their Critical Miss chance by +20%%.", "<light red>If you can Critically Miss, raises your Critical Miss chance by 35%%.", "<light yellow>This Trait is active!"
			if {traits.%player%::Good Natured} is not true:
				set slot 18 of the player's current inventory to 1 redstone block named "<light red>Good Natured" with lore "<white>Conflict just isn't in your nature.", "<cyan>Grants CHA +5.", "<cyan>Grants Speech, Barter and Medicine +20.", "<light red>Inflicts STR/MAG -4.", "<light red>Lowers Traditional Weapons/Magical Weapons/Guns by -7."
			else:
				set slot 18 of the player's current inventory to 1 lapis block named "<light blue>Good Natured" with lore "<white>Conflict just isn't in your nature.", "<cyan>Grants CHA +5.", "<cyan>Grants Speech, Barter and Medicine +20.", "<light red>Inflicts STR/MAG -4.", "<light red>Lowers Traditional Weapons/Magical Weapons/Guns by -7.", "<light yellow>This Trait is active!"
			if {traits.%player%::Kamikaze} is not true:
				set slot 19 of the player's current inventory to 1 redstone block named "<light red>Kamikaze" with lore "<white>By ignoring the danger around you, you can summon more strength than normal.", "<cyan>Grants bonus damage equal to 50%% of health missing.", "<light red>Inflicts DEF/RES -5", "<light red>Lowers Medicine and Survival by -7."
			else:
				set slot 19 of the player's current inventory to 1 lapis block named "<light blue>Kamikaze" with lore "<white>By ignoring the danger around you, you can summon more strength than normal.", "<cyan>Grants bonus damage equal to 50%% of health missing.", "<light red>Inflicts DEF/RES -5", "<light red>Lowers Medicine and Survival by -7.", "<light yellow>This Trait is active!"
			if {traits.%player%::Skilled} is not true:
				set slot 20 of the player's current inventory to 1 redstone block named "<light red>Skilled" with lore "<white>You're skilled, but not experienced.", "<cyan>You gain +20 to every Ability.", "<light red>You only gain 1 ability point when levelling up."
			else:
				set slot 20 of the player's current inventory to 1 lapis block named "<light blue>Skilled" with lore "<white>You're skilled, but not experienced.", "<cyan>You gain +20 to every Ability.", "<light red>You only gain 1 ability point when levelling up.", "<light yellow>This Trait is active!"
			if {traits.%player%::Strong-Armed} is not true:
				set slot 21 of the player's current inventory to 1 redstone block named "<light red>Strong-Armed" with lore "<white>You hit like a giant and have the finesse of a blind rat.", "<cyan>Grants STR/DEF +4, HP +2.", "<light red>Inflicts Tradtional Weapons/Magical Weapons/Guns/Speech -7."
			else:
				set slot 21 of the player's current inventory to 1 lapis block named "<light blue>Strong-Armed" with lore "<white>You hit like a giant and have the finesse of a blind rat.", "<cyan>Grants STR/DEF +4, HP +2.", "<light red>Inflicts Tradtional Weapons/Magical Weapons/Guns/Speech -7.", "<light yellow>This Trait is active!"
			if {traits.%player%::Protective} is not true:
				set slot 22 of the player's current inventory to 1 redstone block named "<light red>Protective" with lore "<white>The well-being of your friends always takes priority.", "<cyan>Reduces damage taken for all allies within 30 blocks by 20%%.", "<cyan>Using a healing item for yourself or on an ally restores 50%% more health.", "<light red>Inflicts STR/MAG -6.", "<light red>Lowers Traditional Weapons/Magical Weapons/Guns by -7."
			else:
				set slot 22 of the player's current inventory to 1 lapis block named "<light blue>Protective" with lore "<white>The well-being of your friends always takes priority.", "<cyan>Reduces damage taken for all allies within 30 blocks by 20%%.", "<cyan>Using a healing item for yourself or on an ally restores 50%% more health.", "<light red>Inflicts STR/MAG -6.", "<light red>Lowers Traditional Weapons/Magical Weapons/Guns by -7.", "<light yellow>This Trait is active!"
			if {traits.%player%::Level-Headed} is not true:
				set slot 23 of the player's current inventory to 1 redstone block named "<light red>Level-Headed" with lore "<white>You're a natural at staying cool during a fight.", "<light purple>Your combat performance is unaffected by Morale,", "<light purple>giving you lower but consistent hit rates and critical chance."
			else:
				set slot 23 of the player's current inventory to 1 lapis block named "<light blue>Level-Headed" with lore "<white>You're a natural at staying cool during a fight.", "<light purple>Your combat performance is unaffected by Morale.", "<light purple>giving you lower but consistent hit rates and critical chance.", "<light yellow>This Trait is active!"
			if {traits.%player%::Fast Learner} is not true:
				set slot 24 of the player's current inventory to 1 redstone block named "<light red>Fast Learner" with lore "<white>You're able to pick up new skills quickly, but it's too easy to spread yourself thin.", "<cyan>Gain double ability points when you level up.", "<light red>Proficient abilities only increase by +1, and only increase every 2 levels."
			else:
				set slot 24 of the player's current inventory to 1 lapis block named "<light blue>Fast Learner" with lore "<white>You're able to pick up new skills quickly, but it's easy to spread yourself thin.", "<cyan>Gain double ability points when you level up.", "<light red>Proficient abilities only increase by +1 on level-up.", "<light yellow>This Trait is active!"
			if {traits.%player%::Loose Cannon} is not true:
				set slot 25 of the player's current inventory to 1 redstone block named "<light red>Loose Cannon" with lore "<white>Just keep swinging, surely it'll kill eventually.", "<light purple>Halves the amount weapons add to the Combo Meter."
			else:
				set slot 25 of the player's current inventory to 1 lapis block named "<light blue>Loose Cannon" with lore "<white>Just keep swinging, surely it'll kill eventually.", "<light purple>Halves the amount weapons add to the Combo Meter.", "<light yellow>This Trait is active!"
			if {traits.%player%::Power Player} is not true:
				set slot 26 of the player's current inventory to 1 redstone block named "<light red>Power Player" with lore "<white>Somehow, the universe won't let anyone get away from you unscathed... even yourself!", "<light purple>You and your enemies can never deal 0 damage during combat."
			else:
				set slot 26 of the player's current inventory to 1 lapis block named "<light blue>Power Player" with lore "<white>Somehow, the universe won't let anyone get away from you unscathed... even yourself!", "<light purple>You and your enemies can never deal 0 damage during combat.", "<light yellow>This Trait is active!"
			if {traits.%player%::Hot-Blooded} is not true:
				set slot 27 of the player's current inventory to 1 redstone block named "<light red>Hot-Blooded" with lore "<white>You kick into overdrive when backed into a corner. Nobody said you'd make it out, though!", "<cyan>Gain STR/MAG/LCK +7 when HP <= 70%% during combat.", "<light red>Inflicts DEF/RES -7 when HP <= 70%% during combat."
			else:
				set slot 27 of the player's current inventory to 1 lapis block named "<light blue>Hot-Blooded" with lore "<white>You kick into overdrive when backed into a corner. Nobody said you'd make it out, though!", "<cyan>Gain STR/SPD/LCK +7 when HP <= 70%% during combat.", "<light red>Inflicts DEF/RES -7 when HP <= 70%% during combat.", "<light yellow>This Trait is active!"
			if {traits.%player%::Built to Destroy} is not true:
				set slot 28 of the player's current inventory to 1 redstone block named "<light red>Built to Destroy" with lore "<white>The pickaxe that mines twice as fast lasts half as long.", "<cyan>Permanently grants Strength/Haste 2.", "<light red>Tools have a 50%% chance to lose 1 extra durability when damaged."
			else:
				set slot 28 of the player's current inventory to 1 lapis block named "<light blue>Built to Destroy" with lore "<white>The pickaxe that mines twice as fast lasts half as long.", "<cyan>Permanently grants Strength/Haste 2.", "<light red>Tools have a 25%% chance to lose 1 extra durability when damaged.", "<light yellow>This Trait is active!"
			if {traits.%player%::Heavy Handed} is not true:
				set slot 29 of the player's current inventory to 1 redstone block named "<light red>Heavy Handed" with lore "<white>You've got a weapon, why not swing it as hard as you can?", "<light purple>Weapons will always trigger a Finishing Blow."
			else:
				set slot 29 of the player's current inventory to 1 lapis block named "<light blue>Heavy Handed" with lore "<white>You've got a weapon, why not swing it as hard as you can?", "<light purple>Weapons will always trigger a Finishing Blow.", "<light yellow>This Trait is active!"
			if {traits.%player%::Arrgh!} is not true:
				set slot 30 of the player's current inventory to 1 redstone block named "<light red>Arrgh!" with lore "<white>Cleave him to the brisket and claim all his booty!", "<cyan>Grants 2x gold from combat, and grants a 25%% chance for enemies to drop gunpowder.", "<light red>Doubles the gold lost on death."
			else:
				set slot 30 of the player's current inventory to 1 lapis block named "<light blue>Arrgh!" with lore "<white>Cleave him to the brisket and claim all his booty!", "<cyan>Grants 2x gold from combat, and grants a 25%% chance for enemies to drop gunpowder.", "<light red>Doubles the gold lost on death.", "<light yellow>This Trait is active!"
			if {traits.%player%::Bruiser} is not true:
				set slot 31 of the player's current inventory to 1 redstone block named "<light red>Bruiser" with lore "<white>A little bigger, but a little slower.", "<cyan>Grants STR/MAG/DEF/RES +4.", "<light red>Inflicts SPD/CHR -5."
			else:
				set slot 31 of the player's current inventory to 1 lapis block named "<light blue>Bruiser" with lore "<white>A little bigger, but a little slower.", "<cyan>Grants STR/MAG/DEF/RES +4.", "<light red>Inflicts SPD/CHR -5.", "<light yellow>This Trait is active!"
			if {traits.%player%::Forest Dweller} is not true:
				set slot 32 of the player's current inventory to 1 redstone block named "<light red>Forest Dweller" with lore "<white>The trees call out to you with their magical secrets... or you've just gone plain crazy.", "<cyan>Grants MAG/RES +3.", "<cyan>Grants +13 to Magical Weapons.", "<light red>Inflicts STR -5.", "<light red>Lowers Traditional Weapons and Guns by -7."
			else:
				set slot 32 of the player's current inventory to 1 lapis block named "<light blue>Forest Dweller" with lore "<white>The trees call out to you with their magical secrets... or you've just gone plain crazy.", "<cyan>Grants MAG/RES +3.", "<cyan>Grants +13 to Magical Weapons.", "<light red>Inflicts STR -5.", "<light red>Lowers Traditional Weapons and Guns by -7.", "<light yellow>This Trait is active!"
			if {traits.%player%::Gifted} is not true:
				set slot 33 of the player's current inventory to 1 redstone block named "<light red>Gifted" with lore "<white>You've been blessed with great innate talents, so why bother learning anything else?", "<cyan>Grants 4 extra points to spend on your Base Stats.", "<light red>Halves the number of Ability Points earned on level-up.", "<light red>Proficient abilities will not increase on level-up.", "<light purple>Your points will automatically reset when taking this trait."
			else:
				set slot 33 of the player's current inventory to 1 lapis block named "<light blue>Gifted" with lore "<white>You've been blessed with great innate talents, so why bother learning anything else?", "<cyan>Grants 4 extra points to spend on your Base Stats.", "<light red>Halves the number of Ability Points earned on level-up.", "<light red>Proficient abilities will not increase on level-up.", "<light purple>Your points will automatically reset when taking this trait.", "<light yellow>This Trait is active!"
			if {traits.%player%::Underdog} is not true:
				set slot 34 of the player's current inventory to 1 redstone block named "<light red>Underdog" with lore "<white>You've always been the runt of the litter. and you won't let that stop you!", "<cyan>Boosts damage by 30%% when fighting monsters of a higher level than you.", "<light red>Take 30%% more damage from monsters of a lower level than you."
			else:
				set slot 34 of the player's current inventory to 1 lapis block named "<light blue>Underdog" with lore "<white>You've always been the runt of the litter, and you won't let that stop you!", "<cyan>Boosts damage by 30%% when fighting monsters of a higher level than you.", "<light red>Take 30%% more damage from monsters of a lower level than you.", "<light yellow>This Trait is active!"
			if {traits.%player%::Veganist} is not true:
				set slot 35 of the player's current inventory to 1 redstone block named "<light red>Veganist" with lore "<white>You hold animals sacred, and thus only consume plants.", "<cyan>Plant-based foods restore 2 extra points of hunger.", "<cyan>Harvested crops drop more items.", "<light red>Consuming meats inflicts damage = hunger restored.", "<light red>Killing any animal inflicts Weakness 4 for 2 minutes."
			else:
				set slot 35 of the player's current inventory to 1 lapis block named "<light blue>Veganist" with lore "<white>You hold animals sacred, and thus only consume plants.", "<cyan>Plant-based foods restore 2 extra points of hunger.", "<cyan>Harvested crops drop more items.", "<light red>Consuming meats inflicts damage = hunger restored.", "<light red>Killing any animal inflicts Weakness 4 for 2 minutes.", "<light yellow>This Trait is active!"
			if {traits.%player%::Way of the Warrior} is not true:
				set slot 36 of the player's current inventory to 1 redstone block named "<light red>Way of the Warrior" with lore "<white>There's just one thing you know for real: You've got a sick sword!", "<cyan>Pierce enemy armor and regain health on-kill when using a sword.", "<cyan>Your Swords weapon rank begins at <gold>SS<cyan>.", "<light red>No other weapon types can be equipped.", "<light red>Consumable items (such as Herbs) cannot be used manually."
			else:
				set slot 36 of the player's current inventory to 1 lapis block named "<light blue>Way of the Warrior" with lore "<white>There's just one thing you know for real: You've got a sick sword!", "<cyan>Pierce enemy armor and regain health on-kill when using a sword.", "<cyan>Your Swords weapon rank begins at <gold>SS<cyan>.", "<light red>No other weapon types can be equipped.", "<light red>Consumable items (such as Herbs) cannot be used manually.", "<light yellow>This Trait is active!"
			if {traits.%player%::Always Prepared} is not true:
				set slot 37 of the player's current inventory to 1 redstone block named "<light red>Always Prepared" with lore "<white>Never leave home without water, food, and a giant knife.", "<cyan>Switching weapons grants Strength 2 for 2 seconds.", "<cyan>Daggers gain a 50%% chance to not lose durability when thrown.", "<cyan>Killing an animal drops extra items.", "<light red>Inflicts Slowness 2. You ARE carrying a lot of stuff!"
			else:
				set slot 37 of the player's current inventory to 1 lapis block named "<light blue>Always Prepared" with lore "<white>Never leave home without water, food, and a giant knife.", "<cyan>Switching weapons grants Strength 2 for 2 seconds.", "<cyan>Daggers gain a 50%% chance to not lose durability when thrown.", "<cyan>Killing an animal drops extra items.", "<light red>Inflicts Slowness 2. You ARE carrying a lot of stuff!", "<light yellow>This Trait is active!"
			if {traits.%player%::Honest Heart} is not true:
				set slot 38 of the player's current inventory to 1 redstone block named "<light red>Honest Heart" with lore "<white>It's a sin to tell a lie, after all.", "<cyan>Grants Speech/Barter +20.", "<cyan>Standard attacks deal +5 damage.", "<light red>Critical hits cannot be performed."
			else:
				set slot 38 of the player's current inventory to 1 lapis block named "<light blue>Honest Heart" with lore "<white>It's a sin to tell a lie, after all.", "<cyan>Grants Speech/Barter +20.", "<cyan>Standard attacks deal +5 damage.", "<light red>Critical hits cannot be performed.", "<light yellow>This Trait is active!"
			if {traits.%player%::Bloody Mess} is not true:
				set slot 39 of the player's current inventory to 1 redstone block named "<light red>Bloody Mess" with lore "<white>A particularly nasty curse ensures you always see everyone's worst death.", "<cyan>Increases Critical Hit chance by +20%%.", "<light red>Enemy Critical Hit chance increased by +20%%.", "<light purple>Anything you kill explodes into a red mist."
			else:
				set slot 39 of the player's current inventory to 1 lapis block named "<light blue>Bloody Mess" with lore "<white>A particularly nasty curse ensures you always see everyone's worst death.", "<cyan>Increases Critical Hit chance by +20%%.", "<light red>Enemy Critical Hit chance increased by +20%%.", "<light purple>Anything you kill explodes into a red mist.", "<light yellow>This Trait is active!"
			if {traits.%player%::Hoarder} is not true:
				set slot 40 of the player's current inventory to 1 redstone block named "<light red>Hoarder" with lore "<white>Hey, it could be useful... eventually.", "<cyan>Start with a Portable Banker in your inventory.", "<cyan>Gain bonus gold equal to 10%% of your current gold at the start of every day.", "<light red>Inflicts [Spectrum -5] if current gold <= 100 during combat.", "<light red>Lose a random number of items on-death."
			else:
				set slot 40 of the player's current inventory to 1 lapis block named "<light blue>Hoarder" with lore "<white>Hey, it could be useful... eventually.", "<cyan>Start with a Portable Banker in your inventory.", "<cyan>Gain bonus gold equal to 10%% of your current gold at the start of every day.", "<light red>Inflicts [Spectrum -5] if current gold <= 100 during combat.", "<light red>Lose a random number of items on-death.", "<light yellow>This Trait is active!"
			if {traits.%player%::Blade Sponge} is not true:
				set slot 41 of the player's current inventory to 1 redstone block named "<light red>Blade Sponge" with lore "<white>You soak blows well, but if something pierces...", "<cyan>Grants Regeneration 2.", "<light red>Halves the Bleedout timer."
			else:
				set slot 41 of the player's current inventory to 1 lapis block named "<light blue>Blade Sponge" with lore "<white>You soak blows well, but if something pierces...", "<cyan>Grants Regeneration 2.", "<light red>Halves the Bleedout timer.", "<light yellow>This Trait is active!"
			if {traits.%player%::Claustrophobic} is not true:
				set slot 42 of the player's current inventory to 1 redstone block named "<light red>Claustrophobic" with lore "<white>You need plenty of open space to function.", "<cyan>Grants [Spectrum +4] if there are no allies or enemies within 7 blocks.", "<light red>Inflicts [Spectrum -4] if bonus is not granted."
			else:
				set slot 42 of the player's current inventory to 1 lapis block named "<light blue>Claustrophobic" with lore "<white>You need plenty of open space to function.", "<cyan>Grants [Spectrum +4] if there are no allies or enemies within 7 blocks.", "<light red>Inflicts [Spectrum -4] if bonus is not granted.", "<light yellow>This Trait is active!"
			if {traits.%player%::Physician} is not true:
				set slot 43 of the player's current inventory to 1 redstone block named "<light red>Physician" with lore "<white>You've got a knack for medicine.", "<cyan>Grants Medicine/Speech +20.", "<cyan>Reduces consumable item cooldowns by 2x.", "<light red>Purchasing items is 20%% more expensive. You know how to make these!"
			else:
				set slot 43 of the player's current inventory to 1 lapis block named "<light blue>Physician" with lore "<white>You've got a knack for medicine.", "<cyan>Grants Medicine/Speech +20.", "<cyan>Reduces consumable item cooldowns by 2x.", "<light red>Purchasing items is 20%% more expensive. You know how to make these!", "<light yellow>This Trait is active!"
			#Race-Specific Traits
			if {race.%player%} is "Human":
				if {traits.%player%::Jack of all Trades} is not true:
					set slot 44 of the player's current inventory to 1 redstone block named "<light red>Jack of all Trades" with lore "<white>You've got the potential to become anything, except for the best at one thing.", "<light purple>The caps for all of your Stats becomes the average of your current Stats caps."
				else:
					set slot 44 of the player's current inventory to 1 lapis block named "<light blue>Jack of all Trades" with lore "<white>You've got the potential to become anything, except for the best at one thing.", "<light purple>The caps for all of your Stats becomes the average of your current Stats caps.", "<light yellow>This Trait is active!"
			else if {race.%player%} is "Dragonborn":
				if {traits.%player%::Divine Bloodline} is not true:
					set slot 44 of the player's current inventory to 1 redstone block named "<light red>Divine Bloodline" with lore "<white>You are one of the fortunate descendants of your bloodline.", "<cyan>You can select one additional Minor Holy Blood.", "<light red>The drawbacks still apply."
				else:
					set slot 44 of the player's current inventory to 1 lapis block named "<light blue>Divine Bloodline" with lore "<white>You are one of the fortunate descendants of your bloodline.", "<cyan>You can select one additional Minor Holy Blood.", "<light red>The drawbacks still apply.", "<light yellow>This Trait is active!"
			else if {race.%player%} is "Elf":
				if {traits.%player%::Spellscribe} is not true:
					set slot 44 of the player's current inventory to 1 redstone block named "<light red>Spellscribe" with lore "<white>You've dedicated your life to the arcane arts.", "<cyan>Grants MAG/RES +5.", "<cyan>Grants Magical Weapons/Enchanting by +13.", "<light red>Inflicts STR/DEF -5.", "<light red>Lowers Traditional Weapons/Guns by -13."
				else:
					set slot 44 of the player's current inventory to 1 lapis block named "<light blue>Spellscribe" with lore "<white>You've dedicated your life to the arcane arts.", "<cyan>Grants MAG/RES +5.", "<cyan>Grants Magical Weapons/Enchanting by +13.", "<light red>Inflicts STR/DEF -5.", "<light red>Lowers Traditional Weapons/Guns by -13.", "<light yellow>This Trait is active!"
			else if {race.%player%} is "Dwarf":
				if {traits.%player%::Tinkerer} is not true:
					set slot 44 of the player's current inventory to 1 redstone block named "<light red>Tinkerer" with lore "<white>You're great at inventing new things, but it's hard to justify sharing with others.", "<cyan>Grants STR/DEF +2.", "<cyan>Grants Repair/Fabrication/Traditional Weapons/Guns +10.", "<light red>Inflicts SPD/CHA -5.", "<light red>Lowers Barter by -10."
				else:
					set slot 44 of the player's current inventory to 1 lapis block named "<light blue>Tinkerer" with lore "<white>You're great at inventing new things, but it's hard to justify sharing with others.", "<cyan>Grants STR/DEF +2.", "<cyan>Grants Repair/Fabrication/Traditional Weapons/Guns +10.", "<light red>Inflicts SPD/CHA -5.", "<light red>Lowers Barter by -10.", "<light yellow>This Trait is active!"
			else if {race.%player%} is "Orc":
				if {traits.%player%::Heavy-Hitter} is not true:
					set slot 44 of the player's current inventory to 1 redstone block named "<light red>Heavy-Hitter" with lore "<white>You place all your effort into your first swing, but it leaves you exhausted on the follow-up.", "<cyan>Boosts damage against non-Combat Tagged opponents by 15%%.", "<light red>Reduces damage against Combat Tagged opponents by 15%%."
				else:
					set slot 44 of the player's current inventory to 1 lapis block named "<light blue>Heavy-Hitter" with lore "<white>You place all your effort into your first swing, but it leaves you exhausted on the follow-up.", "<cyan>Boosts damage against non-Combat Tagged opponents by 15%%.", "<light red>Reduces damage against Combat Tagged opponents by 15%%.", "<light yellow>This Trait is active!"
			else if {customRaceTrait.%player%} is not set:
				set slot 44 of the player's current inventory to 1 obsidian named "<red>No race Trait selected." with lore "<white>Select a race-specific Trait to use from the Custom Race menu."
		#Page 5 - Select Difficulty
		else if arg 1 is 5:
			set slot 0 of the player's current inventory to 1 book named "<gold>Difficulty Modes" with lore "<white>Change how difficult your character's journey will be.", "<white>This will tweak damage dealt,", "<white>and how aggressively monsters level-up their stats.", "<light red>NOTE: Difficulties above HARD force the", "<light red>Item Loss setting to ON.", "<white>Difficulty determine how much EXP and Gold you earn from combat."
			set slot 1 of the player's current inventory to 1 wooden sword named "<light green>Relaxed" with lore "<white>A laid-back mode for casual play.", "<white><bold>Damage dealt increased by 1.5x.", "<white><bold>Damage received reduced by 0.5x."
			set slot 2 of the player's current inventory to 1 stone sword named "<light gray>Normal" with lore "<white>The default difficulty. Not too challenging, but not a cakewalk either."
			set slot 3 of the player's current inventory to 1 iron sword named "<gray>Hard" with lore "<white>Recommended for players familiar with CoS.", "<white><bold>Damage received increased by 25%%.", "<gold>Bonus EXP and Gold will be earned!"
			set slot 4 of the player's current inventory to 1 gold sword named "<red>Lunatic" with lore "<white>Recommended for players who enjoy a challenge.", "<white><bold>Damage dealt decreased by 25%%.", "<white><bold>Damage received increased by 25%%.", "<gold>Bonus EXP and Gold will be earned!"
			set slot 5 of the player's current inventory to 1 diamond sword named "<purple>Infernal" with lore "<white>Players seeking a strong tactical challenge will enjoy this mode.", "<white><bold>Damage dealt decreased by 50%%.", "<white><bold>Damage received increased by 50%%.", "<gold>Bonus EXP and Gold will be earned!"
			set slot 6 of the player's current inventory to 1 diamond sword of sharpness 1 named "<blue>Abyssal" with lore "<white>Recommended only for veterans of CoS Legacy.", "<white><bold>Damage dealt decreased by 50%%.", "<white><bold>Damage recieved increased to 2.0x.", "<gold>Bonus EXP and Gold will be earned!"
			set slot 7 of the player's current inventory to 1 gold sword of fortune 3 named "<light yellow>Critical" with lore "<white>A thrilling mode where friend and foe alike deal increased damage.", "<white><bold>Damage dealt increased by 50%%.", "<white><bold>Damage recieved increased to 2.0x.", "<gold>Bonus EXP and Gold will be earned!"
			set slot 8 of the player's current inventory to 1 diamond sword of sharpness 5 named "<gold>Legendary" with lore "<white>Only the strongest will survive this life-or-death mode!", "<white><bold>Damage dealt decreased by 50%%.", "<white><bold>Damage recieved increased to 2.25x.", "<gold>Bonus EXP and Gold will be earned!"
			if {hasClearedCampaign.%player%} is true:
				set slot 9 of the player's current inventory to 1 gold sword of sharpness 10 named "<gold>%player's tablist name% Must Die" with lore "<white>A true challenge for only the best of the best.", "<white><bold>Damage dealt decreased by 50%%.", "<white><bold>Damage recieved increased to 3.0x.", "<gold>Bonus EXP and Gold will be earned!"
		#Page 6 - Select Class
		else if arg 1 is 6:
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>Your chosen Class further influences your Stats and their caps.", "<white>Each class also comes with unique Perks unlocked by leveling up."
			set slot 8 of the player's current inventory to 1 emerald block named "<white>View Class Perks" with lore "<white>Check the perks you can unlock from each class."
			#physical/magical divider
			set slot 4 of the player's current inventory to 1 blaze rod named "<white>Physical/Magical" with lore "<white>Classes to the left of this divider use physical damage,", "<white>while classes to the right use magical damage.", "<while>While it is possible to use either damage type on any class,", "<white>it is ideal to use the damage type that a class is best at."
			#set slot 13 of the player's current inventory to 1 blaze rod
			set slot 22 of the player's current inventory to 1 blaze rod
			#set slot 31 of the player's current inventory to 1 blaze rod
			#set slot 40 of the player's current inventory to 1 blaze rod
			#Classes
			set slot 13 of the player's current inventory to 1 iron sword named "<white>Basic Classes" with lore "<white>Simple and easy to pick up and play.", "<white>These classes have straightforward statlines and easy-to-activate perk conditions.", "<white>Great for learning the ins and outs of effective character building."
			#Basic Classes
			#physical
			set slot 9 of the player's current inventory to 1 nether star named "<gold>Mercenary" with lore "<white>Strong warriors with a balanced stat spread.", "<cyan>Strengths: None", "<light red>Weaknesses: None", "<cyan>This class naturally learns spells."
			set slot 10 of the player's current inventory to 1 nether star named "<gold>Knight" with lore "<white>Slow but sturdy fighters with extreme physical defense.", "<cyan>Strengths: HP, DEF", "<light red>Weaknesses: SPD, RES, MAG"
			set slot 11 of the player's current inventory to 1 nether star named "<gold>Fighter" with lore "<white>Focused on physical damage and defense, they have devastating blows.", "<cyan>Strengths: HP, STR", "<light red>Weaknesses: LCK, SPD"
			set slot 12 of the player's current inventory to 1 nether star named "<gold>Archer" with lore "<white>Average fighters with a focus on ranged, single-target elimination.", "<cyan>Strengths: STR, DEF", "<light red>Weaknesses: HP, LCK"
			set slot 18 of the player's current inventory to 1 nether star named "<gold>Cavalier" with lore "<white>A well-balanced class that specializes in mounted combat.", "<cyan>Strengths: LCK", "<light red>Weaknesses: HP"
			set slot 19 of the player's current inventory to 1 nether star named "<gold>Trickster" with lore "<white>Slippery thieves that can pick locks and sabotage foes.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, STR"
			#magical
			set slot 14 of the player's current inventory to 1 nether star named "<gold>Mage" with lore "<white>Magic wielders utilizing various wands and tomes for combat.", "<cyan>Strengths: MAG, SPD", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
			set slot 15 of the player's current inventory to 1 nether star named "<gold>Conjurer" with lore "<white>Dark mages who use their own health for stronger attacks.", "<cyan>Strengths: MAG, RES, HP", "<light red>Weaknesses: SPD, CHR, LCK", "<cyan>This class naturally learns spells."
			set slot 16 of the player's current inventory to 1 nether star named "<gold>Keeper" with lore "<white>Armored mage with strong defences but poor physical strength.", "<cyan>Strengths: DEF, RES, MAG", "<light red>Weaknesses: SPD, STR, CHR", "<cyan>This class naturally learns spells."
			#Advanced Classes
			set slot 31 of the player's current inventory to 1 diamond sword named "<white>Advanced Classes" with lore "<white>More specialized classes with harder to use perks and stat lines.", "<white>While they are more difficult to build effectively,", "<white>Advanced Classes can utilize more unique abilities."
			#phys
			set slot 27 of the player's current inventory to 1 nether star named "<gold>Bladesman" with lore "<white>Quick-footed warriors that prioritize speed above all else.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: DEF, RES, HP"
			set slot 28 of the player's current inventory to 1 nether star named "<gold>Gunslinger" with lore "<white>Foreigners who make the best use of firearms for combat.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, DEF"
			set slot 29 of the player's current inventory to 1 nether star named "<gold>Outlaw" with lore "<white>Lone wolves that sow chaos throughout the land.", "<cyan>Strengths: STR, SPD, LCK", "<light red>Weaknesses: HP, DEF, RES"
			#magic
			set slot 32 of the player's current inventory to 1 nether star named "<gold>Cleric" with lore "<white>Ill-suited for combat, but are the best at party-wide healing.", "<cyan>Strengths: HP, RES", "<light red>Weaknesses: DEF, SPD", "<cyan>This class naturally learns spells."
			set slot 33 of the player's current inventory to 1 nether star named "<gold>Strategist" with lore "<white>Clever magicians that support allies in whatever role is needed.", "<cyan>Strengths: MAG, DEF", "<light red>Weaknesses: SPD", "<cyan>This class naturally learns spells."
			set slot 34 of the player's current inventory to 1 nether star named "<gold>Troubador" with lore "<white>Mounted healers with multi-weapon utility.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, DEF, RES", "<cyan>This class naturally learns spells."
			set slot 35 of the player's current inventory to 1 nether star named "<gold>Poet" with lore "<white>Speedy performers that grant bonuses to allies.", "<cyan>Strengths: SPD, LCK, MAG, CHR", "<light red>Weaknesses: STR, HP, DEF", "<cyan>This class naturally learns spells."
			#Specialist Classes
			set slot 40 of the player's current inventory to 1 golden sword named "<white>Specialist Classes" with lore "<white>These classes radically change the way you play.", "<white>They each have unique abilities that no other class can replicate,", "<white>but they can be extremely tricky to play effectively."
			#phys
			set slot 36 of the player's current inventory to 1 nether star named "<gold>Devil Hunter" with lore "<white>Utilizes a unique Stylish system to combo foes.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: DEF, RES, HP"
			set slot 37 of the player's current inventory to 1 nether star named "<gold>Survivor" with lore "<white>Sacrifices combat ability in favor of traditional Minecraft gameplay.", "<cyan>Strengths: HP, MAG", "<light red>Weaknesses: STR, SPD, DEF, LCK, RES", "<cyan>This class naturally learns spells."
			#magic
			set slot 41 of the player's current inventory to 1 nether star named "<gold>Summoner" with lore "<white>Fragile magicians that create familiars to aid in combat.", "<cyan>Strengths: MAG, HP", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
			set slot 42 of the player's current inventory to 1 nether star named "<gold>Charlatan" with lore "<white>Crazed alchemist who sacrifices their health for more power.", "<cyan>Strengths: RES, MAG", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
		#Page 7 - Change Preferences
		else if arg 1 is 7:
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>Adjust various gameplay settings here.", "<white>These settings will be saved to this character."
			#Dodge Roll
			if {drEnable.%player%} is true:
				set slot 1 of the player's current inventory to 1 emerald block named "<light green>Dodge Roll" with lore "<white>Dodge Rolling allows you to evade damage at the cost of hunger.", "<white>Double-tap your Sneak key to perform one.", "<white>It is recommended to enable this setting.", "<white>This setting can be changed during gameplay with /dr.", "<light blue>This setting is currently enabled."
			else:
				set slot 1 of the player's current inventory to 1 stone named "<gray>Dodge Roll" with lore "<white>Dodge Rolling allows you to evade damage at the cost of hunger.", "<white>Double-tap your Sneak key to perform one.", "<white>It is recommended to enable this setting.", "<light red>This setting is currently disabled."
			#Low Performance Modes
			if {lowPerformanceMode.%player%} is true:
				set slot 2 of the player's current inventory to 1 emerald block named "<light green>Low Performance Mode" with lore "<white>This setting disables certain graphical effects to", "<white>prevent crashses on slower systems.", "<white>Enable this setting if your system struggles to run the vanilla game.", "<light blue>This setting is currently enabled."
			else:
				set slot 2 of the player's current inventory to 1 stone named "<gray>Low Performance Mode" with lore "<white>This setting disables certain graphical effects to", "<white>prevent crashses on slower systems.", "<white>Enable this setting if your system struggles to run the vanilla game.", "<light red>This setting is currently disabled."
			#Character Quotes
			if {quotesToggle.%player%} is true:
				set slot 3 of the player's current inventory to 1 emerald block named "<light green>Character Quotes" with lore "<white>Toggles visibility of character quotes during gameplay.", "<white>If enabled, configure your character's quotes with /quotes.", "<white>This setting can be changed during gameplay with /quotes.", "<light green>This setting is currently enabled."
			else:
				set slot 3 of the player's current inventory to 1 stone named "<gray>Character Quotes" with lore "<white>Toggles visibility of character quotes during gameplay.", "<white>If enabled, configure your character's quotes with /quotes.", "<white>This setting can be changed during gameplay with /quotes.", "<light red>This setting is currently disabled."
			#Autosave
			if {autosave.%player%} is set:
				set slot 4 of the player's current inventory to 1 emerald block named "<light green>Autosave" with lore "<white>Toggles automatic saves for this character.", "<white>Configure autosaves using the /char command.", "<white>This setting can be changed during gameplay with /char.", "<light green>This setting is currently enabled."
			else:
				set slot 4 of the player's current inventory to 1 stone named "<gray>Autosave" with lore "<white>Toggles automatic saves for this character.", "<white>Configure autosaves using the /char command.", "<white>This setting can be changed during gameplay with /char.", "<light red>This setting is currently disabled."
			#Jump Inertia
			if {jumpInertiaToggle.%player%} is true:
				set slot 5 of the player's current inventory to 1 emerald block named "<light green>Jump Inertia" with lore "<white>Adjust jumping behavior to more naturally transfer speed.", "<white>Jumps will more effectively transfer momentum to the air, and you can build up speed with well-timed jumps.", "<white>It is recommended to enable this setting.", "<white>This setting can be changed during gameplay with /moveSettings.", "<light green>This setting is currently enabled."
			else:
				set slot 5 of the player's current inventory to 1 stone named "<gray>Jump Inertia" with lore "<white>Adjust jumping behavior to more naturally transfer speed.", "<white>Jumps will more effectively transfer momentum to the air, and you can build up speed with well-timed jumps.", "<white>It is recommended to enable this setting.", "<white>This setting can be changed during gameplay with /moveSettings.", "<light red>This setting is currently disabled."
			#Sliding
			if {slidingToggle.%player%} is true:
				set slot 6 of the player's current inventory to 1 emerald block named "<light green>Sliding" with lore "<white>Toggles use of the Slide technique.", "<white>By crouching just before landing on the ground, you can slide to pass under 1 block tall gaps.", "<white>This setting can be changed during gameplay with /moveSettings.", "<light green>This setting is currently enabled."
			else:
				set slot 6 of the player's current inventory to 1 stone named "<gray>Sliding" with lore "<white>Toggles use of the Slide technique.", "<white>By crouching just before landing on the ground, you can slide to pass under 1 block tall gaps.", "<white>This setting can be changed during gameplay with /moveSettings.", "<light red>This setting is currently disabled."
			#Air Hang
			if {airHangToggle.%player%} is true:
				set slot 7 of the player's current inventory to 1 emerald block named "<light green>Air Hang" with lore "<white>Toggles use of the Air Hang technique.", "<white>Attack in the air with any weapon to briefly delay your fall.", "<white>This setting can be changed during gameplay with /moveSettings.", "<light green>This setting is currently enabled."
			else:
				set slot 7 of the player's current inventory to 1 stone named "<gray>Air Hang" with lore "<white>Toggles use of the Air Hang technique.", "<white>Attack in the air with any weapon to briefly delay your fall.", "<white>This setting can be changed during gameplay with /moveSettings.", "<light red>This setting is currently disabled."
			#Hints
			if {hintsToggle.%player%} is true:
				set slot 8 of the player's current inventory to 1 emerald block named "<light green>Hints" with lore "<white>Toggles periodic hints to aid gameplay.", "<white>This setting can be changed during gameplay with /hints.", "<light green>This setting is currently enabled."
			else:
				set slot 8 of the player's current inventory to 1 stone named "<gray>Hints" with lore "<white>Toggles periodic hints to aid gameplay.", "<white>This setting can be changed during gameplay with /hints.", "<light red>This setting is currently disabled."
			#Damage Assist
			if {damageAssistToggle.%player%} is true:
				set slot 9 of the player's current inventory to 1 emerald block named "<light green>Damage Assist" with lore "<white>Toggles on Damage Assist.", "<white>Damage Assist adds two mechanics designed to aid players when they take lethal damage.", "<white>Instant-Kill Prevention enables you to survive any attack as long as you are above 1/2 heart when it connects.", "<white>Bleedout takes effect if you are killed during combat.", "<white>Instead of dying, you may be revived by an ally within 15 seconds of going down.", "<white>It is recommended to enable this setting.", "<light green>This setting is currently enabled."
			else:
				set slot 9 of the player's current inventory to 1 stone named "<gray>Damage Assist" with lore "<white>Toggles on Damage Assist.", "<white>Damage Assist adds two mechanics designed to aid players when they take lethal damage.", "<white>Instant-Kill Prevention enables you to survive any attack as long as you are above 1/2 heart when it connects.", "<white>Bleedout takes effect if you are killed during combat.", "<white>Instead of dying, you may be revived by an ally within 15 seconds of going down.", "<white>It is recommended to enable this setting.", "<light res>This setting is currently disabled."
			#Combat Log
			if {verboseCombatLogging.%player%} is true:
				set slot 10 of the player's current inventory to 1 emerald block named "<light green>Verbose Combat Log" with lore "<white>Reports extra combat data to the chat.", "<white>This option will display both attacker and foe's in-combat bonuses and special chances.", "<light green>This setting is currently enabled."
			else:
				set slot 10 of the player's current inventory to 1 stone named "<gray>Verbose Combat Log" with lore "<white>Reports extra combat data to the chat.", "<white>This option will display both attacker and foe's in-combat bonuses and special chances.", "<light red>This setting is currently disabled."
			#Global Chat
			if {useGlobalChat.%player%} is true:
				set slot 11 of the player's current inventory to 1 emerald block named "<light green>Global Chat" with lore "<white>Makes chat messages you send appear to everyone connected to the server.", "<white>If disabled, only players within 200 blocks can read messages you send.", "<light green>This setting is currently enabled."
			else:
				set slot 11 of the player's current inventory to 1 stone named "<gray>Global Chat" with lore "<white>Makes chat messages you send appear to everyone connected to the server.", "<white>If disabled, only players within 200 blocks can read messages you send.", "<light red>This setting is currently disabled."
			#Hardcore Mode
			if {realism.%player%} is 1:
				set slot 12 of the player's current inventory to 1 emerald block named "<light green>Hardcore Mode" with lore "<white>Introduces several new mechanics to make survival more difficult.", "<white>Thirst, sleep, and extreme temperatures are all now a threat to your survival.", "<light green>This setting is currently enabled."
			else:
				set slot 12 of the player's current inventory to 1 stone named "<gray>Hardcore Mode" with lore "<white>Introduces several new mechanics to make survival more difficult.", "<white>Thirst, sleep, and extreme temperatures are all now a threat to your survival.", "<light red>This setting is currently disabled."
			#Permadeath Mode
			if {permadeath.%player%} is true:
				set slot 13 of the player's current inventory to 1 emerald block named "<light green>Permadeath Mode" with lore "<white>Once your character dies, they're gone forever!", "<white>With no second chances, every decision you make counts.", "<light green>This setting is currently enabled."
			else:
				set slot 13 of the player's current inventory to 1 stone named "<gray>Permadeath Mode" with lore "<white>Once your character dies, they're gone forever!", "<white>With no second chances, every decision you make counts.", "<light red>This setting is currently disabled."
			#Item Loss
			if {playerdifficulty.%player%} is more than or equal to 4:
				set slot 14 of the player's current inventory to 1 barrier named "<light red>Item Loss" with lore "<white>Lose a random selection of items on death.", "<light red>This setting is forcefully enabled by your difficulty setting."
			else if {useItemLoss.%player%} is true:
				set slot 14 of the player's current inventory to 1 emerald block named "<light green>Item Loss" with lore "<white>Lose a random selection of items on death.", "<light green>This setting is currently enabled."
			else:
				set slot 14 of the player's current inventory to 1 stone named "<gray>Item Loss" with lore "<white>Lose a random selection of items on death.", "<light red>This setting is currently disabled."
			#Helm Splitter
			if {enableHelmSplitter.%player%} is true:
				set slot 15 of the player's current inventory to 1 emerald block named "<light green>Helm Splitter" with lore "<white>Hold SNEAK and attack an enemy in mid-air", "<white>to deal extra damage and force both parties to the ground.", "<light green>This setting is currently enabled."
			else:
				set slot 15 of the player's current inventory to 1 stone named "<gray>Helm Splitter" with lore "<white>Hold SNEAK and attack an enemy in mid-air", "<white>to deal extra damage and force both parties to the ground.", "<light red>This setting is currently disabled."
			#CoS Legacy Save
			#if {legacy_name.%player%} is set:
			#	if {disableLegacyBonus.%player%} is not set:
			#		set slot 16 of the player's current inventory to 1 diamond block named "<cyan>CoS Legacy save detected!" with lore "<white>You will recieve a small bonus for having played CoS Legacy.", "<white>If you wish, you can click this icon to disable the bonus."
			#	else:
			#		set slot 16 of the player's current inventory to 1 obsidian named "<gray>CoS Legacy save detected!" with lore "<white>You have disabled the CoS Legacy bonus.", "<white>If you wish, you can click this icon to enable the bonus."
			#else:
			#	set slot 16 of the player's current inventory to 1 redstone block named "<gray>CoS Legacy Bonus" with lore "<white>Those who played CoS: Legacy before 11/30/20 will recieve a bonus on all new characters made."
		#Page 776 - Holy Blood Selection
		else if arg 1 is 776:
			set slot 0 of the player's current inventory to 1 barrier named "<gold>Reset Holy Blood" with lore "<white>Holy Blood Alloc: %{charsetup_holyBloodAlloc.%player%}%"
			if {holyBlood.%player%::Selena} is not set:
				set slot 3 of the player's current inventory to 1 golden sword of power 5 named "<gold><bold>Selena" with lore "<white>The blood of the paladin Selena.", "<white>It bestows an increase to HP, STR, LCK, and CHR."
			else if {holyBlood.%player%::Selena} is 1:
				set slot 3 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Selena" with lore "<white>The blood of the paladin Selena.", "<white>It bestows an increase to HP, STR, LCK, and CHR.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 3 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Selena" with lore "<white>The blood of the paladin Selena.", "<white>It bestows an increase to HP, STR, LCK, and CHR.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Edainn} is not set:
				set slot 4 of the player's current inventory to 1 netherite sword of power 5 named "<gold><bold>Edainn" with lore "<white>The blood of the swordmaster Edainn.", "<white>It bestows an increase to HP, LCK, and SPD."
			else if {holyBlood.%player%::Edainn} is 1:
				set slot 4 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Edainn" with lore "<white>The blood of the swordmaster Edainn.", "<white>It bestows an increase to HP, LCK, and SPD.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 4 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Edainn" with lore "<white>The blood of the swordmaster Edainn.", "<white>It bestows an increase to HP, LCK, and SPD.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Tresvian} is not set:
				set slot 5 of the player's current inventory to 1 diamond shovel of power 5 named "<gold><bold>Tresvian" with lore "<white>The blood of the wyvern lord Tresvian.", "<white>It bestows an increase to HP, SPD, and DEF."
			else if {holyBlood.%player%::Tresvian} is 1:
				set slot 5 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Tresvian" with lore "<white>The blood of the wyvern lord Tresvian.", "<white>It bestows an increase to HP, SPD, and DEF.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 5 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Tresvian" with lore "<white>The blood of the wyvern lord Tresvian.", "<white>It bestows an increase to HP, SPD, and DEF.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Rexas} is not set:
				set slot 11 of the player's current inventory to 1 bow of power 5 named "<gold><bold>Rexas" with lore "<white>The blood of the sniper Rexas.", "<white>It bestows an increase to SPD, LCK, and STR."
			else if {holyBlood.%player%::Rexas} is 1:
				set slot 11 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Rexas" with lore "<white>The blood of the sniper Rexas.", "<white>It bestows an increase to SPD, LCK, and STR.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 11 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Rexas" with lore "<white>The blood of the sniper Rexas.", "<white>It bestows an increase to SPD, LCK, and STR.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Valkyria} is not set:
				set slot 20 of the player's current inventory to 1 diamond hoe of power 5 named "<gold><bold>Valkyria" with lore "<white>The blood of the priestess Valkyria.", "<white>It bestows an increase to HP, MAG, RES, and LCK."
			else if {holyBlood.%player%::Valkyria} is 1:
				set slot 20 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Valkyria" with lore "<white>The blood of the priestess Valkyria.", "<white>It bestows an increase to HP, MAG, RES, and LCK.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 20 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Valkyria" with lore "<white>The blood of the priestess Valkyria.", "<white>It bestows an increase to HP, MAG, RES, and LCK.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Aquillo} is not set:
				set slot 29 of the player's current inventory to 1 book of power 5 named "<gold><bold>Aquillo" with lore "<white>The blood of the thunder sage Aquillo.", "<white>It bestows an increase to HP, LCK, and MAG."
			else if {holyBlood.%player%::Aquillo} is 1:
				set slot 29 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Aquillo" with lore "<white>The blood of the thunder sage Aquillo.", "<white>It bestows an increase to HP, LCK, and MAG.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 29 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Aquillo" with lore "<white>The blood of the thunder sage Aquillo.", "<white>It bestows an increase to HP, LCK, and MAG.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Delphi} is not set:
				set slot 39 of the player's current inventory to 1 book of power 5 named "<gold><bold>Delphi" with lore "<white>The blood of the flame sage Delphi.", "<white>It bestows an increase to HP and MAG."
			else if {holyBlood.%player%::Delphi} is 1:
				set slot 39 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Delphi" with lore "<white>The blood of the flame sage Delphi.", "<white>It bestows an increase to HP and MAG.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 39 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Delphi" with lore "<white>The blood of the flame sage Delphi.", "<white>It bestows an increase to HP and MAG.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Gaia} is not set:
				set slot 40 of the player's current inventory to 1 book of power 5 named "<gold><bold>Gaia" with lore "<white>The blood of the wind sage Gaia.", "<white>It bestows an increase to HP and SPD."
			else if {holyBlood.%player%::Gaia} is 1:
				set slot 40 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Gaia" with lore "<white>The blood of the wind sage Gaia.", "<white>It bestows an increase to HP and SPD.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 40 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Gaia" with lore "<white>The blood of the wind sage Gaia.", "<white>It bestows an increase to HP and SPD.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Jubilo} is not set:
				set slot 41 of the player's current inventory to 1 book of power 5 named "<gold><bold>Jubilo" with lore "<white>The blood of the conjurer Jubilo.", "<white>It bestows an increase to HP, MAG, DEF, and RES."
			else if {holyBlood.%player%::Jubilo} is 1:
				set slot 41 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Jubilo" with lore "<white>The blood of the conjurer Jubilo.", "<white>It bestows an increase to HP, MAG, DEF, and RES.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 41 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Jubilo" with lore "<white>The blood of the conjurer Jubilo.", "<white>It bestows an increase to HP, MAG, DEF, and RES.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Zelahan} is not set:
				set slot 15 of the player's current inventory to 1 diamond sword of power 5 named "<gold><bold>Zelahan" with lore "<white>The blood of the chieftan Zelahan.", "<white>It bestows an increase to HP, STR, and DEF."
			else if {holyBlood.%player%::Zelahan} is 1:
				set slot 15 of the player's current inventory to 1 diamond sword of power 5 named "<gold><bold>Zelahan" with lore "<white>The blood of the chieftan Zelahan.", "<white>It bestows an increase to HP, STR, and DEF.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 15 of the player's current inventory to 1 diamond sword of power 5 named "<gold><bold>Zelahan" with lore "<white>The blood of the chieftan Zelahan.", "<white>It bestows an increase to HP, STR, and DEF.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Kallin} is not set:
				set slot 24 of the player's current inventory to 1 diamond shovel of power 5 named "<gold><bold>Kallin" with lore "<white>The blood of the halberdier Kallin.", "<white>It bestows an increase to HP, STR, SPD, and DEF."
			else if {holyBlood.%player%::Kallin} is 1:
				set slot 24 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Kallin" with lore "<white>The blood of the halberdier Kallin.", "<white>It bestows an increase to HP, STR, SPD, and DEF.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 24 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Kallin" with lore "<white>The blood of the halberdier Kallin.", "<white>It bestows an increase to HP, STR, SPD, and DEF.", "<gold>You have major Holy Blood of this type."
			if {holyBlood.%player%::Makallan} is not set:
				set slot 33 of the player's current inventory to 1 diamond axe of power 5 named "<gold><bold>Makallan" with lore "<white>The blood of the berserker Makallan.", "<white>It bestows an increase to HP and DEF."
			else if {holyBlood.%player%::Makallan} is 1:
				set slot 33 of the player's current inventory to 1 ghast tear of power 5 named "<gold><bold>Makallan" with lore "<white>The blood of the berserker Makallan.", "<white>It bestows an increase to HP and DEF.", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 33 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>Makallan" with lore "<white>The blood of the berserker Makallan.", "<white>It bestows an increase to HP and DEF.", "<gold>You have major Holy Blood of this type."
			#Dragonkin/Half-Breeds can see the hidden 13th Holy Blood - D'al Versain
			#if {race.%player%} is "Dragonborn":
			if {holyBlood.%player%::D'al Versain} is not set:
				set slot 22 of the player's current inventory to 1 dragon egg of power 5 named "<gold><bold>D'al Versain" with lore "<white>The holy blood of the first dragon, D'al Versain.", "<white>It bestows an increase to HP, MAG, and RES.", "<light red>Those with Minor of this Holy Blood could see adverse effects..."
			else if {holyBlood.%player%::D'al Versain} is 1:
				set slot 22 of the player's current inventory to 1 redstone dust of power 5 named "<gold><bold>D'al Versain" with lore "<white>The holy blood of the first dragon, D'al Versain.", "<white>It bestows an increase to HP, MAG, and RES.", "<light red>Those with Minor of this Holy Blood could see adverse effects...", "<light yellow>You have minor Holy Blood of this type."
			else:
				set slot 22 of the player's current inventory to 1 nether star of power 5 named "<gold><bold>D'al Versain" with lore "<white>The holy blood of the first dragon, D'al Versain.", "<white>It bestows an increase to HP, MAG, and RES.", "<light red>Those with Minor of this Holy Blood could see adverse effects...", "<gold>You have major Holy Blood of this type."
		#Page 8 - Final Review
		else if arg 1 is 8:
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>This page is an overview of your character.", "<white>Your initial Stats and Attributes are displayed here.", "<white>If you are happy with your character, please click Confirm Character."
			set slot 9 of the player's current inventory to 1 totem of undying named "<gold>Character Info" with lore "<white>Race: %{race.%player%}%", "<white>Gender: %{sex.%player%}%", "<white>Background: %{background.%player%}%", "<white>Proficiencies: %{abilityProficiencies.%player%::1}%, %{abilityProficiencies.%player%::2}%", "<white>Class: %{class.%player%}%"
			set slot 10 of the player's current inventory to 1 book named "<gold>Vitality" with lore "<white>Base value: %{hp.%player%}%", "<white>Maximum value: %{hpcap.%player%}%", "<white>Trait bonuses: %{hpbuff.%player%}%", "<white>Growth Rate: %{hpgrowth.%player%}%%%"
			set slot 11 of the player's current inventory to 1 book named "<gold>Strength" with lore "<white>Base value: %{str.%player%}%", "<white>Maximum value: %{strcap.%player%}%", "<white>Trait bonuses: %{strbuff.%player%}%", "<white>Growth Rate: %{strgrowth.%player%}%%%"
			set slot 12 of the player's current inventory to 1 book named "<gold>Speed" with lore "<white>Base value: %{spd.%player%}%", "<white>Maximum value: %{spdcap.%player%}%", "<white>Trait bonuses: %{spdbuff.%player%}%", "<white>Growth Rate: %{spdgrowth.%player%}%%%"
			set slot 13 of the player's current inventory to 1 book named "<gold>Luck" with lore "<white>Base value: %{lck.%player%}%", "<white>Maximum value: %{lckcap.%player%}%", "<white>Trait bonuses: %{lckbuff.%player%}%", "<white>Growth Rate: %{lckgrowth.%player%}%%%"
			set slot 14 of the player's current inventory to 1 book named "<gold>Charm" with lore "<white>Base value: %{chr.%player%}%", "<white>Maximum value: %{chrcap.%player%}%", "<white>Trait bonuses: %{chrbuff.%player%}%", "<white>Growth Rate: %{chrgrowth.%player%}%%%"
			set slot 15 of the player's current inventory to 1 book named "<gold>Magic" with lore "<white>Base value: %{mag.%player%}%", "<white>Maximum value: %{magcap.%player%}%", "<white>Trait bonuses: %{magbuff.%player%}%", "<white>Growth Rate: %{maggrowth.%player%}%%%"
			set slot 16 of the player's current inventory to 1 book named "<gold>Defense" with lore "<white>Base value: %{def.%player%}%", "<white>Maximum value: %{defcap.%player%}%", "<white>Trait bonuses: %{defbuff.%player%}%", "<white>Growth Rate: %{defgrowth.%player%}%%%"
			set slot 17 of the player's current inventory to 1 book named "<gold>Resistance" with lore "<white>Base value: %{res.%player%}%", "<white>Maximum value: %{rescap.%player%}%", "<white>Trait bonuses: %{resbuff.%player%}%", "<white>Growth Rate: %{resgrowth.%player%}%%%"
			set slot 18 of the player's current inventory to 1 iron sword named "<gold>Traditional Weapons" with lore "<white>Base value: %{abilities.%player%::Traditional Weapons}%"
			set slot 19 of the player's current inventory to 1 book of power 1 named "<gold>Magical Weapons" with lore "<white>Base value: %{abilities.%player%::Magical Weapons}%"
			set slot 20 of the player's current inventory to 1 iron horse armor named "<gold>Guns" with lore "<white>Base value: %{abilities.%player%::Guns}%"
			set slot 21 of the player's current inventory to 1 tripwire hook named "<gold>Lockpicking" with lore "<white>Base value: %{abilities.%player%::Lockpicking}%"
			set slot 22 of the player's current inventory to 1 green dye named "<gold>Medicine" with lore "<white>Base value: %{abilities.%player%::Medicine}%"
			set slot 23 of the player's current inventory to 1 anvil named "<gold>Repair" with lore "<white>Base value: %{abilities.%player%::Repair}%"
			set slot 24 of the player's current inventory to 1 iron axe named "<gold>Fabrication" with lore "<white>Base value: %{abilities.%player%::Fabrication}%"
			set slot 25 of the player's current inventory to 1 enchanting table named "<gold>Enchanting" with lore "<white>Base value: %{abilities.%player%::Enchanting}%"
			set slot 26 of the player's current inventory to 1 emerald item named "<gold>Speech" with lore "<white>Base value: %{abilities.%player%::Speech}%"
			set slot 27 of the player's current inventory to 1 gold ingot named "<gold>Barter" with lore "<white>Base value: %{abilities.%player%::Barter}%"
			set slot 28 of the player's current inventory to 1 cooked pork named "<gold>Survival" with lore "<white>Base value: %{abilities.%player%::Survival}%"
			if {csetup_pointsToSpend.%player%} is 0:
				if {abilityProficiencies.%player%::1} is set:
					if {abilityProficiencies.%player%::2} is set:
						if {primaryWeaponType.%player%} is set:
							if {secondaryWeaponType.%player%} is set:
								set slot 44 of the player's current inventory to 1 gold block named "<gold>Confirm Character" with lore "<white>If you are happy with your current character,", "<white>click this button to finalize creation and begin your adventure."
							else:
								set slot 44 of the player's current inventory to 1 obsidian named "<gray>Confirm Character" with lore "<white>You still need to select a secondary Weapon Preference.", "<white>Select your Weapon Preferences from the Select Proficiencies tab."
						else:
							set slot 44 of the player's current inventory to 1 obsidian named "<gray>Confirm Character" with lore "<white>You still need to select a primary Weapon Preference.", "<white>Select your Weapon Preferences from the Select Proficiencies tab."
					else:
						set slot 44 of the player's current inventory to 1 obsidian named "<gray>Confirm Character" with lore "<white>You still need to mark two Abilities as Proficent.", "<white>Select your Proficiencies from the Select Proficiencies tab."
				else:
					set slot 44 of the player's current inventory to 1 obsidian named "<gray>Confirm Character" with lore "<white>You still need to mark two Abilities as Proficent.", "<white>Select your Proficiencies from the Select Proficiencies tab."
			else:
				set slot 44 of the player's current inventory to 1 obsidian named "<gray>Confirm Character" with lore "<white>You still have points to spend in the Stats Adjustor.", "<white>Come back once you have spent all Stats points."
		
#GUI Button Logic		
on inventory click:
	if the name of the player's current inventory is "<gold>Character Creator":
		#Prevents players from "stealing" the buttons when navigating the UI.
		cancel event
		#Tab Selection
		if the name of the clicked item is "<gold>Select Race":
			make player execute command "/charsetup 0"
		else if the name of the clicked item is "<gold>Select Background":
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<gold>Stats Adjustor":
			make player execute command "/charsetup 2"
		else if the name of the clicked item is "<gold>Select Proficiencies":
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Select Traits":
			make player execute command "/charsetup 4"
		else if the name of the clicked item is "<gold>Select Difficulty":
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<gold>Select Class":
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Change Preferences":
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gold>Final Review":
			make player execute command "/charsetup 8"
		#Race Selection
		else if the name of the clicked item is "<light yellow>Human":
			set {race.%player%} to "Human"
			if {traits.%player%::Jack of all Trades} is true:
				clear {traits.%player%::Jack of all Trades}
				subtract 1 from {traitsSelected.%player%}
			make player execute command "/charsetup 0"
		else if the name of the clicked item is "<light yellow>Elf":
			set {race.%player%} to "Elf"
			if {traits.%player%::Spellscribe} is true:
				clear {traits.%player%::Spellscribe}
				subtract 1 from {traitsSelected.%player%}
			make player execute command "/charsetup 0"
		else if the name of the clicked item is "<light yellow>Dwarf":
			set {race.%player%} to "Dwarf"
			if {traits.%player%::Tinkerer} is true:
				clear {traits.%player%::Tinkerer}
				subtract 1 from {traitsSelected.%player%}
			make player execute command "/charsetup 0"
		else if the name of the clicked item is "<light yellow>Orc":
			set {race.%player%} to "Orc"
			if {traits.%player%::Heavy-Hitter} is true:
				clear {traits.%player%::Heavy-Hitter}
				subtract 1 from {traitsSelected.%player%}
			make player execute command "/charsetup 0"
		else if the name of the clicked item is "<light yellow>Dragonborn":
			set {race.%player%} to "Dragonborn"
			if {traits.%player%::Half-Breed} is true:
				clear {traits.%player%::Half-Breed}
				subtract 1 from {traitsSelected.%player%}
			make player execute command "/charsetup 0"
		#Background Selection
		else if the name of the clicked item is "<light yellow>Commoner":
			set {background.%player%} to "Commoner"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Nobility":
			set {background.%player%} to "Nobility"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Chemist":
			set {background.%player%} to "Chemist"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Enchanter":
			set {background.%player%} to "Enchanter"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Sellsword":
			set {background.%player%} to "Sellsword"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Thief":
			set {background.%player%} to "Thief"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Smith":
			set {background.%player%} to "Smith"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Forager":
			set {background.%player%} to "Forager"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Inventor":
			set {background.%player%} to "Inventor"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Immigrant":
			set {background.%player%} to "Immigrant"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Farmer":
			set {background.%player%} to "Farmer"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Researcher":
			set {background.%player%} to "Researcher"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Weaponmaster":
			set {background.%player%} to "Weaponmaster"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Windcaller":
			set {background.%player%} to "Windcaller"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Firestorm":
			set {background.%player%} to "Firestorm"
			make player execute command "/charsetup 1"
		else if the name of the clicked item is "<light yellow>Waterflow":
			set {background.%player%} to "Waterflow"
			make player execute command "/charsetup 1"
		#Open Holy Blood Menu
		else if the name of the clicked item is "<light yellow>Select Holy Blood":
			make player execute command "/charsetup 776"
		#Increase Stats, but only if points are available
		if {csetup_pointsToSpend.%player%} is more than 0:
			#Vitality
			if the name of the clicked item is "<green><bold>Increase Vitality":
				if {pts_HP.%player%} is less than 20:
					add 1 to {pts_HP.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
			#Strength
			else if the name of the clicked item is "<green><bold>Increase Strength":
				if {pts_STR.%player%} is less than 10:
					add 1 to {pts_STR.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
			#Defense
			else if the name of the clicked item is "<green><bold>Increase Defense":
				if {pts_DEF.%player%} is less than 10:
					add 1 to {pts_DEF.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
			#Speed
			if the name of the clicked item is "<green><bold>Increase Speed":
				if {pts_SPD.%player%} is less than 10:
					add 1 to {pts_SPD.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
			#Magic
			if the name of the clicked item is "<green><bold>Increase Magic":
				if {pts_MAG.%player%} is less than 10:
					add 1 to {pts_MAG.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
			#Resistance
			if the name of the clicked item is "<green><bold>Increase Resistance":
				if {pts_RES.%player%} is less than 10:
					add 1 to {pts_RES.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
			#Charm
			if the name of the clicked item is "<green><bold>Increase Charm":
				if {pts_CHR.%player%} is less than 10:
					add 1 to {pts_CHR.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
			#Luck
			if the name of the clicked item is "<green><bold>Increase Luck":
				if {pts_LCK.%player%} is less than 10:
					add 1 to {pts_LCK.%player%}
					subtract 1 from {csetup_pointsToSpend.%player%}
					clear {blockMenuExit.%player%}
					make player execute command "/charsetup 2"
		#Decrease Stats, but only if points invested are above the minimum (10)
		#Vitality
		if the name of the clicked item is "<red><bold>Decrease Vitality":
			if {pts_HP.%player%} is more than 10:
				subtract 1 from {pts_HP.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Strength
		else if the name of the clicked item is "<red><bold>Decrease Strength":
			if {pts_STR.%player%} is more than 1:
				subtract 1 from {pts_STR.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Defense
		else if the name of the clicked item is "<red><bold>Decrease Defense":
			if {pts_DEF.%player%} is more than 1:
				subtract 1 from {pts_DEF.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Speed
		else if the name of the clicked item is "<red><bold>Decrease Speed":
			if {pts_SPD.%player%} is more than 1:
				subtract 1 from {pts_SPD.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Magic
		else if the name of the clicked item is "<red><bold>Decrease Magic":
			if {pts_MAG.%player%} is more than 1:
				subtract 1 from {pts_MAG.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Resistance
		else if the name of the clicked item is "<red><bold>Decrease Resistance":
			if {pts_RES.%player%} is more than 1:
				subtract 1 from {pts_RES.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Charm
		else if the name of the clicked item is "<red><bold>Decrease Charm":
			if {pts_CHR.%player%} is more than 1:
				subtract 1 from {pts_CHR.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Luck
		else if the name of the clicked item is "<red><bold>Decrease Luck":
			if {pts_LCK.%player%} is more than 1:
				subtract 1 from {pts_LCK.%player%}
				add 1 to {csetup_pointsToSpend.%player%}
				clear {blockMenuExit.%player%}
				make player execute command "/charsetup 2"
		#Reset Points
		else if the name of the clicked item is "<green><bold>Reset Points":
			set {csetup_pointsToSpend.%player%} to 8
			if {hasMinorHolyBlood.%player%} is true:
				subtract 2 from {csetup_pointsToSpend.%player%}
			if {hasMajorHolyBlood.%player%} is true:
				subtract 4 from {csetup_pointsToSpend.%player%}
			if {traits.%player%::Gifted} is true:
				add 4 to {csetup_pointsToSpend.%player%}
			if {traits.%player%::Divine Bloodline} is true:
				subtract 2 from {csetup_pointsToSpend.%player%}
			play sound "entity.zombie_villager.cure" with volume 0.5 and pitch 1 at the player for the player
			set {pts_HP.%player%} to 15
			set {pts_MAG.%player%} to 5
			set {pts_RES.%player%} to 5
			set {pts_STR.%player%} to 5
			set {pts_DEF.%player%} to 5
			set {pts_SPD.%player%} to 5
			set {pts_LCK.%player%} to 5
			set {pts_CHR.%player%} to 5
			make player execute command "/charsetup 2"
		#Select Proficiencies
		else if the name of the clicked item is "<light yellow>Traditional Weapons":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Traditional Weapons"
			else if {abilityProficiencies.%player%::1} is "Traditional Weapons":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Traditional Weapons"
			else if {abilityProficiencies.%player%::2} is "Traditional Weapons":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Magical Weapons":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Magical Weapons"
			else if {abilityProficiencies.%player%::1} is "Magical Weapons":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Magical Weapons"
			else if {abilityProficiencies.%player%::2} is "Magical Weapons":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Guns":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Guns"
			else if {abilityProficiencies.%player%::1} is "Guns":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Guns"
			else if {abilityProficiencies.%player%::2} is "Guns":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Lockpicking":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Lockpicking"
			else if {abilityProficiencies.%player%::1} is "Lockpicking":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Lockpicking"
			else if {abilityProficiencies.%player%::2} is "Lockpicking":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Medicine":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Medicine"
			else if {abilityProficiencies.%player%::1} is "Medicine":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Medicine"
			else if {abilityProficiencies.%player%::2} is "Medicine":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Repair":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Repair"
			else if {abilityProficiencies.%player%::1} is "Repair":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Repair"
			else if {abilityProficiencies.%player%::2} is "Repair":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Fabrication":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Fabrication"
			else if {abilityProficiencies.%player%::1} is "Fabrication":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Fabrication"
			else if {abilityProficiencies.%player%::2} is "Fabrication":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Enchanting":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Enchanting"
			else if {abilityProficiencies.%player%::1} is "Enchanting":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Enchanting"
			else if {abilityProficiencies.%player%::2} is "Enchanting":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Speech":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Speech"
			else if {abilityProficiencies.%player%::1} is "Speech":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Speech"
			else if {abilityProficiencies.%player%::2} is "Speech":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Barter":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Barter"
			else if {abilityProficiencies.%player%::1} is "Barter":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Barter"
			else if {abilityProficiencies.%player%::2} is "Barter":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<light yellow>Survival":
			if {abilityProficiencies.%player%::1} is not set:
				set {abilityProficiencies.%player%::1} to "Survival"
			else if {abilityProficiencies.%player%::1} is "Survival":
				clear {abilityProficiencies.%player%::1}
			else if {abilityProficiencies.%player%::2} is not set:
				set {abilityProficiencies.%player%::2} to "Survival"
			else if {abilityProficiencies.%player%::2} is "Survival":
				clear {abilityProficiencies.%player%::2}
			make player execute command "/charsetup 3"
		#Select Primary/Secondary Weapons
		if the name of the clicked item is "<gold>Swords":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Swords"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Swords"
			else:
				if {primaryWeaponType.%player%} is "Swords":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Swords":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Lances":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Lances"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Lances"
			else:
				if {primaryWeaponType.%player%} is "Lances":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Lances":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Axes":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Axes"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Axes"
			else:
				if {primaryWeaponType.%player%} is "Axes":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Axes":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Gauntlets":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Gauntlets"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Gauntlets"
			else:
				if {primaryWeaponType.%player%} is "Gauntlets":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Gauntlets":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Daggers":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Daggers"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Daggers"
			else:
				if {primaryWeaponType.%player%} is "Daggers":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Daggers":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Wands":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Wands"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Wands"
			else:
				if {primaryWeaponType.%player%} is "Wands":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Wands":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Tomes":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Tomes"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Tomes"
			else:
				if {primaryWeaponType.%player%} is "Tomes":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Tomes":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Staves":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Staves"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Staves"
			else:
				if {primaryWeaponType.%player%} is "Staves":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Staves":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Pistols":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Pistols"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Pistols"
			else:
				if {primaryWeaponType.%player%} is "Pistols":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Pistols":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Rifles":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Rifles"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Rifles"
			else:
				if {primaryWeaponType.%player%} is "Rifles":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Rifles":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Shotguns":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Shotguns"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Shotguns"
			else:
				if {primaryWeaponType.%player%} is "Shotguns":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Shotguns":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		else if the name of the clicked item is "<gold>Bows":
			if {primaryWeaponType.%player%} is not set:
				set {primaryWeaponType.%player%} to "Bows"
			else if {secondaryWeaponType.%player%} is not set:
				set {secondaryWeaponType.%player%} to "Bows"
			else:
				if {primaryWeaponType.%player%} is "Bows":
					clear {primaryWeaponType.%player%}
				else if {secondaryWeaponType.%player%} is "Bows":
					clear {secondaryWeaponType.%player%}
			make player execute command "/charsetup 3"
		#Select Traits
		if the name of the clicked item contains "<light red>":
			if {traitsSelected.%player%} is not set:
				set {traitsSelected.%player%} to 0
			#Cap number of traits if difficulty >= LUNATIC
			if {playerDifficulty.%player%} is more than or equal to 4:
				if {traitsSelected.%player%} is less than 5:
					set {_selectedTrait} to the name of the clicked item
					#broadcast "%{_selectedTrait}%"
					set {_selectedTrait} to decolorize({_selectedTrait})
					#send "%{_selectedTrait}%" to the player
					if {traits.%player%::%{_selectedTrait}%} is not true:
						set {traits.%player%::%{_selectedTrait}%} to true
						add 1 to {traitsSelected.%player%}
						#Gifted points reset
						if {_selectedTrait} is "Gifted":
							#Gifted is equal to 3 traits on LUNATIC
							add 2 to {traitsSelected.%player%}
							if {traitsSelected.%player%} is more than 5:
								subtract 2 from {traitsSelected.%player%}
								clear {traits.%player%::%{_selectedTrait}%}
							else:
								set {csetup_pointsToSpend.%player%} to 8
								if {traits.%player%::Gifted} is true:
									add 4 to {csetup_pointsToSpend.%player%}
								play sound "entity.zombie_villager.cure" with volume 0.5 and pitch 1 at the player for the player
								set {pts_HP.%player%} to 15
								set {pts_MAG.%player%} to 5
								set {pts_RES.%player%} to 5
								set {pts_STR.%player%} to 5
								set {pts_DEF.%player%} to 5
								set {pts_SPD.%player%} to 5
								set {pts_LCK.%player%} to 5
								set {pts_CHR.%player%} to 5
						#Veteran worth 2
						if {_selectedTrait} is "Veteran":
							add 1 to {traitsSelected.%player%}
							if {traitsSelected.%player%} is more than 5:
								subtract 2 from {traitsSelected.%player%}
								clear {traits.%player%::%{_selectedTrait}%}
						#Trainee worth 2
						if {_selectedTrait} is "Trainee":
							add 1 to {traitsSelected.%player%}
							if {traitsSelected.%player%} is more than 5:
								subtract 2 from {traitsSelected.%player%}
								clear {traits.%player%::%{_selectedTrait}%}
						else if {_selectedTrait} is "Divine Bloodline":
							add 1 to {charsetup_holyBloodAlloc.%player%}
			if {traitsSelected.%player%} is less than 99:
				set {_selectedTrait} to the name of the clicked item
				#broadcast "%{_selectedTrait}%"
				set {_selectedTrait} to decolorize({_selectedTrait})
				#send "%{_selectedTrait}%" to the player
				if {traits.%player%::%{_selectedTrait}%} is not true:
					set {traits.%player%::%{_selectedTrait}%} to true
					add 1 to {traitsSelected.%player%}
					#Gifted points reset
					if {_selectedTrait} is "Gifted":
						set {csetup_pointsToSpend.%player%} to 8
						if {traits.%player%::Gifted} is true:
							add 4 to {csetup_pointsToSpend.%player%}
						play sound "entity.zombie_villager.cure" with volume 0.5 and pitch 1 at the player for the player
						set {pts_HP.%player%} to 15
						set {pts_MAG.%player%} to 5
						set {pts_RES.%player%} to 5
						set {pts_STR.%player%} to 5
						set {pts_DEF.%player%} to 5
						set {pts_SPD.%player%} to 5
						set {pts_LCK.%player%} to 5
						set {pts_CHR.%player%} to 5
					else if {_selectedTrait} is "Divine Bloodline":
						add 1 to {charsetup_holyBloodAlloc.%player%}
			make player execute command "/charsetup 4"
		#Deselect Traits
		else if the name of the clicked item contains "<light blue>":
			set {_selectedTrait} to the name of the clicked item
			#broadcast "%{_selectedTrait}%"
			set {_selectedTrait} to decolorize({_selectedTrait})
			#send "%{_selectedTrait}%" to the player
			if {traits.%player%::%{_selectedTrait}%} is true:
				clear {traits.%player%::%{_selectedTrait}%}
				subtract 1 from {traitsSelected.%player%}
				#Gifted points reset
				if {_selectedTrait} is "Gifted":
					subtract 2 from {traitsSelected.%player%}
					set {csetup_pointsToSpend.%player%} to 8
					if {traits.%player%::Gifted} is true:
						add 4 to {csetup_pointsToSpend.%player%}
					play sound "entity.zombie_villager.cure" with volume 0.5 and pitch 1 at the player for the player
					set {pts_HP.%player%} to 15
					set {pts_MAG.%player%} to 5
					set {pts_RES.%player%} to 5
					set {pts_STR.%player%} to 5
					set {pts_DEF.%player%} to 5
					set {pts_SPD.%player%} to 5
					set {pts_LCK.%player%} to 5
					set {pts_CHR.%player%} to 5
				#Veteran worth 2
				if {_selectedTrait} is "Veteran":
					subtract 1 from {traitsSelected.%player%}
					if {traitsSelected.%player%} is more than 5:
						subtract 2 from {traitsSelected.%player%}
						clear {traits.%player%::%{_selectedTrait}%}
				#Trainee worth 2
				if {_selectedTrait} is "Trainee":
					subtract 1 from {traitsSelected.%player%}
					if {traitsSelected.%player%} is more than 5:
						subtract 2 from {traitsSelected.%player%}
						clear {traits.%player%::%{_selectedTrait}%}
				else if {_selectedTrait} is "Divine Bloodline":
					subtract 1 from {charsetup_holyBloodAlloc.%player%}
			make player execute command "/charsetup 4"
		#Deselect All Traits
		else if the name of the clicked item contains "Deselect All Traits":
			if {traits.%player%::Gifted} is true:
				set {csetup_pointsToSpend.%player%} to 8
				set {pts_HP.%player%} to 15
				set {pts_MAG.%player%} to 5
				set {pts_RES.%player%} to 5
				set {pts_STR.%player%} to 5
				set {pts_DEF.%player%} to 5
				set {pts_SPD.%player%} to 5
				set {pts_LCK.%player%} to 5
				set {pts_CHR.%player%} to 5
			if {traits.%player%::Divine Bloodline} is true:
				subtract 1 from {charsetup_holyBloodAlloc.%player%}
			clear {traits.%player%::*}
			set {traitsSelected.%player%} to 0
			play sound "entity.zombie_villager.cure" with volume 0.5 and pitch 1 at the player for the player
			make player execute command "/charsetup 4"
		#Select Difficulty
		if the name of the clicked item is "<light green>Relaxed":
			set {playerDifficulty.%player%} to 1
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<light gray>Normal":
			set {playerDifficulty.%player%} to 2
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<gray>Hard":
			set {playerDifficulty.%player%} to 3
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<red>Lunatic":
			set {playerDifficulty.%player%} to 4
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<purple>Infernal":
			set {playerDifficulty.%player%} to 5
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<blue>Abyssal":
			set {playerDifficulty.%player%} to 6
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<light yellow>Critical":
			set {playerDifficulty.%player%} to 7
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<gold>Legendary":
			set {playerDifficulty.%player%} to 8
			make player execute command "/charsetup 5"
		else if the name of the clicked item is "<gold>%player's tablist name% Must Die":
			set {playerDifficulty.%player%} to 9
			make player execute command "/charsetup 5"
		#Select Class
		else if the name of the clicked item is "<gold>Mercenary":
			set {class.%player%} to "Mercenary"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Knight":
			set {class.%player%} to "Knight"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Bladesman":
			set {class.%player%} to "Bladesman"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Fighter":
			set {class.%player%} to "Fighter"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Mage":
			set {class.%player%} to "Mage"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Cleric":
			set {class.%player%} to "Cleric"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Archer":
			set {class.%player%} to "Archer"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Cavalier":
			set {class.%player%} to "Cavalier"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Survivor":
			set {class.%player%} to "Survivor"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Gunslinger":
			set {class.%player%} to "Gunslinger"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Strategist":
			set {class.%player%} to "Strategist"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Devil Hunter":
			set {class.%player%} to "Devil Hunter"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Summoner":
			set {class.%player%} to "Summoner"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Trickster":
			set {class.%player%} to "Trickster"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Charlatan":
			set {class.%player%} to "Charlatan"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Keeper":
			set {class.%player%} to "Keeper"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Poet":
			set {class.%player%} to "Poet"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Outlaw":
			set {class.%player%} to "Outlaw"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Conjurer":
			set {class.%player%} to "Conjurer"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<gold>Troubador":
			set {class.%player%} to "Troubador"
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<white>View Class Perks":
			make player execute command "/class_setup_perkmenu 2"
		#Change Preferences
		else if the name of the clicked item is "<light green>Dodge Roll":
			clear {drEnable.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Dodge Roll":
			set {drEnable.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Low Performance Mode":
			clear {lowPerformanceMode.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Low Performance Mode":
			set {lowPerformanceMode.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Character Quotes":
			clear {quotesToggle.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Character Quotes":
			set {quotesToggle.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Autosave":
			clear {autosave.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Autosave":
			set {autosave.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Jump Inertia":
			clear {jumpInertiaToggle.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Jump Inertia":
			set {jumpInertiaToggle.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Sliding":
			clear {slidingToggle.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Sliding":
			set {slidingToggle.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Air Hang":
			clear {airHangToggle.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Air Hang":
			set {airHangToggle.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Hints":
			clear {hintsToggle.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Hints":
			set {hintsToggle.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Damage Assist":
			clear {damageAssistToggle.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Damage Assist":
			set {damageAssistToggle.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Hardcore Mode":
			clear {realism.%player%}
			set {temperature.%player%} to 100
			set {thirst.%player%} to 100
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Hardcore Mode":
			set {realism.%player%} to 1
			set {temperature.%player%} to 100
			set {thirst.%player%} to 100
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Permadeath Mode":
			clear {permadeath.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Permadeath Mode":
			set {permadeath.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Global Chat":
			clear {useGlobalChat.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Global Chat":
			set {useGlobalChat.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Verbose Combat Log":
			clear {verboseCombatLogging.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Verbose Combat Log":
			set {verboseCombatLogging.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Item Loss":
			clear {useItemLoss.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Item Loss":
			set {useItemLoss.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<light green>Helm Splitter":
			clear {enableHelmSplitter.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>Helm Splitter":
			set {enableHelmSplitter.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<cyan>CoS Legacy save detected!":
			set {disableLegacyBonus.%player%} to true
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gray>CoS Legacy save detected!":
			clear {disableLegacyBonus.%player%}
			make player execute command "/charsetup 7"
		else if the name of the clicked item is "<gold>Reset Holy Blood":
			clear {holyBlood.%player%::*}
			set {charsetup_holyBloodAlloc.%player%} to 2
			if {traits.%player%::Divine Bloodline} is true:
				add 1 to {charsetup_holyBloodAlloc.%player%}
			play sound "entity.zombie_villager.cure" with volume 0.3 and pitch 1 at the player for the player
			set {pts_HP.%player%} to 15
			set {pts_MAG.%player%} to 5
			set {pts_RES.%player%} to 5
			set {pts_STR.%player%} to 5
			set {pts_DEF.%player%} to 5
			set {pts_SPD.%player%} to 5
			set {pts_LCK.%player%} to 5
			set {pts_CHR.%player%} to 5
			set {csetup_pointsToSpend.%player%} to 8
			loop {holyBlood.%player%::*}:
				if loop-value is 1:
					subtract 2 from {csetup_pointsToSpend.%player%}
				else if loop-value is 2:
					subtract 4 from {csetup_pointsToSpend.%player%}
			if {traits.%player%::Gifted} is true:
				add 4 to {csetup_pointsToSpend.%player%}
			make player execute command "/charsetup 776"
		#Change Holy Blood
		else if the name of the clicked item contains "<gold><bold>":
			set {_holyblood} to decolorize(name of the clicked item)
			if {holyBlood.%player%::%{_holyblood}%} is not set:
				if {charsetup_holyBloodAlloc.%player%} is more than 0:
					set {holyBlood.%player%::%{_holyblood}%} to 1
					subtract 1 from {charsetup_holyBloodAlloc.%player%}
					play sound "entity.zombie_villager.cure" with volume 0.3 and pitch 1 at the player for the player
					set {pts_HP.%player%} to 15
					set {pts_MAG.%player%} to 5
					set {pts_RES.%player%} to 5
					set {pts_STR.%player%} to 5
					set {pts_DEF.%player%} to 5
					set {pts_SPD.%player%} to 5
					set {pts_LCK.%player%} to 5
					set {pts_CHR.%player%} to 5
					set {csetup_pointsToSpend.%player%} to 8
					loop {holyBlood.%player%::*}:
						if loop-value is 1:
							subtract 2 from {csetup_pointsToSpend.%player%}
						else if loop-value is 2:
							subtract 4 from {csetup_pointsToSpend.%player%}
					if {traits.%player%::Gifted} is true:
						add 4 to {csetup_pointsToSpend.%player%}
					make player execute command "/charsetup 776"
			else if {holyBlood.%player%::%{_holyblood}%} is 1:
				if {charsetup_holyBloodAlloc.%player%} is more than 0:
					#Only 1 major Holy Blood at a time
					loop {holyBlood.%player%::*}:
						if loop-value is 2:
							cancel event
							make player execute command "/charsetup 776"
							exit 1 loop
					subtract 1 from {charsetup_holyBloodAlloc.%player%}
					play sound "entity.zombie_villager.cure" with volume 0.3 and pitch 1 at the player for the player
					set {pts_HP.%player%} to 15
					set {pts_MAG.%player%} to 5
					set {pts_RES.%player%} to 5
					set {pts_STR.%player%} to 5
					set {pts_DEF.%player%} to 5
					set {pts_SPD.%player%} to 5
					set {pts_LCK.%player%} to 5
					set {pts_CHR.%player%} to 5
					set {holyBlood.%player%::%{_holyblood}%} to 2
					set {csetup_pointsToSpend.%player%} to 8
					loop {holyBlood.%player%::*}:
						if loop-value is 1:
							subtract 2 from {csetup_pointsToSpend.%player%}
						else if loop-value is 2:
							subtract 4 from {csetup_pointsToSpend.%player%}
					if {traits.%player%::Gifted} is true:
						add 4 to {csetup_pointsToSpend.%player%}
					make player execute command "/charsetup 776"
				else:
					play sound "entity.zombie_villager.cure" with volume 0.3 and pitch 1 at the player for the player
					set {pts_HP.%player%} to 15
					set {pts_MAG.%player%} to 5
					set {pts_RES.%player%} to 5
					set {pts_STR.%player%} to 5
					set {pts_DEF.%player%} to 5
					set {pts_SPD.%player%} to 5
					set {pts_LCK.%player%} to 5
					set {pts_CHR.%player%} to 5
					clear {holyBlood.%player%::%{_holyblood}%}
					add 1 to {charsetup_holyBloodAlloc.%player%}
					set {csetup_pointsToSpend.%player%} to 8
					loop {holyBlood.%player%::*}:
						if loop-value is 1:
							subtract 2 from {csetup_pointsToSpend.%player%}
						else if loop-value is 2:
							subtract 4 from {csetup_pointsToSpend.%player%}
					if {traits.%player%::Gifted} is true:
						add 4 to {csetup_pointsToSpend.%player%}
					make player execute command "/charsetup 776"
			else if {holyBlood.%player%::%{_holyblood}%} is 2:
				play sound "entity.zombie_villager.cure" with volume 0.3 and pitch 1 at the player for the player
				set {pts_HP.%player%} to 15
				set {pts_MAG.%player%} to 5
				set {pts_RES.%player%} to 5
				set {pts_STR.%player%} to 5
				set {pts_DEF.%player%} to 5
				set {pts_SPD.%player%} to 5
				set {pts_LCK.%player%} to 5
				set {pts_CHR.%player%} to 5
				clear {holyBlood.%player%::%{_holyblood}%}
				add 2 to {charsetup_holyBloodAlloc.%player%}
				set {csetup_pointsToSpend.%player%} to 8
				loop {holyBlood.%player%::*}:
					if loop-value is 1:
						subtract 2 from {csetup_pointsToSpend.%player%}
					else if loop-value is 2:
						subtract 4 from {csetup_pointsToSpend.%player%}
				if {traits.%player%::Gifted} is true:
					add 4 to {csetup_pointsToSpend.%player%}
				make player execute command "/charsetup 776"
		#Finalize Character
		else if the name of the clicked item is "<gold>Confirm Character":
			close the player's inventory
			#Base class perks
			if {race.%player%} is "Dragonborn":
				if {traits.%player%::Half-Breed} is not true:
					if {background.%player%} is "Windcaller":
						make player execute command "/grantskill 0 Gale Soul"
					else if {background.%player%} is "Firestorm":
						make player execute command "/grantskill 0 Flame Soul"
					else if {background.%player%} is "Waterflow":
						make player execute command "/grantskill 0 Aqua Soul"
				make player execute command "/grantskill 0 Flight"
			else if {race.%player%} is "Human":
				make player execute command "/grantskill 0 Intuition"
			else if {race.%player%} is "Elf":
				make player execute command "/grantskill 0 Concentration"
			else if {race.%player%} is "Dwarf":
				make player execute command "/grantskill 0 Gold Digger"
			else if {race.%player%} is "Orc":
				make player execute command "/grantskill 0 Face The Enemy"
			#everyone should have it so it's pointless
			#if {legacy_name.%player%} is set:
			#	if {disableLegacyBonus.%player%} is not set:
			#		give 1 paper named "<light green>Bullion (XL)" with lore "<white>A massive stash of gold. It's your lucky day!", "<white>Right-click to gain 200G." to the player
			#		give 1 iron sword of unbreaking 20 named "<light blue>Legacy Blade" with lore "", "<light blue><bold>Slot B - Despoil", "", "", "", "", "<white>A blade that transcends time.", "<white>You can't explain it, but this sword is extremely familiar to you." to the player
			set {promoted.%player%} to 0
			set {lvl.%player%} to 1
			set {classXP.%player%} to 0
			set {lvlcap.%player%} to 0
			set {promotionready.%player%} to 1
			open chest inventory with 2 rows named "<gold><bold>Select a ring." for the player
			set slot 0 of the player's current inventory to 1 music disc far named "<light green><bold>Life Ring" with lore "<white>While in your inventory:", "<light green>Recover 10%% of your max HP every 15 seconds."
			set slot 1 of the player's current inventory to 1 music disc wait named "<light blue><bold>Elite Ring" with lore "<white>While in your inventory:", "<light blue>Gain bonus experience for slaying monsters."
			set slot 2 of the player's current inventory to 1 music disc 13 named "<yellow><bold>Thief Ring" with lore "<white>While in your inventory:", "<yellow>Slain monsters have a chance to drop extra money."
			set slot 3 of the player's current inventory to 1 music disc mall named "<light purple><bold>Return Ring" with lore "<white>While in your inventory:", "<light purple>Teleport to a custom location.", "<light purple>Hold Sneak and Right-click to set the warp destination.", "<light purple>Right-click without sneaking to warp."
			set slot 4 of the player's current inventory to 1 music disc wait named "<light cyan><bold>Speed Ring" with lore "<white>While in your inventory:", "<light cyan>Grants Swiftness 2."
			set slot 5 of the player's current inventory to 1 music disc chirp named "<light red><bold>Power Ring" with lore "<white>While in your inventory:", "<light red>Grants Strength 2."
			set slot 6 of the player's current inventory to 1 music disc strad named "<white><bold>Shield Ring" with lore "<white>While in your inventory:", "<white>Grants Resistance 2."
			#set slot 7 of the player's current inventory to 1 music disc 13 named "<orange><bold>Prayer Ring" with lore "<white>While in your inventory:", "<orange>Attacks while below 50%% health will always be critical hits."
			#set slot 8 of the player's current inventory to 1 music disc cat named "<green><bold>Pursuit Ring" with lore "<white>While in your inventory:", "<green>Boosts damage by 40%% if initiating combat with HP >= 70%%."
	#Selecting a Ring
	else if the name of the player's current inventory is "<gold><bold>Select a ring.":
		cancel event
		if the name of the clicked item contains "Ring":
			close the player's inventory
			give clicked item to the player
			#Give starter weapons based on primary/secondary preference
			if {primaryWeaponType.%player%} is "Swords":
				give 1 iron sword of unbreaking 3 named "<light blue>Silver Sword <gold>[+1]" with nbt "{mergeCount:1}" with lore "<white>A highly refined blade with deadly strikes." to the player
			else if {primaryWeaponType.%player%} is "Lances":
				give 1 iron shovel of unbreaking 3 named "<light blue>Silver Lance <gold>[+1]" with nbt "{mergeCount:1,LanceType:2}" with lore "<white>A highly refined lance with deadly strikes." to the player
			else if {primaryWeaponType.%player%} is "Axes":
				give 1 iron axe of unbreaking 3 named "<light blue>Silver Axe <gold>[+1]" with nbt "{mergeCount:1}" with lore "<white>A highly refined axe with deadly strikes." to the player
			else if {primaryWeaponType.%player%} is "Bows":
				give 1 bow of unbreaking 3 named "<light blue>Silver Bow <gold>[+1]" with nbt "{mergeCount:1}" with lore "<white>A highly refined bow with deadly strikes." to the player
				give 32 arrow to the player
			else if {primaryWeaponType.%player%} is "Gauntlets":
				give 1 iron hoe of unbreaking 3 named "<light blue>Silver Gauntlets <gold>[+1]" with nbt "{mergeCount:1,GauntletType:2}" with lore "<white>A highly refined pair of gauntlets with deadly strikes." to the player
			else if {primaryWeaponType.%player%} is "Daggers":
				give 64 arrow of sharpness 3 named "<light blue>Silver Daggers <gold>[+5]" with nbt "{mergeCount:5,DaggerType:2}" with lore "<white>A highly refined set of daggers with deadly strikes." to the player	
			else if {primaryWeaponType.%player%} is "Wands":
				give 1 blaze rod of power 5 named "<light yellow><bold>Magic Wand <reset><gold>[+1]" with nbt "{mergeCount:1,isWand:1}" with lore "<white>A powerful wand able to cast devastating spells." to the player
			else if {primaryWeaponType.%player%} is "Tomes":
				give 1 book named "<light yellow>Arcfire <reset><gold>[+1]" with nbt "{mergeCount:1,TomeType:9}" with lore "<white>An advanced tome containing a powered-up Elfire spell.", "<white>It has been enhanced for stronger casting.", "", "", "", "", "", "", "", "Uses Left:", "200" to the player
			else if {primaryWeaponType.%player%} is "Staves":
				give 1 diamond hoe of power 5 named "<yellow><bold>Hammerne" with lore "<white>A unique healing staff that repairs the target's held weapon." to the player
			else if {primaryWeaponType.%player%} is "Pistols":
				give 1 iron horse armor named "<light gray>Big Iron <gold>[+5]" with nbt "{mergeCount:5,FirearmType:16}" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 6):", "6", "<white><italics>Nobody'll dare to make a slip." to the player
				give 18 iron nugget to the player
				give 6 gunpowder to the player
			else if {primaryWeaponType.%player%} is "Rifles":
				give 1 iron horse armor named "<light gray>Redstone Repeater <gold>[+5]" with nbt "{mergeCount:5,FirearmType:3}" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 30):", "30", "<white><italics>A middlingly accurate fully-automatic." to the player
				give 45 iron nugget to the player
				give 2 gunpowder to the player			
			else if {primaryWeaponType.%player%} is "Shotguns":
				give 1 golden horse armor named "<light gray>Redgrave Coyote-Alpha <gold>[+5]" with nbt "{mergeCount:5,FirearmType:5}" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 5):", "5", "<white><italics>High-damage pump-action, but with large spread." to the player
				give 8 gold nugget to the player
				give 8 gunpowder to the player
			#Secondary pref
			if {secondaryWeaponType.%player%} is "Swords":
				give 1 iron sword of unbreaking 5 named "<light blue>Steel Sword <gold>[+1]" with nbt "{mergeCount:1}" with lore "<white>A strong blade of fair quality." to the player
			else if {secondaryWeaponType.%player%} is "Lances":
				give 1 iron shovel of unbreaking 5 named "<light blue>Steel Lance <gold>[+1]" with nbt "{mergeCount:1,LanceType:2}" with lore "<white>A strong axe of fair quality." to the player
			else if {secondaryWeaponType.%player%} is "Axes":
				give 1 iron axe of unbreaking 5 named "<light blue>Steel Axe <gold>[+1]" with nbt "{mergeCount:1}" with lore "<white>A strong lance of fair quality." to the player
			else if {secondaryWeaponType.%player%} is "Bows":
				give 1 bow of unbreaking 5 named "<light blue>Steel Bow <gold>[+1]" with nbt "{mergeCount:1}" with lore "<white>A strong bow of fair quality." to the player
			else if {secondaryWeaponType.%player%} is "Gauntlets":
				give 1 iron hoe of unbreaking 5 named "<light blue>Steel Gauntlets <gold>[+1]" with nbt "{mergeCount:1,GauntletType:2}" with lore "<white>A strong pair of gauntlets of fair quality." to the player
			else if {secondaryWeaponType.%player%} is "Daggers":
				give 64 arrow of sharpness 3 named "<light blue>Steel Daggers <gold>[+1]" with nbt "{mergeCount:1,DaggerType:2}" with lore "<white>A strong set of daggers of fair quality." to the player	
			else if {secondaryWeaponType.%player%} is "Wands":
				give 1 blaze rod of power 5 named "<light yellow><bold>Magic Wand <reset><gold>[+1]" with nbt "{mergeCount:1,isWand:1}" with lore "<white>A refined wand with increased spellcasting ability." to the player
			else if {secondaryWeaponType.%player%} is "Tomes":
				give 1 book named "<light yellow>Flare <gold>[+1]" with nbt "{mergeCount:1,TomeType:1}" with lore "<white>A special Ember tome made for students of wizardry.", "", "", "", "", "", "", "", "", "Uses Left:", "300" to the player
			else if {secondaryWeaponType.%player%} is "Staves":
				give 1 diamond hoe of power 1 named "<yellow><bold>Fortify" with lore "<white>A unique healing staff that also grants Resistance to the target." to the player
			else if {secondaryWeaponType.%player%} is "Pistols":
				give 1 iron horse armor named "<light gray>Flintlock Pistol <gold>[+4]" with nbt "{mergeCount:4,FirearmType:0}" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 1):", "1", "<white><italics>Slow, but works in a pinch." to the player
				give 12 cobblestone to the player
				give 12 gunpowder to the player			
			else if {secondaryWeaponType.%player%} is "Rifles":
				give 1 iron horse armor named "<light gray>Iron Musket <gold>[+4]" with nbt "{mergeCount:4,FirearmType:1}" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 1):", "1", "<white><italics>Primitive, but effective... if it hits." to the player
				give 8 cobblestone to the player
				give 8 gunpowder to the player
			else if {secondaryWeaponType.%player%} is "Shotguns":
				give 1 golden horse armor named "<light gray>Teufort Two-Timer <gold>[+1]" with nbt "{mergeCount:1,FirearmType:6}" with lore "<white>Slot A - Empty", "<white>Slot B - Empty", "<white>Slot C - Empty", "<white>Assist - Empty", "<white>Special - Empty", "<white>Refine - N/A", "<white><bold>Clip (MAX: 2):", "2", "<white><italics>Fires with enough force to push things around." to the player
				give 4 gold nugget to the player
				give 2 gunpowder to the player
			set {weaponranks.%player%::%{primaryWeaponType.%player%}%} to "B"
			set {weaponranks.%player%::%{secondaryWeaponType.%player%}%} to "D"
			set {weapondamagetotals.%player%::%{primaryWeaponType.%player%}%} to 144
			set {weapondamagetotals.%player%::%{secondaryWeaponType.%player%}%} to 64
			if {traits.%player%::Way of the Warrior} is true:
				set {weaponranks.%player%::Swords} to "<gold>SS"
				set {weapondamagetotals.%player%::Swords} to 1337
			if {traits.%player%::Hoarder} is true:
				give 1 chest named "<gold>Portable Banker" with lore "<white>Right-click to access your bank vault." to the player
			make player execute command "/class promote %{class.%player%}%"
	#Quotes - Import Quotes from Save
	else if the name of the player's current inventory is "<gold>Select save to import quotes from:":
		#Only allow actual save slots
		if the name of the clicked item contains "Slot":
			set {playerQuotes.%player%::*} to {sslot%index of event-slot%.%player%.quotes::*}
			send formatted "<gold>Imported quotes from slot %index of event-slot + 1%." to the player
			play sound "button.ui.click" with volume 1 and pitch 1 at the player for the player
			close the player's inventory
	#CStats GUI protector
	else if the name of the player's current inventory contains "<gold>Stats for":
		cancel event
#MARKER - Quotes

#Cosmetics:
#arg 1: 0 = help, 1 = add, 2 = remove
#arg 2: type of quote, 1 = level-up, 2 = skill activation, 3 = character name
#arg 3: slot			
command /cosmetics [<number=0>] [<number=0>] [<number=0>]:
	aliases: /quotes, /seesass, /csass, /csas
	trigger:
		if arg 1 is 0:
			send formatted "<run command:/cosmetics 1 3><gold>1 - Change character's name."
			send formatted "<run command:/cosmetics 1 1><yellow>2 - Configure Level-Up Responses."
			send formatted "<run command:/cosmetics 1 2><light green>3 - Configure Special skill activation responses."
			send formatted "<run command:/cosmetics 1 4><light blue>4 - Configure context-sensitive responses."
			send formatted "<run command:/cosmetics 4><light purple>5 - Select a premade reponse set."
			send formatted "<run command:/cosmetics 776><light purple>6 - Import responses from another save."
		else if arg 1 is 1:
			if arg 2 is 1:
				send formatted "<light green>Click a slot shown here and send formatted a message in chat to change the quote."
				send formatted "<light green>Level-up quotes:"
				send formatted "<run command:/cosmetics 3 1 1><light green>1 - Poor level-up (1 stat up): %{playerQuotes.%player%::BadLevelUp}%"
				send formatted "<run command:/cosmetics 3 1 2><light green>2 - Average level-up (2-4 stats up): %{playerQuotes.%player%::AverageLevelUp}%"
				send formatted "<run command:/cosmetics 3 1 3><light green>3 - Good level-up (5-6 stats up): %{playerQuotes.%player%::GoodLevelUp}%"
				send formatted "<run command:/cosmetics 3 1 4><light green>4 - Max Potential (only a few more possible): %{playerQuotes.%player%::MaxLevel}%"
				send formatted "<run command:/cosmetics 3 1 5><light green>5 - Class Up (Promotion): %{playerQuotes.%player%::Promotion}%"
				send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			else if arg 2 is 2:
				send formatted "<yellow>Click a slot shown here and send formatted a message in chat to change the quote."
				send formatted "<yellow>Skill Activation quotes (sent to both you and your foe):"
				send formatted "<run command:/cosmetics 3 2 1><yellow>Slot 1: %{playerQuotes.%player%::SpecialProc1}%"
				send formatted "<run command:/cosmetics 3 2 2><yellow>Slot 2: %{playerQuotes.%player%::SpecialProc2}%"
				send formatted "<run command:/cosmetics 3 2 3><yellow>Slot 3: %{playerQuotes.%player%::SpecialProc3}%"
				send formatted "<run command:/cosmetics 3 2 4><yellow>Slot 4: %{playerQuotes.%player%::SpecialProc4}%"
				send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			else if arg 2 is 3:
				send formatted "<gold>Type in a new name for your character in chat."
				send formatted "<gold>You can add colours using standard colour codes."
				set {editName.%player%} to true
			else if arg 2 is 4:
				send formatted "<run command:/cosmetics 1 5><light blue>Player health quotes"
				send formatted "<run command:/cosmetics 1 6><light blue>Ally health responses"
				send formatted "<run command:/cosmetics 1 7><light blue>Player victory quotes"
				send formatted "<run command:/cosmetics 1 8><light blue>Ally victory responses"
				send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			else if arg 2 is 5:
				send formatted "<light blue>Player health quotes (click to edit):"
				send formatted "<run command:/cosmetics 3 3 1><light blue>1 - Low HP: %{playerQuotes.%player%::LowHealth}%"
				send formatted "<run command:/cosmetics 3 3 2><light blue>2 - Medium HP: %{playerQuotes.%player%::MediumHealth}%"
				send formatted "<run command:/cosmetics 3 3 3><light blue>3 - Downed: %{playerQuotes.%player%::Downed}%"
				send formatted "<run command:/cosmetics 3 3 4><light blue>4 - Death: %{playerQuotes.%player%::Death}%"
				send formatted "<run command:/cosmetics 3 3 18><light blue>5 - Death [Hardcore]: %{playerQuotes.%player%::HardcoreDeath}%"
				send formatted "<run command:/cosmetics 3 3 5><light blue>6 - Healed by ally: %{playerQuotes.%player%::ThanksForHeals1}%"
				send formatted "<run command:/cosmetics 1 4><blue>Go Back"
			else if arg 2 is 6:
				send formatted "<light blue>Ally health responses (click to edit):"
				send formatted "<run command:/cosmetics 3 3 6><light blue>1 - Ally hurt: %{playerQuotes.%player%::AllyHurtLarge01}%"
				send formatted "<run command:/cosmetics 3 3 7><light blue>2 - Ally hurt: %{playerQuotes.%player%::AllyHurtLarge02}%"
				send formatted "<run command:/cosmetics 3 3 8><light blue>3 - Ally needs healing: %{playerQuotes.%player%::AllyNeedsHealing01}%"
				send formatted "<run command:/cosmetics 3 3 9><light blue>4 - Ally dies: %{playerQuotes.%player%::AllyDeath}%"
				send formatted "<run command:/cosmetics 3 3 10><light blue>5 - Ally dies (hardcore): %{playerQuotes.%player%::AllyHardcoreDeath}%"
				send formatted "<run command:/cosmetics 3 3 11><light blue>6 - Picking up downed ally: %{playerQuotes.%player%::AllyDowned}%"
				send formatted "<run command:/cosmetics><blue>Go Back"
			else if arg 2 is 7:
				send formatted "<light blue>Player victory quotes (click to edit):"
				send formatted "<run command:/cosmetics 3 3 12><light blue>1 - Enemy defeated: %{playerQuotes.%player%::EnemyDefeated01}%"
				send formatted "<run command:/cosmetics 3 3 13><light blue>2 - Enemy defeated: %{playerQuotes.%player%::EnemyDefeated02}%"
				send formatted "<run command:/cosmetics 3 3 14><light blue>3 - Boss defeated: %{playerQuotes.%player%::BossDefeated01}%"
				send formatted "<run command:/cosmetics 3 3 15><light blue>4 - Boss defeated: %{playerQuotes.%player%::BossDefeated02}%"
				send formatted "<run command:/cosmetics 1 4><blue>Go Back"
			else if arg 2 is 8:
				send formatted "<light blue>Ally victory responses (click to edit):"
				send formatted "<run command:/cosmetics 3 3 16><light blue>1 - Ally defeats enemy: %{playerQuotes.%player%::AllyEnemyDefeated01}%"
				send formatted "<run command:/cosmetics 3 3 17><light blue>2 - Ally defeats enemy: %{playerQuotes.%player%::AllyEnemyDefeated02}%"
				send formatted "<run command:/cosmetics 1 4><blue>Go Back"
		#Import quotes
		else if arg 1 is 776:
			open chest inventory with 6 rows named "<gold>Select save to import quotes from:" for the player
			set {_guiSlot} to 0
			loop 45 times:
				if {sslot%{_guiSlot}%.%player%::name} is not set:
					set slot {_guiSlot} of the player's current inventory to 1 chest named "<light yellow>Slot %{_guiSlot} +1%: Empty" with lore "<white>This save slot is empty."
				else:
					set slot {_guiSlot} of the player's current inventory to 1 ender chest named "<light yellow>Slot %{_guiSlot} + 1%: %{sslot%{_guiSlot}%.%player%::name}%" with lore "<white>%{sslot%{_guiSlot}%.%player%::name}%, the level %{sslot%{_guiSlot}%.%player%::lvl}% %{sslot%{_guiSlot}%.%player%::class}%"
				add 1 to {_guiSlot}	
		else if arg 1 is 3:
			if arg 2 is 1:
				set {editLevelQuote%arg 3%.%player%} to true
				send formatted "<light green>Type in the new quote now."
			else if arg 2 is 2:
				set {editplayerQuotes.%player%::SpecialProc%arg 3%} to true
				send formatted "<yellow>Type in the new quote now."
			else if arg 2 is 3:
				set {editCSQuote%arg 3%.%player%} to true
				send formatted "<light blue>Type in the new quote now."
		else if arg 1 is 4:
			send formatted "<light purple>Quote Presets:"
			send formatted "<run command:/cosmetics 5 1><light purple>Gray"
			send formatted "<run command:/cosmetics 5 2><light purple>Alm"
			send formatted "<run command:/cosmetics 5 5><light purple>Greil"
			send formatted "<run command:/cosmetics 5 6><light purple>Reinhardt"
			send formatted "<run command:/cosmetics 5 7><light purple>Lukas"
			send formatted "<run command:/cosmetics 5 11><light purple>Leif"
			send formatted "<run command:/cosmetics 5 3><light purple>Genny"
			send formatted "<run command:/cosmetics 5 4><light purple>Clair"
			send formatted "<run command:/cosmetics 5 8><light purple>Celica"
			send formatted "<run command:/cosmetics 5 9><light purple>Faye"
			send formatted "<run command:/cosmetics 5 10><light purple>Katarina"
			send formatted "<run command:/cosmetics 5 12><light green>Silent"
			send formatted "<run command:/cosmetics><light blue>Go Back"
		else if arg 1 is 5:
			if arg 2 is 1:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "Uh, what was THAT?"
					set {playerQuotes.%player%::AverageLevelUp} to "This'll do. I guess."
					set {playerQuotes.%player%::GoodLevelUp} to "Lady luck smiles on me... Thanks, lady!"
					set {playerQuotes.%player%::MaxLevel} to "Can't ask for more than this."
					set {playerQuotes.%player%::Promotion} to "Welp, here goes nothing."
					set {playerQuotes.%player%::SpecialProc1} to "Aaaand, we're done!"
					set {playerQuotes.%player%::SpecialProc2} to "Come at me, fools!"
					set {playerQuotes.%player%::SpecialProc3} to "Bye now!"
					set {playerQuotes.%player%::SpecialProc4} to "Sorry!"
					set {playerQuotes.%player%::LowHealth} to "I'm ready to keel over here..."
					set {playerQuotes.%player%::ThanksForHeals1} to "Hey, thanks!"
					set {playerQuotes.%player%::MediumHealth} to "Nothing serious... Just keep going."
					set {playerQuotes.%player%::Downed} to "It's not too... Ow. Okay, yeah that hurts. Someone mind helping me out?"
					set {playerQuotes.%player%::AllyDowned} to "What're you doing? Get up!"
					set {playerQuotes.%player%::EnemyDefeated02} to "It's hard being this good."
					set {playerQuotes.%player%::EnemyDefeated01} to "Well, look at me go!"
					set {playerQuotes.%player%::BossDefeated01} to "Hey, can the next fight be less... painful?"
					set {playerQuotes.%player%::BossDefeated02} to "Heh, look who's still standing!"
					set {playerQuotes.%player%::Death} to "Why must the good men die... so young..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "Hey, heal before you're dead, yeah?"
					set {playerQuotes.%player%::AllyDeath} to "Even I can't find a bright side to this..."
					set {playerQuotes.%player%::AllyHardcoreDeath} to "You idiot... What were you thinking...?!"
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Hey, stop hoggin' all the fun!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "Well, lookie there!"
					set {playerQuotes.%player%::allyEnemyDefeated03} to "Man, look at you go!"
					set {playerQuotes.%player%::AllyHurtLarge01} to "You alright there?"
					set {playerQuotes.%player%::AllyHurtLarge02} to "Hey, careful!"
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Gray"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: Uh, what was THAT?"
					send formatted "<light purple>Good Level-up: Lady luck smiles on me... Thanks, lady!"
					send formatted "<light purple>Skill activation 1: Aaaand, we're done!"
					send formatted "<light purple>Skill activation 2: Come at me, fools!"
					send formatted "<light purple>Low HP warning: I'm ready to keel over here..."
					send formatted "<run command:/cosmetics 5 1 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 2:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "Huh? ...Just my imagination I guess."
					set {playerQuotes.%player%::AverageLevelUp} to "I can tell I'm getting stronger."
					set {playerQuotes.%player%::GoodLevelUp} to "It's almost as if someone's watching over me..."
					set {playerQuotes.%player%::MaxLevel} to "Well, there's not much else I can work on."
					set {playerQuotes.%player%::Promotion} to "Now I'll show them what I can really do."
					set {playerQuotes.%player%::SpecialProc1} to "This is how it's done!"
					set {playerQuotes.%player%::SpecialProc2} to "This ends here!"
					set {playerQuotes.%player%::SpecialProc3} to "Take this!"
					set {playerQuotes.%player%::SpecialProc4} to "It's over!"
					set {playerQuotes.%player%::LowHealth} to "This is tough..."
					set {playerQuotes.%player%::ThanksForHeals1} to "Thank you."
					set {playerQuotes.%player%::MediumHealth} to "I can do this..."
					set {playerQuotes.%player%::Downed} to "Any more and I become a liability... I need some help..."
					set {playerQuotes.%player%::AllyDowned} to "Stay focused, all right?"
					set {playerQuotes.%player%::EnemyDefeated02} to "That should do it!"
					set {playerQuotes.%player%::EnemyDefeated01} to "There we go!"
					set {playerQuotes.%player%::BossDefeated01} to "That was a fine victory."
					set {playerQuotes.%player%::BossDefeated02} to "This is my strength."
					set {playerQuotes.%player%::Death} to "No... not when we were... so close..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You'd better heal."
					set {playerQuotes.%player%::AllyDeath} to "Wha...?! No, no! Not you..!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "I knew there would be sacrifices, but..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "You did it again!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "You really are amazing."
					set {playerQuotes.%player%::allyEnemyDefeated03} to "I'm proud to know you!"
					set {playerQuotes.%player%::AllyHurtLarge01} to "Hey. Focus."
					set {playerQuotes.%player%::AllyHurtLarge02} to "You need to be careful."
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Alm"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: Huh? ...Just my imagination I guess."
					send formatted "<light purple>Good Level-up: I can tell I'm getting stronger."
					send formatted "<light purple>Skill activation 1: This is how it's done!"
					send formatted "<light purple>Skill activation 2: This ends here!"
					send formatted "<light purple>Low HP warning: This is tough..."
					send formatted "<run command:/cosmetics 5 2 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 5:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "Whoops. Sorry about that."
					set {playerQuotes.%player%::AverageLevelUp} to "Getting back into the swing of things..."
					set {playerQuotes.%player%::GoodLevelUp} to "Everyone's watching. I have to give 'em a show."
					set {playerQuotes.%player%::MaxLevel} to "Looks like I've reached my peak."
					set {playerQuotes.%player%::Promotion} to "A lot's expected of me. I'd better deliver."
					set {playerQuotes.%player%::SpecialProc1} to "I'll start us off."
					set {playerQuotes.%player%::SpecialProc2} to "I need to survive."
					set {playerQuotes.%player%::SpecialProc3} to "I like your resolve."
					set {playerQuotes.%player%::SpecialProc4} to "Here's a gift."
					set {playerQuotes.%player%::LowHealth} to "Haven't felt like this... in a long time."
					set {playerQuotes.%player%::ThanksForHeals1} to "Thanks."
					set {playerQuotes.%player%::MediumHealth} to "I've still got plenty left in me."
					set {playerQuotes.%player%::Downed} to "I'm faltering... If someone could help me out..."
					set {playerQuotes.%player%::AllyDowned} to "Don't push yourself too hard, now."
					set {playerQuotes.%player%::EnemyDefeated02} to "There we go."
					set {playerQuotes.%player%::EnemyDefeated01} to "Done."
					set {playerQuotes.%player%::BossDefeated01} to "Well fought."
					set {playerQuotes.%player%::BossDefeated02} to "Looks like more training was needed."
					set {playerQuotes.%player%::Death} to "I can do no more..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You should get healing."
					set {playerQuotes.%player%::AllyDeath} to "What?! You can't die like this..!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "I'm sorry. I should've done more for you..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "I'm proud of you."
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "Well, well."
					set {playerQuotes.%player%::allyEnemyDefeated03} to "Well done."
					set {playerQuotes.%player%::AllyHurtLarge01} to "Keep your chin up."
					set {playerQuotes.%player%::AllyHurtLarge02} to "Back away. Let me take care of this."
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Greil"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: Whoops. Sorry about that."
					send formatted "<light purple>Good Level-up: Everyone's watching. I have to give 'em a show."
					send formatted "<light purple>Skill activation 1: I'll start us off."
					send formatted "<light purple>Skill activation 2: I need to survive."
					send formatted "<light purple>Low HP warning: Haven't felt like this... in a long time."
					send formatted "<run command:/cosmetics 5 5 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 3:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "...Huh?"
					set {playerQuotes.%player%::AverageLevelUp} to "I think I'm getting stronger."
					set {playerQuotes.%player%::GoodLevelUp} to "I did pretty good, right?"
					set {playerQuotes.%player%::MaxLevel} to "I'm ready to roll!"
					set {playerQuotes.%player%::Promotion} to "Please, offer me guidance..."
					set {playerQuotes.%player%::SpecialProc1} to "I... do not... like you!"
					set {playerQuotes.%player%::SpecialProc2} to "Now I'm angry!"
					set {playerQuotes.%player%::SpecialProc3} to "Sorry!"
					set {playerQuotes.%player%::SpecialProc4} to "You need to move!"
					set {playerQuotes.%player%::LowHealth} to "I-I'll try my best..."
					set {playerQuotes.%player%::ThanksForHeals1} to "I really needed that!"
					set {playerQuotes.%player%::MediumHealth} to "Okay, I got this."
					set {playerQuotes.%player%::Downed} to "This... this is too much... Can someone help me?"
					set {playerQuotes.%player%::AllyDowned} to "Cheer up!"
					set {playerQuotes.%player%::EnemyDefeated02} to "Like this?"
					set {playerQuotes.%player%::EnemyDefeated01} to "Yah!"
					set {playerQuotes.%player%::BossDefeated01} to "Hehe... I did pretty good, right?"
					set {playerQuotes.%player%::BossDefeated02} to "No one likes a bully!"
					set {playerQuotes.%player%::Death} to "Oof... that hurts... Is this...goodbye?"
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You need to be healed..."
					set {playerQuotes.%player%::AllyDeath} to "No, please! Don't go yet..!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "No..! I hate this..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Watch my back, okay?"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "You're amazing!"
					set {playerQuotes.%player%::allyEnemyDefeated03} to "Wow! You're really strong, huh?"
					set {playerQuotes.%player%::AllyHurtLarge01} to "Watch out!"
					set {playerQuotes.%player%::AllyHurtLarge02} to "Please be careful..."
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Genny"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: ...Huh?"
					send formatted "<light purple>Good Level-up: I did pretty good, right?"
					send formatted "<light purple>Skill activation 1: I... do not... like you!"
					send formatted "<light purple>Skill activation 2: You need to move!"
					send formatted "<light purple>Low HP warning: I-I'll try my best..."
					send formatted "<run command:/cosmetics 5 3 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 4:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "I felt...something. But it wasn't anything to pen home about."
					set {playerQuotes.%player%::AverageLevelUp} to "Next time, I insist my growths improve."
					set {playerQuotes.%player%::GoodLevelUp} to "Fate and fortune smile upon me!"
					set {playerQuotes.%player%::MaxLevel} to "Have you ever seen such physical perfection?"
					set {playerQuotes.%player%::Promotion} to "If this is the life I shall lead..."
					set {playerQuotes.%player%::SpecialProc1} to "You should be honored."
					set {playerQuotes.%player%::SpecialProc2} to "On your knees!"
					set {playerQuotes.%player%::SpecialProc3} to "You brute!"
					set {playerQuotes.%player%::SpecialProc4} to "Too late!"
					set {playerQuotes.%player%::LowHealth} to "If we must..."
					set {playerQuotes.%player%::ThanksForHeals1} to "Why, thank you."
					set {playerQuotes.%player%::MediumHealth} to "Shall we, then?."
					set {playerQuotes.%player%::Downed} to "How careless of me... I require aid..."
					set {playerQuotes.%player%::AllyDowned} to "I insist we do better."
					set {playerQuotes.%player%::EnemyDefeated02} to "May I?"
					set {playerQuotes.%player%::EnemyDefeated01} to "Begone!"
					set {playerQuotes.%player%::BossDefeated01} to "I hope you were all watching."
					set {playerQuotes.%player%::BossDefeated02} to "A glorious victory."
					set {playerQuotes.%player%::Death} to "I may have pushed myself... too hard..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You must heal."
					set {playerQuotes.%player%::AllyDeath} to "What? No...! No, no!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "Already, the victory feels... hollow."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Does nothing stop you?"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "That was marvelous!"
					set {playerQuotes.%player%::allyEnemyDefeated03} to "We're lucky to have you."
					set {playerQuotes.%player%::AllyHurtLarge01} to "You must not fail us."
					set {playerQuotes.%player%::AllyHurtLarge02} to "Shameful..."
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Clair"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: I  felt...something. But it wasn't anything to pen home about."
					send formatted "<light purple>Good Level-up: Fate and fortune smile upon me!"
					send formatted "<light purple>Skill activation 1: On your knees!"
					send formatted "<light purple>Skill activation 2: You should be honored."
					send formatted "<light purple>Low HP warning: If we must..."
					send formatted "<run command:/cosmetics 5 4 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 8:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "Hmm? I could've sworn I felt something..."
					set {playerQuotes.%player%::AverageLevelUp} to "Just a little more progress each day..."
					set {playerQuotes.%player%::GoodLevelUp} to "My skills on the battlefield are improving."
					set {playerQuotes.%player%::MaxLevel} to "May this strength be enough to keep my friends safe."
					set {playerQuotes.%player%::Promotion} to "I'll do whatever is needed."
					set {playerQuotes.%player%::SpecialProc1} to "This is a fight I cannot lose!"
					set {playerQuotes.%player%::SpecialProc2} to "I'm not about to stop here!"
					set {playerQuotes.%player%::SpecialProc3} to "Grant me strength!"
					set {playerQuotes.%player%::SpecialProc4} to "It's over!"
					set {playerQuotes.%player%::LowHealth} to "Ngh... Gods protect me..."
					set {playerQuotes.%player%::ThanksForHeals1} to "Much appreciated."
					set {playerQuotes.%player%::MediumHealth} to "I'm all right."
					set {playerQuotes.%player%::Downed} to "I feel I've reached my limits... I need help..."
					set {playerQuotes.%player%::AllyDowned} to "Are you alright?"
					set {playerQuotes.%player%::EnemyDefeated02} to "How's THIS?"
					set {playerQuotes.%player%::EnemyDefeated01} to "Move!"
					set {playerQuotes.%player%::BossDefeated01} to "I won't ask forgiveness."
					set {playerQuotes.%player%::BossDefeated02} to "I fight to protect what is dear."
					set {playerQuotes.%player%::Death} to "In the end, I couldn't save anyone... I'm so sorry..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You'd best take care of those wounds."
					set {playerQuotes.%player%::AllyDeath} to "Wha... No! No, please! You have to live...!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "...We must continue, no matter the cost."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Excellent!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "I'm happy you're on my side."
					set {playerQuotes.%player%::allyEnemyDefeated03} to "I can only envy your strength!"
					set {playerQuotes.%player%::AllyHurtLarge01} to "You have to stay strong."
					set {playerQuotes.%player%::AllyHurtLarge02} to "You're not finished yet, stay with us!"
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Celica"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: Hmm? I could've sworn I felt something..."
					send formatted "<light purple>Good Level-up: My skills on the battlefield are improving."
					send formatted "<light purple>Skill activation 1: This is a fight I cannot lose!"
					send formatted "<light purple>Skill activation 2: I'm not about to stop here!"
					send formatted "<light purple>Low HP warning: Ngh... Gods protect me..."
					send formatted "<run command:/cosmetics 5 8 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 9:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "Hmm... I thought I felt something."
					set {playerQuotes.%player%::AverageLevelUp} to "Just a little more progress each day..."
					set {playerQuotes.%player%::GoodLevelUp} to "It's nice to get stronger."
					set {playerQuotes.%player%::MaxLevel} to "I don't need any more muscles, thanks."
					set {playerQuotes.%player%::Promotion} to "I'll grow however I can to keep everyone safe."
					set {playerQuotes.%player%::SpecialProc1} to "Don't test me!"
					set {playerQuotes.%player%::SpecialProc2} to "Wrong move!"
					set {playerQuotes.%player%::SpecialProc3} to "I've had it!"
					set {playerQuotes.%player%::SpecialProc4} to "No more!"
					set {playerQuotes.%player%::LowHealth} to "U-um... all right..."
					set {playerQuotes.%player%::ThanksForHeals1} to "You're too kind."
					set {playerQuotes.%player%::MediumHealth} to "I'm still ready to go!"
					set {playerQuotes.%player%::Downed} to "Oh... I'm so sorry... I need help..."
					set {playerQuotes.%player%::AllyDowned} to "We all make mistakes."
					set {playerQuotes.%player%::EnemyDefeated02} to "Gotcha!"
					set {playerQuotes.%player%::EnemyDefeated01} to "Step aside!"
					set {playerQuotes.%player%::BossDefeated01} to "I was taught by the best."
					set {playerQuotes.%player%::BossDefeated02} to "Did you see that, everyone?"
					set {playerQuotes.%player%::Death} to "E-everyone... I..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You'd better do something about those wounds."
					set {playerQuotes.%player%::AllyDeath} to "Oh, no! Don't go yet, please!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "This is horrible..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Incredible!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "That got their attention."
					set {playerQuotes.%player%::allyEnemyDefeated03} to "You're a model to follow."
					set {playerQuotes.%player%::AllyHurtLarge01} to "Don't push yourself too hard."
					set {playerQuotes.%player%::AllyHurtLarge02} to "Try and be more careful, OK?"
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Faye"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: Hmm... I thought I felt something."
					send formatted "<light purple>Good Level-up: It's nice to get stronger."
					send formatted "<light purple>Skill activation 1: I've had it!"
					send formatted "<light purple>Skill activation 2: No more!"
					send formatted "<light purple>Low HP warning: U-uhm... all right..."
					send formatted "<run command:/cosmetics 5 9 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 6:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "Such a failing. Am I losing my conviction?"
					set {playerQuotes.%player%::AverageLevelUp} to "At this rate, I may achieve what I must."
					set {playerQuotes.%player%::GoodLevelUp} to "Better than expected. I should always focus this much."
					set {playerQuotes.%player%::MaxLevel} to "My will is strong. I promise excellent results."
					set {playerQuotes.%player%::Promotion} to "This is an honor. I pledge to prevail in battle."
					set {playerQuotes.%player%::SpecialProc1} to "I'll show you how it's done!"
					set {playerQuotes.%player%::SpecialProc2} to "Forward, now!"
					set {playerQuotes.%player%::SpecialProc3} to "You will back down."
					set {playerQuotes.%player%::SpecialProc4} to "This must be fate."
					set {playerQuotes.%player%::LowHealth} to "Their strength is... extraordinary..."
					set {playerQuotes.%player%::ThanksForHeals1} to "You have my gratitude."
					set {playerQuotes.%player%::MediumHealth} to "I am far from finished. What is our plan?"
					set {playerQuotes.%player%::Downed} to "Such a failing... I require assistance..."
					set {playerQuotes.%player%::AllyDowned} to "I will remain with you as long as I can."
					set {playerQuotes.%player%::EnemyDefeated02} to "Excuse me."
					set {playerQuotes.%player%::EnemyDefeated01} to "Forgive me."
					set {playerQuotes.%player%::BossDefeated01} to "Our forces are unstoppable."
					set {playerQuotes.%player%::BossDefeated02} to "Our tactics have brought us a decisive victory."
					set {playerQuotes.%player%::Death} to "My... regrets..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "I advise you to seek aid."
					set {playerQuotes.%player%::AllyDeath} to "I beg you... give me a chance to reclaim my honor..."
					set {playerQuotes.%player%::AllyHardcoreDeath} to "My dear friend... I have failed you utterly..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Your strategems are... extraordinary."
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "You have become rather formidable."
					set {playerQuotes.%player%::allyEnemyDefeated03} to "As long as we have you, there is little chance we will be defeated."
					set {playerQuotes.%player%::AllyHurtLarge01} to "Guard your health, we cannot afford to lose you."
					set {playerQuotes.%player%::AllyHurtLarge02} to "Please, stay close to me. I will protect you from further harm."
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Reinhardt"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: Such a failing. Am I losing my conviction?"
					send formatted "<light purple>Good Level-up: Better than expected. I should always focus this much."
					send formatted "<light purple>Skill activation 1: I'll show you how it's done!"
					send formatted "<light purple>Skill activation 2: You will back down."
					send formatted "<light purple>Low HP warning: Their strength is... extraordinary..."
					send formatted "<run command:/cosmetics 5 6 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 7:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "How dissapointing. I must refocus my efforts..."
					set {playerQuotes.%player%::AverageLevelUp} to "Respectable gains, but there is still more to be done."
					set {playerQuotes.%player%::GoodLevelUp} to "I'm finally reaching my stride... Hopefully my tactics can follow suit."
					set {playerQuotes.%player%::MaxLevel} to "So I've reached my peak... Now I can contribute fully."
					set {playerQuotes.%player%::Promotion} to "Ever forward, with ever greater courage!"
					set {playerQuotes.%player%::SpecialProc1} to "Just as planned!"
					set {playerQuotes.%player%::SpecialProc2} to "You've made your last mistake!"
					set {playerQuotes.%player%::SpecialProc3} to "I refuse to yield!"
					set {playerQuotes.%player%::SpecialProc4} to "Everything's fallen into place!"
					set {playerQuotes.%player%::LowHealth} to "I-its... part of the plan..."
					set {playerQuotes.%player%::ThanksForHeals1} to "My gratitude."
					set {playerQuotes.%player%::MediumHealth} to "The wounds are minimal... The plan will still work..."
					set {playerQuotes.%player%::Downed} to "Gah! Such a blunder... I require aid..."
					set {playerQuotes.%player%::AllyDowned} to "Do not blame yourself. This was a mistake on my part."
					set {playerQuotes.%player%::EnemyDefeated02} to "And so the pawn falls."
					set {playerQuotes.%player%::EnemyDefeated01} to "Checkmate."
					set {playerQuotes.%player%::BossDefeated01} to "The battle is won. Well done, everyone."
					set {playerQuotes.%player%::BossDefeated02} to "I must admit, even I did not expect such an outcome..."
					set {playerQuotes.%player%::Death} to "How could this...! My regrets... everyone..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You must be healed."
					set {playerQuotes.%player%::AllyDeath} to "No..! This wasn't a part of the plan..!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "I... I'm so ashamed of myself... How could I have made such a grevious mistake..?"
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Excellently done!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "Impressive!"
					set {playerQuotes.%player%::allyEnemyDefeated03} to "I hadn't planned for that... well done!"
					set {playerQuotes.%player%::AllyHurtLarge01} to "Be careful! We cannot afford to lose you now!"
					set {playerQuotes.%player%::AllyHurtLarge02} to "Stay behind me! I will not allow you to die under my command!"
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Lukas"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: How dissapointing. I must refocus my efforts..."
					send formatted "<light purple>Good Level-up: I'm finally reaching my stride... Hopefully my tactics can follow suit."
					send formatted "<light purple>Skill activation 1: You've made your last mistake!"
					send formatted "<light purple>Skill activation 2: Just as planned!"
					send formatted "<light purple>Low HP warning: I-its... part of the plan..."
					send formatted "<run command:/cosmetics 5 7 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 10:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "What? I fought that hard for THIS?"
					set {playerQuotes.%player%::AverageLevelUp} to "Hehe... Look at me go!"
					set {playerQuotes.%player%::GoodLevelUp} to "Ha! Looks like I've got even more comin' up!"
					set {playerQuotes.%player%::MaxLevel} to "Wow... it's amazing how far I've come!"
					set {playerQuotes.%player%::Promotion} to "Stand aside, everyone!"
					set {playerQuotes.%player%::SpecialProc1} to "Caught ya napping!"
					set {playerQuotes.%player%::SpecialProc2} to "Comin' through!"
					set {playerQuotes.%player%::SpecialProc3} to "Time to shine!"
					set {playerQuotes.%player%::SpecialProc4} to "Kaboom!"
					set {playerQuotes.%player%::LowHealth} to "I've still got a little left in me..."
					set {playerQuotes.%player%::ThanksForHeals1} to "Aww, thanks!"
					set {playerQuotes.%player%::MediumHealth} to "This is nothing! Let me at 'em!"
					set {playerQuotes.%player%::Downed} to "Ow, ow, ow... That one hurt... Could I get some help?"
					set {playerQuotes.%player%::AllyDowned} to "Hey, it happens to the best of us, right?"
					set {playerQuotes.%player%::EnemyDefeated02} to "Gotcha!"
					set {playerQuotes.%player%::EnemyDefeated01} to "Down and out!"
					set {playerQuotes.%player%::BossDefeated01} to "Nobody's a match for us!"
					set {playerQuotes.%player%::BossDefeated02} to "That... was... awesome! Can we do that again?"
					set {playerQuotes.%player%::Death} to "I-I went a little... too hard... Sorry guys..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "That looks rough, you might want to get it healed."
					set {playerQuotes.%player%::AllyDeath} to "Hey..! You can't go like that, what about the group?!"
					set {playerQuotes.%player%::AllyHardcoreDeath} to "Oh gods, I... I can't believe this is happening..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "Hey, not bad!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "That was cool!"
					set {playerQuotes.%player%::allyEnemyDefeated03} to "Keep it up!"
					set {playerQuotes.%player%::AllyHurtLarge01} to "Careful, these guys are tough!"
					set {playerQuotes.%player%::AllyHurtLarge02} to "Don't worry, I'll get 'em for you!"
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Katarina"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: What? I fought that hard for THIS?"
					send formatted "<light purple>Good Level-up: Ha! Looks like I've got even more comin' up!"
					send formatted "<light purple>Skill activation 1: Caught ya napping!"
					send formatted "<light purple>Skill activation 2: Kaboom!"
					send formatted "<light purple>Low HP warning: I've still got a little left in me..."
					send formatted "<run command:/cosmetics 5 10 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 11:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "This can't be it. It can't!"
					set {playerQuotes.%player%::AverageLevelUp} to "Good! I'm getting stronger."
					set {playerQuotes.%player%::GoodLevelUp} to "With strength like this, I'll be able to protect everyone!"
					set {playerQuotes.%player%::MaxLevel} to "I must become stronger. Much stronger."
					set {playerQuotes.%player%::Promotion} to "You don't get strong overnight. I've got to keep on inching forwards..."
					set {playerQuotes.%player%::SpecialProc1} to "Whatever it takes!"
					set {playerQuotes.%player%::SpecialProc2} to "This is MY fight!"
					set {playerQuotes.%player%::SpecialProc3} to "Your villany ends here!"
					set {playerQuotes.%player%::SpecialProc4} to "This is it!"
					set {playerQuotes.%player%::LowHealth} to "So fatigued... But I can't just give up now..."
					set {playerQuotes.%player%::ThanksForHeals1} to "Thank you! I'll do everything I can to make it up to you."
					set {playerQuotes.%player%::MediumHealth} to "I have to keep fighting..."
					set {playerQuotes.%player%::Downed} to "Grrgh... I'm still not strong enough... I need help..."
					set {playerQuotes.%player%::AllyDowned} to "I won't let you sacrifice your life for mine. You're coming with us, no matter what!"
					set {playerQuotes.%player%::EnemyDefeated02} to "Victory!"
					set {playerQuotes.%player%::EnemyDefeated01} to "I will take my homeland back!"
					set {playerQuotes.%player%::BossDefeated01} to "We've prevailed! I knew we could do it!"
					set {playerQuotes.%player%::BossDefeated02} to "This is our land, not yours!"
					set {playerQuotes.%player%::Death} to "I... failed us all..."
					set {playerQuotes.%player%::AllyNeedsHealing01} to "You need to get healed, right now!"
					set {playerQuotes.%player%::AllyDeath} to "..."
					set {playerQuotes.%player%::AllyHardcoreDeath} to "Rrgh..! I wasn't strong enough to protect anyone..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "I need to pay more attention to you!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "There's a lot I can learn from you."
					set {playerQuotes.%player%::allyEnemyDefeated03} to "If we keep on fighting together, there's no battle we can't win!"
					set {playerQuotes.%player%::AllyHurtLarge01} to "Don't overdo it!"
					set {playerQuotes.%player%::AllyHurtLarge02} to "I'm coming to help you, just hold on!"
					send formatted "<run command:/cosmetics><light blue>Preset applied. Click here to return to main set-up"
				else:
					send formatted "<light purple>Quote preset: Leif"
					send formatted "<light purple>Samples:"
					send formatted "<light purple>Bad Level-up: This can't be it. It can't!"
					send formatted "<light purple>Good Level-up: With strength like this, I'll be able to protect everyone!"
					send formatted "<light purple>Skill activation 1: This is MY fight!"
					send formatted "<light purple>Skill activation 2: Your villany ends here!"
					send formatted "<light purple>Low HP warning: So fatigued... But I can't just give up now..."
					send formatted "<run command:/cosmetics 5 11 1><light green>Apply preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"
			if arg 2 is 12:
				if arg 3 is 1:
					set {playerQuotes.%player%::BadLevelUp} to "..?"
					set {playerQuotes.%player%::AverageLevelUp} to "..."
					set {playerQuotes.%player%::GoodLevelUp} to ".!"
					set {playerQuotes.%player%::MaxLevel} to "..."
					set {playerQuotes.%player%::Promotion} to "..!!"
					set {playerQuotes.%player%::SpecialProc1} to "..!"
					set {playerQuotes.%player%::SpecialProc2} to "..."
					set {playerQuotes.%player%::SpecialProc3} to "..!"
					set {playerQuotes.%player%::SpecialProc4} to "..!!!"
					set {playerQuotes.%player%::LowHealth} to "...!"
					set {playerQuotes.%player%::ThanksForHeals1} to "..."
					set {playerQuotes.%player%::MediumHealth} to "..."
					set {playerQuotes.%player%::Downed} to "..!"
					set {playerQuotes.%player%::AllyDowned} to "..!"
					set {playerQuotes.%player%::EnemyDefeated02} to "..."
					set {playerQuotes.%player%::EnemyDefeated01} to "..!"
					set {playerQuotes.%player%::BossDefeated01} to "...!"
					set {playerQuotes.%player%::BossDefeated02} to "..!"
					set {playerQuotes.%player%::Death} to "..?"
					set {playerQuotes.%player%::AllyNeedsHealing01} to "..."
					set {playerQuotes.%player%::AllyDeath} to "..."
					set {playerQuotes.%player%::AllyHardcoreDeath} to "..."
					set {playerQuotes.%player%::AllyEnemyDefeated01} to "..!"
					set {playerQuotes.%player%::AllyEnemyDefeated02} to "..?"
					set {playerQuotes.%player%::allyEnemyDefeated03} to "..."
					set {playerQuotes.%player%::AllyHurtLarge01} to "..?"
					set {playerQuotes.%player%::AllyHurtLarge02} to "..?!"
				else:
					send formatted "<light purple>Quote preset: Silent"
					send formatted "<light purple>This option silences your quotes, replacing them with simple punctuation."
					send formatted "<run command:/cosmetics 5 12 1><light green>Apply Preset"
					send formatted "<run command:/cosmetics><light blue>Return to main set-up"

on chat:
	if {editName.%player%} is true:
		set the player's display name to the chat message
		set the player's tablist name to the chat message
		cancel event
		send formatted "<yellow>Changed your character's name to %chat message%!"
		clear {editName.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editplayerQuotes.%player%::SpecialProc1} is true:
		set {playerQuotes.%player%::SpecialProc1} to the chat message
		cancel event
		send formatted "<yellow>Changed slot 1 to %chat message%!"
		clear {editplayerQuotes.%player%::SpecialProc1}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editplayerQuotes.%player%::SpecialProc2} is true:
		set {playerQuotes.%player%::SpecialProc2} to the chat message
		cancel event
		send formatted "<yellow>Changed slot 2 to %chat message%!"
		clear {editplayerQuotes.%player%::SpecialProc2}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editplayerQuotes.%player%::SpecialProc3} is true:
		set {playerQuotes.%player%::SpecialProc3} to the chat message
		cancel event
		send formatted "<yellow>Changed slot 3 to %chat message%!"
		clear {editplayerQuotes.%player%::SpecialProc3}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editplayerQuotes.%player%::SpecialProc4} is true:
		set {playerQuotes.%player%::SpecialProc4} to the chat message
		cancel event
		send formatted "<yellow>Changed slot 4 to %chat message%!"
		clear {editplayerQuotes.%player%::SpecialProc4}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editLevelQuote1.%player%} is true:
		set {playerQuotes.%player%::BadLevelUp} to the chat message
		cancel event
		send formatted "<light green>Changed your poor level-up quote to %chat message%!"
		clear {editLevelQuote1.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editLevelQuote2.%player%} is true:
		set {playerQuotes.%player%::AverageLevelUp} to the chat message
		cancel event
		send formatted "<light green>Changed your average level-up quote to %chat message%!"
		clear {editLevelQuote2.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editLevelQuote3.%player%} is true:
		set {playerQuotes.%player%::GoodLevelUp} to the chat message
		cancel event
		send formatted "<light green>Changed your good level-up quote to %chat message%!"
		clear {editLevelQuote3.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editLevelQuote4.%player%} is true:
		set {playerQuotes.%player%::MaxLevel} to the chat message
		cancel event
		send formatted "<light green>Changed your max potential quote to %chat message%!"
		clear {editLevelQuote4.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editLevelQuote5.%player%} is true:
		set {playerQuotes.%player%::Promotion} to the chat message
		cancel event
		send formatted "<light green>Changed your promotion quote to %chat message%!"
		clear {editLevelQuote5.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote1.%player%} is true:
		set {playerQuotes.%player%::LowHealth} to the chat message
		cancel event
		send formatted "<light blue>Changed your low HP quote to %chat message%!"
		clear {editCSQuote1.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote2.%player%} is true:
		set {playerQuotes.%player%::MediumHealth} to the chat message
		cancel event
		send formatted "<light blue>Changed your medium HP quote to %chat message%!"
		clear {editCSQuote2.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote3.%player%} is true:
		set {playerQuotes.%player%::Downed} to the chat message
		cancel event
		send formatted "<light blue>Changed your downed quote to %chat message%!"
		clear {editCSQuote3.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote4.%player%} is true:
		set {playerQuotes.%player%::Death} to the chat message
		cancel event
		send formatted "<light blue>Changed your death quote to %chat message%!"
		clear {editCSQuote4.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote5.%player%} is true:
		set {playerQuotes.%player%::ThanksForHeals1} to the chat message
		cancel event
		send formatted "<light blue>Changed your healed by ally quote to %chat message%!"
		clear {editCSQuote5.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote6.%player%} is true:
		set {playerQuotes.%player%::AllyHurtLarge01} to the chat message
		cancel event
		send formatted "<light blue>Changed your Ally hurt response to %chat message%!"
		clear {editCSQuote6.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote7.%player%} is true:
		set {playerQuotes.%player%::AllyHurtLarge02} to the chat message
		cancel event
		send formatted "<light blue>Changed your Ally hurt response to %chat message%!"
		clear {editCSQuote7.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote8.%player%} is true:
		set {playerQuotes.%player%::AllyNeedsHealing01} to the chat message
		cancel event
		send formatted "<light blue>Changed your Ally needs healing response to %chat message%!"
		clear {editCSQuote8.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote9.%player%} is true:
		set {playerQuotes.%player%::AllyDeath} to the chat message
		cancel event
		send formatted "<light blue>Changed your Ally death response to %chat message%!"
		clear {editCSQuote9.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote10.%player%} is true:
		set {playerQuotes.%player%::AllyHardcoreDeath} to the chat message
		cancel event
		send formatted "<light blue>Changed your Ally death (hardcore) response to %chat message%!"
		clear {editCSQuote10.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote11.%player%} is true:
		set {playerQuotes.%player%::AllyDowned} to the chat message
		cancel event
		send formatted "<light blue>Changed your Ally revival response to %chat message%!"
		clear {editCSQuote11.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote12.%player%} is true:
		set {playerQuotes.%player%::EnemyDefeated01} to the chat message
		cancel event
		send formatted "<light blue>Changed your enemy defeated quote to %chat message%!"
		clear {editCSQuote12.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote13.%player%} is true:
		set {playerQuotes.%player%::EnemyDefeated02} to the chat message
		cancel event
		send formatted "<light blue>Changed your enemy defeated quote to %chat message%!"
		clear {editCSQuote13.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote14.%player%} is true:
		set {playerQuotes.%player%::BossDefeated01} to the chat message
		cancel event
		send formatted "<light blue>Changed your boss defeated quote to %chat message%!"
		clear {editCSQuote14.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote15.%player%} is true:
		set {playerQuotes.%player%::BossDefeated02} to the chat message
		cancel event
		send formatted "<light blue>Changed your boss defeated quote to %chat message%!"
		clear {editCSQuote15.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote16.%player%} is true:
		set {playerQuotes.%player%::AllyEnemyDefeated01} to the chat message
		cancel event
		send formatted "<light blue>Changed your ally victory response to %chat message%!"
		clear {editCSQuote16.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote17.%player%} is true:
		set {playerQuotes.%player%::AllyEnemyDefeated02} to the chat message
		cancel event
		send formatted "<light blue>Changed your ally victory response to %chat message%!"
		clear {editCSQuote17.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
	else if {editCSQuote18.%player%} is true:
		set {playerQuotes.%player%::HardcoreDeath} to the chat message
		cancel event
		send formatted "<light blue>Changed your hardcore death quote to %chat message%!"
		clear {editCSQuote18.%player%}
		send formatted "<run command:/cosmetics><light blue>Click here to return to the main set-up menu."
		
#MARKER - Character Info
command /cstats [<offlineplayer=%player%>] [<number=1>]:
	description: Check your or someone else's classes statistics.
	usage: /cstats (player) (page)
	aliases: /cinfo, /c, /class, /seestats, /level, /lvl
	executable by: players, console
	trigger:
		set {_player} to arg 1
		set {_playerLVL} to getPromotionCompensatedClassLevel(arg 1)
		if {class.%arg 1%} is not set:
			send formatted "<red>Could not find classes data for that player. Please check your spelling and try again. The player may also have disabled classes for their character."
		else:
			send formatted "<gold><bold>%arg 1's tablist name% (%{race.%arg 1%}%), the level %{lvl.%arg 1%}% %{class.%arg 1%}%"
			send formatted "<gold><bold>XP until next level: %ceil((({_playerLVL} + ({_playerLVL} ^ 2)) / (1 + ({promoted.%arg 1%} - 1))) + 10) - {classXP.%arg 1%}%"
			send formatted "<gold>Current XP: %{classXP.%arg 1%}%"
			if arg 2 is 1:
				#Calculate BST
				set {_bstcap.%arg 1%} to ({strcap.%arg 1%} + {defcap.%arg 1%} + {lckcap.%arg 1%} + {spdcap.%arg 1%} + {magcap.%arg 1%} + {hpcap.%arg 1%} + {chrcap.%arg 1%} + {rescap.%arg 1%})
				set {bst.%arg 1%} to ({str.%arg 1%} + {def.%arg 1%} + {lck.%arg 1%} + {spd.%arg 1%} + {res.%arg 1%} + {hp.%arg 1%} + {chr.%arg 1%} + {res.%arg 1%})
				#HP Readout
				if {hp.%arg 1%} is equal to {hpcap.%arg 1%}:
					if {boon.%arg 1%} is "HP":
						send formatted "<light green><bold>+ <yellow><bold>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "HP":
						send formatted "<light red><bold>- <yellow><bold>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "HP":
						send formatted "<light green><gold>+ <reset>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "HP":
						send formatted "<light red><bold>- <reset>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else:
						send formatted "Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
				#STR Readout
				if {str.%arg 1%} is equal to {strcap.%arg 1%}:
					if {boon.%arg 1%} is "STR":
						send formatted "<light green><bold>+ <yellow><bold>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "STR":
						send formatted "<light red><bold>- <yellow><bold>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "STR":
						send formatted "<light green><bold>+ <reset>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "STR":
						send formatted "<light red><bold>- <reset>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else:
						send formatted "Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
				#DEF Readout
				if {def.%arg 1%} is equal to {defcap.%arg 1%}:
					if {boon.%arg 1%} is "DEF":
						send formatted "<light green><bold>+ <yellow><bold>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "DEF":
						send formatted "<light red><bold>- <yellow><bold>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "DEF":
						send formatted "<light green><bold>+ <reset>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "DEF":
						send formatted "<light red><bold>- <reset>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else:
						send formatted "Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
				#CHR Readout
				if {chr.%arg 1%} is equal to {chrcap.%arg 1%}:
					if {boon.%arg 1%} is "CHR":
						send formatted "<light green><bold>+ <yellow><bold>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "CHR":
						send formatted "<light red><bold>- <yellow><bold>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "CHR":
						send formatted "<light green><bold>+ <reset>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "CHR":
						send formatted "<light red><bold>- <reset>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else:
						send formatted "Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
				#LCK Readout
				if {LCK.%arg 1%} is equal to {LCKcap.%arg 1%}:
					if {boon.%arg 1%} is "LCK":
						send formatted "<light green><bold>+ <yellow><bold>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{LCKgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "LCK":
						send formatted "<light red><bold>- <yellow><bold>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{LCKgrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{LCKgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "LCK":
						send formatted "<light green><bold>+ <reset>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{lckgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "LCK":
						send formatted "<light red><bold>- <reset>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{lckgrowth.%arg 1%}%"
					else:
						send formatted "Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{lckgrowth.%arg 1%}%"
				#SPD Readout
				if {spd.%arg 1%} is equal to {spdcap.%arg 1%}:
					if {boon.%arg 1%} is "SPD":
						send formatted "<light green><bold>+ <yellow><bold>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "SPD":
						send formatted "<light red><bold>- <yellow><bold>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "SPD":
						send formatted "<light green><bold>+ <reset>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "SPD":
						send formatted "<light red><bold>- <reset>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else:
						send formatted "Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
				#MAG Readout
				if {mag.%arg 1%} is equal to {magcap.%arg 1%}:
					if {boon.%arg 1%} is "MAG":
						send formatted "<light green><bold>+ <yellow><bold>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "MAG":
						send formatted "<light red><bold>- <yellow><bold>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "MAG":
						send formatted "<light green><bold>+ <reset>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "MAG":
						send formatted "<light red><bold>- <reset>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else:
						send formatted "Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
				#RES Readout
				if {res.%arg 1%} is equal to {rescap.%arg 1%}:
					if {boon.%arg 1%} is "RES":
						send formatted "<light green><bold>+ <yellow><bold>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "RES":
						send formatted "<light red><bold>- <yellow><bold>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else:
						send formatted "<yellow><bold>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "RES":
						send formatted "<light green><bold>+ <reset>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "RES":
						send formatted "<light red><bold>- <reset>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else:
						send formatted "Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
				send formatted "BST: %{bst.%arg 1%}% (Max: %{_bstcap.%arg 1%}%)"
				send formatted "<run command:/cstats %arg 1% 2><gold>View Full Character Data"
			else if arg 2 is 2:
				#this is bad and I know it
				#Calculate BST
				set {_bstcap.%arg 1%} to ({strcap.%arg 1%} + {defcap.%arg 1%} + {lckcap.%arg 1%} + {spdcap.%arg 1%} + {magcap.%arg 1%} + {hpcap.%arg 1%} + {chrcap.%arg 1%} + {rescap.%arg 1%})
				set {bst.%arg 1%} to ({str.%arg 1%} + {def.%arg 1%} + {lck.%arg 1%} + {spd.%arg 1%} + {res.%arg 1%} + {hp.%arg 1%} + {chr.%arg 1%} + {res.%arg 1%})
				#HP Readout
				if {hp.%arg 1%} is equal to {hpcap.%arg 1%}:
					if {boon.%arg 1%} is "HP":
						set {_hpTooltip} to "<light green><bold>+ <yellow><bold>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "HP":
						set {_hpTooltip} to "<light red><bold>- <yellow><bold>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else:
						set {_hpTooltip} to "<yellow><bold>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "HP":
						set {_hpTooltip} to "<light green><gold>+ <reset>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "HP":
						set {_hpTooltip} to "<light red><bold>- <reset>Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
					else:
						set {_hpTooltip} to "Vitality: %{hp.%arg 1%}% + %{hpbuff.%arg 1%}% | Cap: %{hpcap.%arg 1%}% | Growth Rate: %{hpgrowth.%arg 1%}%"
				#STR Readout
				if {str.%arg 1%} is equal to {strcap.%arg 1%}:
					if {boon.%arg 1%} is "STR":
						set {_strTooltip} to "<light green><bold>+ <yellow><bold>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "STR":
						set {_strTooltip} to "<light red><bold>- <yellow><bold>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else:
						set {_strTooltip} to "<yellow><bold>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "STR":
						set {_strTooltip} to "<light green><bold>+ <reset>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "STR":
						set {_strTooltip} to "<light red><bold>- <reset>Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
					else:
						set {_strTooltip} to "Strength: %{str.%arg 1%}% + %{strbuff.%arg 1%}% | Cap: %{strcap.%arg 1%}% | Growth Rate: %{strgrowth.%arg 1%}%"
				#DEF Readout
				if {def.%arg 1%} is equal to {defcap.%arg 1%}:
					if {boon.%arg 1%} is "DEF":
						set {_defTooltip} to "<light green><bold>+ <yellow><bold>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "DEF":
						set {_defTooltip} to "<light red><bold>- <yellow><bold>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else:
						set {_defTooltip} to "<yellow><bold>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "DEF":
						set {_defTooltip} to "<light green><bold>+ <reset>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "DEF":
						set {_defTooltip} to "<light red><bold>- <reset>Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
					else:
						set {_defTooltip} to "Defense: %{def.%arg 1%}% + %{defbuff.%arg 1%}% | Cap: %{defcap.%arg 1%}% | Growth Rate: %{defgrowth.%arg 1%}%"
				#CHR Readout
				if {chr.%arg 1%} is equal to {chrcap.%arg 1%}:
					if {boon.%arg 1%} is "CHR":
						set {_chrTooltip} to "<light green><bold>+ <yellow><bold>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "CHR":
						set {_chrTooltip} to "<light red><bold>- <yellow><bold>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else:
						set {_chrTooltip} to "<yellow><bold>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "CHR":
						set {_chrTooltip} to "<light green><bold>+ <reset>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "CHR":
						set {_chrTooltip} to "<light red><bold>- <reset>Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
					else:
						set {_chrTooltip} to "Charm: %{chr.%arg 1%}% + %{chrbuff.%arg 1%}% | Cap: %{chrcap.%arg 1%}% | Growth Rate: %{chrgrowth.%arg 1%}%"
				#LCK Readout
				if {LCK.%arg 1%} is equal to {LCKcap.%arg 1%}:
					if {boon.%arg 1%} is "LCK":
						set {_lckTooltip} to "<light green><bold>+ <yellow><bold>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{LCKgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "LCK":
						set {_lckTooltip} to "<light red><bold>- <yellow><bold>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{LCKgrowth.%arg 1%}%"
					else:
						set {_lckTooltip} to "<yellow><bold>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{LCKgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "LCK":
						set {_lckTooltip} to "<light green><bold>+ <reset>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{lckgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "LCK":
						set {_lckTooltip} to "<light red><bold>- <reset>Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{lckgrowth.%arg 1%}%"
					else:
						set {_lckTooltip} to "Luck: %{LCK.%arg 1%}% + %{LCKbuff.%arg 1%}% | Cap: %{LCKcap.%arg 1%}% | Growth Rate: %{lckgrowth.%arg 1%}%"
				#SPD Readout
				if {spd.%arg 1%} is equal to {spdcap.%arg 1%}:
					if {boon.%arg 1%} is "SPD":
						set {_spdTooltip} to "<light green><bold>+ <yellow><bold>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "SPD":
						set {_spdTooltip} to "<light red><bold>- <yellow><bold>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else:
						set {_spdTooltip} to "<yellow><bold>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "SPD":
						set {_spdTooltip} to "<light green><bold>+ <reset>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "SPD":
						set {_spdTooltip} to "<light red><bold>- <reset>Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
					else:
						set {_spdTooltip} to "Speed: %{spd.%arg 1%}% + %{spdbuff.%arg 1%}% | Cap: %{spdcap.%arg 1%}% | Growth Rate: %{spdgrowth.%arg 1%}%"
				#MAG Readout
				if {mag.%arg 1%} is equal to {magcap.%arg 1%}:
					if {boon.%arg 1%} is "MAG":
						set {_magTooltip} to "<light green><bold>+ <yellow><bold>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "MAG":
						set {_magTooltip} to "<light red><bold>- <yellow><bold>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else:
						set {_magTooltip} to "<yellow><bold>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "MAG":
						set {_magTooltip} to "<light green><bold>+ <reset>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "MAG":
						set {_magTooltip} to "<light red><bold>- <reset>Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
					else:
						set {_magTooltip} to "Magic: %{mag.%arg 1%}% + %{magbuff.%arg 1%}% | Cap: %{magcap.%arg 1%}% | Growth Rate: %{maggrowth.%arg 1%}%"
				#RES Readout
				if {res.%arg 1%} is equal to {rescap.%arg 1%}:
					if {boon.%arg 1%} is "RES":
						set {_resTooltip} to "<light green><bold>+ <yellow><bold>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "RES":
						set {_resTooltip} to "<light red><bold>- <yellow><bold>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else:
						set {_resTooltip} to "<yellow><bold>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
				else:
					if {boon.%arg 1%} is "RES":
						set {_resTooltip} to "<light green><bold>+ <reset>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else if {bane.%arg 1%} is "RES":
						set {_resTooltip} to "<light red><bold>- <reset>Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
					else:
						set {_resTooltip} to "Resistance: %{res.%arg 1%}% + %{resbuff.%arg 1%}% | Cap: %{rescap.%arg 1%}% | Growth Rate: %{resgrowth.%arg 1%}%"
				set {_bstTooltip} to "BST: %{bst.%arg 1%}% (Max: %{_bstcap.%arg 1%}%)"
				open chest inventory with 4 rows named "<gold>Stats for %arg 1%:" for the player
				#Stats readout
				set slot 2 of the player's current inventory to 1 ender chest named "<gold>Stats" with lore "%{_hpTooltip}%", "%{_strTooltip}%", "%{_defTooltip}%", "%{_chrTooltip}%", "%{_lckTooltip}%", "%{_spdTooltip}%", "%{_magTooltip}%", "%{_resTooltip}%", "%{_bstTooltip}%"
				#Weapon Ranks
				set slot 18 of the player's current inventory to 1 iron sword named "<gold>Swords WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Swords}%", "<white>Times used: %{weapondamagetotals.%player%::Swords}% attacks"
				set slot 19 of the player's current inventory to 1 iron axe named "<gold>Axes WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Axes}%", "<white>Times used: %{weapondamagetotals.%player%::Axes}% attacks"
				set slot 20 of the player's current inventory to 1 iron shovel named "<gold>Lances WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Lances}%", "<white>Times used: %{weapondamagetotals.%player%::Lances}% attacks"
				set slot 21 of the player's current inventory to 1 iron hoe named "<gold>Gauntlets WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Gauntlets}%", "<white>Times used: %{weapondamagetotals.%player%::Gauntlets}% attacks"
				set slot 22 of the player's current inventory to 1 arrow named "<gold>Daggers WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Daggers}%", "<white>Times used: %{weapondamagetotals.%player%::Daggers}% attacks"
				set slot 23 of the player's current inventory to 1 bow named "<gold>Bows WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Bows}%", "<white>Times used: %{weapondamagetotals.%player%::Bows}% attacks"
				set slot 27 of the player's current inventory to 1 blaze rod named "<gold>Wands WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Wands}%", "<white>Times used: %{weapondamagetotals.%player%::Wands}% attacks"
				set slot 28 of the player's current inventory to 1 book named "<gold>Tomes WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Tomes}%", "<white>Times used: %{weapondamagetotals.%player%::Tomes}% attacks"
				set slot 29 of the player's current inventory to 1 wooden hoe named "<gold>Staves WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Staves}%", "<white>Times used: %{weapondamagetotals.%player%::Staves}% uses"
				set slot 30 of the player's current inventory to 1 iron horse armor named "<gold>Pistols WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Pistols}%", "<white>Times used: %{weapondamagetotals.%player%::Pistols}% attacks"
				set slot 31 of the player's current inventory to 1 gold horse armor named "<gold>Rifles WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Rifles}%", "<white>Times used: %{weapondamagetotals.%player%::Rifles}% attacks"
				set slot 32 of the player's current inventory to 1 diamond horse armor named "<gold>Shotguns WR" with lore "<white>Weapon Rank: %{weaponranks.%player%::Shotguns}%", "<white>Times used: %{weapondamagetotals.%player%::Shotguns}% attacks"
				#Perks & Personal Data
				if {playerDifficulty.%arg 1%} is 1:
					set {_diff} to "<green>Relaxed"
				else if {playerdifficulty.%arg 1%} is 2:
					set {_diff} to "<light gray>Normal"
				else if {playerdifficulty.%arg 1%} is 3:
					set {_diff} to "<gray>Hard"
				else if {playerdifficulty.%arg 1%} is 4:
					set {_diff} to "<red>Lunatic"
				else if {playerdifficulty.%arg 1%} is 5:
					set {_diff} to "<purple>Infernal"
				else if {playerdifficulty.%arg 1%} is 6:
					set {_diff} to "<blue>Abyssal"
				else if {playerdifficulty.%arg 1%} is 7:
					set {_diff} to "<light yellow>Critical"
				else if {playerdifficulty.%arg 1%} is 8:
					set {_diff} to "<gold>Legendary"
				else if {playerdifficulty.%arg 1%} is 9:
					set {_diff} to "<gold><bold>%player's tablist name% <reset><gold><bold>Must Die!"
				set slot 3 of the player's current inventory to 1 eye of ender named "<gold>Perks" with lore "<white>Slot 1: %{skillslot1.%arg 1%}%", "<white>Slot 2: %{skillslot2.%arg 1%}%", "<white>Slot 3: %{skillslot3.%arg 1%}%", "<white>Slot 4: %{skillslot4.%arg 1%}%", "<white>Slot 5: %{skillslot5.%arg 1%}%", "<white>Slot 6: %{skillslot6.%arg 1%}%", "<white>Slot 7: %{skillslot7.%arg 1%}%", "<white>Slot 8: %{skillslot8.%arg 1%}%", "<white>Slot 9: %{skillslot9.%arg 1%}%"
				set slot 4 of the player's current inventory to 1 compass named "<gold>Personal Records" with lore "<white>Difficulty: %{_diff}%", "<white>Blocks Mined: %{blocksmined.%arg 1%}%", "<white>Tools Broken: %{toolbreaktally.%arg 1%}%", "<white>Fall Damage Taken: %{slfalltotal.%arg 1%}%", "<white>Class Tier: %{promoted.%arg 1%}%"
				set slot 5 of the player's current inventory to 1 shield named "<gold>Combat Records" with lore "<white>Hours Played: %{hoursplayed.%arg 1%}%", "<white>Combat Victories: %{kills.%arg 1%}%", "<white>Deaths: %{deaths.%arg 1%}%", "<white>Most Damage Dealt: %{highestdamage.%arg 1%}%", "<white>Most Damage Taken: %{highestsuffered.%arg 1%}%"
				#Party
				if {party.%arg 1%} is not set:
					set slot 6 of the player's current inventory to 1 barrier named "<light red>Party" with lore "<white>Character does not belong to a party."
				else:
					loop {%{party.%arg 1%}%.members::*}:
						add 1 to {_members}
					if {%{party.%arg 1%}%.needInvite} is 1:
						set {_nI} to "True"
					else:
						set {_nI} to "False"
					set slot 6 of the player's current inventory to 1 chest named "<gold>Party" with lore "<gold>%{party.%arg 1%}%:", "<white>Members: %{%{party.%arg 1%}%.members::*}%", "<white>Invite Required: %{_nI}%"
				
#MARKER - Promotion Items
on right-click with nether star:
	if {lvl.%player%} is more than 9:
		if the name of the event-item is "<gold><bold>Warrior's Proof":
			if {promoted.%player%} is 1:
				remove 1 of event-item from the player
				set {promotionready.%player%} to 1
				send formatted "<gold>You may now promote your current character. Please select the method:"
				send formatted "<run command:/class branchpromote tmp><gold>1 - Select New Class, Then Promote"
				send formatted "<run command:/class promote %{class.%player%}%1><gold>2 - Promote With Current Class"
			else if {promoted.%player%} is 2:
				remove 1 of event-item from the player
				set {promotionready.%player%} to 1
				send formatted "<gold>You may now promote your current character. Please select the method:"
				send formatted "<run command:/class branchpromote tmp><gold>1 - Select New Class, Then Promote"
				send formatted "<run command:/class promote %{class.%player%}%><gold>Promote With Current Class."
			else if {promoted.%player%} is more than 2:
				remove 1 of event-item from the player
				set {promotionready.%player%} to 1
				if {class.%player%} is "Prince":
					send formatted "<run command:/class promote Prince><gold>You may now promote into a higher-tier version of your current class. Please click here to confirm promotion."
				else:
					send formatted "<gold>You may now Overclass your current character. Please select the method:"
					send formatted "<run command:/class branchpromote tmp><gold>1 - Select New Class, Then Overclass"
					send formatted "<run command:/class promote Overclass><gold>Overclass With Current Class."				
			else:
				send formatted "<red>You must be promoted to use a Warrior's Proof."
		else if the name of the event-item is "<gold><bold>Soul Crystal":
			remove 1 of event-item from the player
			set {promotionready.%player%} to 1
			send formatted "<gold>You may now edit your character's attributes, and select a new class. Press the button below to confirm your decision."
			send formatted "<run command:/charsetup 0><green>Edit Character"
	else:
		send formatted "<light red>You lack enough experience to use this item. You must be at least level 10 to promote."
				
				
#MARKER - Promotion Handler

command /class <text> [<text="Journeyman">]:
	description: Learn about the available classes.
	usage: /class help
	executable by: players
	trigger:
		clear {combosenabled.%player%}
		if arg 1 is "reset":
			send formatted "<gold><bold>You have two options for resetting data:"
			set {promotionready.%player%} to 1
			send formatted "<run command:/class promote Reset>- Reset class stats to their defaults, but keep personal records."
			send formatted "<run command:/class hardreset>- Wipe all personal classes data, including personal records."
			send formatted "Please click your selection."
		else if arg 1 is "hardreset":
			send formatted "<gold>Cleared all class-related data for your current character."
			set the player's level to 1
			set {lvl.%player%} to 1
			set {class.%player%} to "Journeyman"
			set {str.%player%} to 0
			set {def.%player%} to 0
			set {LCK.%player%} to 0
			set {spd.%player%} to 0
			set {mag.%player%} to 0
			set {hp.%player%} to 10
			set {LCK.%player%} to 10
			set {strcap.%player%} to 15
			set {defcap.%player%} to 15
			set {hpcap.%player%} to 40
			set {LCKcap.%player%} to 30
			set {spdcap.%player%} to 15
			set {magcap.%player%} to 15
			set {lvlcap.%player%} to 20
			set {promoted.%player%} to 0
			set {skillstotal.%player%} to 0
			set {reclasses.%player%} to 0
			set {deaths.%player%} to 0
			set {lvl.%player%} to 1
		else if arg 1 is "branchpromote":
			set {useBranchingPromotion.%player%} to true
			#
			#See reclass.sk for the GUI logic.
			#
			open chest inventory with 5 rows named "<gold>Choose a New Class" for the player
			set slot 0 of the player's current inventory to 1 book named "<white>Help:" with lore "<white>Select the class you wish to promote into.", "<white>If you choose a new class instead of your current class,", "<white>your base stats will change to match that of your new class."
			set slot 4 of the player's current inventory to 1 blaze rod named "<white>Physical/Magical" with lore "<white>Classes to the left of this divider use physical damage,", "<white>while classes to the right use magical damage.", "<while>While it is possible to use either damage type on any class,", "<white>it is ideal to use the damage type that a class is best at."
			#set slot 13 of the player's current inventory to 1 blaze rod
			set slot 22 of the player's current inventory to 1 blaze rod
			#set slot 31 of the player's current inventory to 1 blaze rod
			#set slot 40 of the player's current inventory to 1 blaze rod
			#Classes
			set slot 13 of the player's current inventory to 1 iron sword named "<white>Basic Classes" with lore "<white>Simple and easy to pick up and play.", "<white>These classes have straightforward statlines and easy-to-activate perk conditions.", "<white>Great for learning the ins and outs of effective character building."
			#Basic Classes
			#physical
			set slot 9 of the player's current inventory to 1 nether star named "<gold>Mercenary" with lore "<white>Strong warriors with a balanced stat spread.", "<cyan>Strengths: None", "<light red>Weaknesses: None", "<cyan>This class naturally learns spells."
			set slot 10 of the player's current inventory to 1 nether star named "<gold>Knight" with lore "<white>Slow but sturdy fighters with extreme physical defense.", "<cyan>Strengths: HP, DEF", "<light red>Weaknesses: SPD, RES, MAG"
			set slot 11 of the player's current inventory to 1 nether star named "<gold>Fighter" with lore "<white>Focused on physical damage and defense, they have devastating blows.", "<cyan>Strengths: HP, STR", "<light red>Weaknesses: LCK, SPD"
			set slot 12 of the player's current inventory to 1 nether star named "<gold>Archer" with lore "<white>Average fighters with a focus on ranged, single-target elimination.", "<cyan>Strengths: STR, DEF", "<light red>Weaknesses: HP, LCK"
			set slot 18 of the player's current inventory to 1 nether star named "<gold>Cavalier" with lore "<white>A well-balanced class that specializes in mounted combat.", "<cyan>Strengths: LCK", "<light red>Weaknesses: HP"
			set slot 19 of the player's current inventory to 1 nether star named "<gold>Trickster" with lore "<white>Slippery thieves that can pick locks and sabotage foes.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, STR"
			#magical
			set slot 14 of the player's current inventory to 1 nether star named "<gold>Mage" with lore "<white>Magic wielders utilizing various wands and tomes for combat.", "<cyan>Strengths: MAG, SPD", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
			set slot 15 of the player's current inventory to 1 nether star named "<gold>Conjurer" with lore "<white>Dark mages who use their own health for stronger attacks.", "<cyan>Strengths: MAG, RES, HP", "<light red>Weaknesses: SPD, CHR, LCK", "<cyan>This class naturally learns spells."
			set slot 16 of the player's current inventory to 1 nether star named "<gold>Keeper" with lore "<white>Armored mage with strong defences but poor physical strength.", "<cyan>Strengths: DEF, RES, MAG", "<light red>Weaknesses: SPD, STR, CHR", "<cyan>This class naturally learns spells."
			#Advanced Classes
			set slot 31 of the player's current inventory to 1 diamond sword named "<white>Advanced Classes" with lore "<white>More specialized classes with harder to use perks and stat lines.", "<white>While they are more difficult to build effectively,", "<white>Advanced Classes can utilize more unique abilities."
			#phys
			set slot 27 of the player's current inventory to 1 nether star named "<gold>Bladesman" with lore "<white>Quick-footed warriors that prioritize speed above all else.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: DEF, RES, HP"
			set slot 28 of the player's current inventory to 1 nether star named "<gold>Gunslinger" with lore "<white>Foreigners who make the best use of firearms for combat.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, DEF"
			set slot 29 of the player's current inventory to 1 nether star named "<gold>Outlaw" with lore "<white>Lone wolves that sow chaos throughout the land.", "<cyan>Strengths: STR, SPD, LCK", "<light red>Weaknesses: HP, DEF, RES"
			#magic
			set slot 32 of the player's current inventory to 1 nether star named "<gold>Cleric" with lore "<white>Ill-suited for combat, but are the best at party-wide healing.", "<cyan>Strengths: HP, RES", "<light red>Weaknesses: DEF, SPD", "<cyan>This class naturally learns spells."
			set slot 33 of the player's current inventory to 1 nether star named "<gold>Strategist" with lore "<white>Clever magicians that support allies in whatever role is needed.", "<cyan>Strengths: MAG, DEF", "<light red>Weaknesses: SPD", "<cyan>This class naturally learns spells."
			set slot 34 of the player's current inventory to 1 nether star named "<gold>Troubador" with lore "<white>Mounted healers with multi-weapon utility.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, DEF, RES", "<cyan>This class naturally learns spells."
			set slot 35 of the player's current inventory to 1 nether star named "<gold>Poet" with lore "<white>Speedy performers that grant bonuses to allies.", "<cyan>Strengths: SPD, LCK, MAG, CHR", "<light red>Weaknesses: STR, HP, DEF", "<cyan>This class naturally learns spells."
			#Specialist Classes
			set slot 40 of the player's current inventory to 1 golden sword named "<white>Specialist Classes" with lore "<white>These classes radically change the way you play.", "<white>They each have unique abilities that no other class can replicate,", "<white>but they can be extremely tricky to play effectively."
			#phys
			set slot 36 of the player's current inventory to 1 nether star named "<gold>Devil Hunter" with lore "<white>Utilizes a unique Stylish system to combo foes.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: DEF, RES, HP"
			set slot 37 of the player's current inventory to 1 nether star named "<gold>Survivor" with lore "<white>Sacrifices combat ability in favor of traditional Minecraft gameplay.", "<cyan>Strengths: HP, MAG", "<light red>Weaknesses: STR, SPD, DEF, LCK, RES", "<cyan>This class naturally learns spells."
			#magic
			set slot 41 of the player's current inventory to 1 nether star named "<gold>Summoner" with lore "<white>Fragile magicians that create familiars to aid in combat.", "<cyan>Strengths: MAG, HP", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
			set slot 42 of the player's current inventory to 1 nether star named "<gold>Charlatan" with lore "<white>Crazed alchemist who sacrifices their health for more power.", "<cyan>Strengths: RES, MAG", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
		else if arg 1 is "promote":
			if {promotionready.%player%} is 1:
				send formatted "<gold>Promoting! You may now close the chat."
				set {promotionready.%player%} to 0
				strike lightning effect at the player
				wait 1 second
				strike lightning effect at the player
				wait 0.45 second
				strike lightning effect at the player
				wait 1 second
				set {_pitch} to 0.6
				set {_oldstr.%player%} to {str.%player%}
				set {_olddef.%player%} to {def.%player%}
				set {_oldhp.%player%} to {hp.%player%}
				set {_oldLCK.%player%} to {LCK.%player%}
				set {_oldspd.%player%} to {spd.%player%}
				set {_oldmag.%player%} to {mag.%player%}
				set {_oldres} to {res.%player%}
				set {_oldchr} to {chr.%player%}
				set {_oldlck} to {lck.%player%}
				loop 9 times:
					play mob spawner flames at the player
					play magical critical hit at the player
					play smoke at the player
					play sound "entity.experience_orb.pickup" with volume 2 and pitch {_pitch} at player for player
					wait 0.3 seconds
					spawn firework at player
					add 0.2 to {_pitch}
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 2 at player for player
				#Temporarily remove Asset/Flaw so that promotion gains don't get permanently affected by non-neutral Asset/Flaw
				if {boon.%player%} is set:
					subtract ((getClassBoonBaneAmount(player,{boon.%player%},1)) * {promoted.%player%}) from {%{boon.%player%}%.%player%}
					subtract ((getClassBoonBaneAmount(player,{boon.%player%},1)) * {promoted.%player%} * 2) from {%{boon.%player%}%cap.%player%}
					subtract 20 from {%{boon.%player%}%growth.%player%}
					subtract ((getClassBoonBaneAmount(player,{bane.%player%},0)) * {promoted.%player%}) from {%{bane.%player%}%.%player%}
					subtract ((getClassBoonBaneAmount(player,{bane.%player%},0)) * {promoted.%player%} * 2) from {%{bane.%player%}%cap.%player%}
				if arg 2 is "Journeyman_Reclass":
					set {hpgrowth.%player%} to {pts_HP.%player%} + 30
					set {strgrowth.%player%} to {pts_STR.%player%} + 30
					set {defgrowth.%player%} to {pts_DEF.%player%} + 30
					set {LCKgrowth.%player%} to {pts_LCK.%player%} + 30
					set {spdgrowth.%player%} to {pts_SPD.%player%} + 30
					set {maggrowth.%player%} to {pts_MAG.%player%} + 30
					make player execute command "/grantskill 0 Paragon"
					set {class.%player%} to "Journeyman"
					add 1 to {reclassed.%player%}
					send formatted "<gold><bold>Promoted to Journeyman!"
				if arg 2 is "Journeyman":
					set {hpgrowth.%player%} to {pts_HP.%player%} + 30
					set {strgrowth.%player%} to {pts_STR.%player%} + 30
					set {defgrowth.%player%} to {pts_DEF.%player%} + 30
					set {LCKgrowth.%player%} to {pts_LCK.%player%} + 30
					set {spdgrowth.%player%} to {pts_SPD.%player%} + 30
					set {maggrowth.%player%} to {pts_MAG.%player%} + 30
					set the player's level to 1
					set {lvl.%player%} to 1
					make player execute command "/qstart"
					set {class.%player%} to "Journeyman"
					add 1 to {reclassed.%player%}
					send formatted "<gold><bold>Promoted to Journeyman!"
				else if arg 2 is "Knight":
					set {class.%player%} to "Knight"
					#make player execute command "/grantskill 0 Unbreakable"
					send formatted "<gold><bold>Promoted to Knight!"
				else if arg 2 is "Cavalier":
					#make player execute command "/grantskill 0 Mount"
					set {class.%player%} to "Cavalier"
					send formatted "<gold><bold>Promoted to Cavalier!"
				else if arg 2 is "Bladesman":
					#make player execute command "/grantskill 0 Light Feet"
					set {class.%player%} to "Bladesman"
					send formatted "<gold><bold>Promoted to Bladesman!"
				else if arg 2 is "Fighter":
					set {class.%player%} to "Fighter"
					#make player execute command "/grantskill 0 Gamble"
					send formatted "<gold><bold>Promoted to Fighter!"
				else if arg 2 is "Mercenary":
					set {class.%player%} to "Mercenary"
					#make player execute command "/grantskill 0 Brazen STR/DEF"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Mercenary!"
				else if arg 2 is "Cleric":
					set {class.%player%} to "Cleric"
					give 1 stone hoe named "<yellow><bold>Wrys" with lore "<white>A staff named after a humble cleric.", "<white>Right-click with this staff to heal wounded allies." to the player
					#make player execute command "/grantskill 0 Live to Serve"
					send formatted "<gold><bold>Promoted to Cleric!"
				else if arg 2 is "Mage":
					set {class.%player%} to "Mage"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					#make player execute command "/grantskill 0 Magic Ward"
					send formatted "<gold><bold>Promoted to Mage!"
				else if arg 2 is "Archer":
					set {class.%player%} to "Archer"
					#make player execute command "/grantskill 0 Quick Draw"
					send formatted "<gold><bold>Promoted to an Archer!"
				else if arg 2 is "Strategist":
					set {class.%player%} to "Strategist"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					#make player execute command "/grantskill 0 Rally Spectrum"
					send formatted "<gold><bold>Promoted to Strategist!"
				else if arg 2 is "Gunslinger":
					set {class.%player%} to "Gunslinger"
					#make player execute command "/grantskill 0 Fast Fingers"
					send formatted "<gold><bold>Promoted to Gunslinger!"
				else if arg 2 is "Devil Hunter":
					make player execute command "/combo enable"
					set {class.%player%} to "Devil Hunter"
					#make player execute command "/grantskill 0 Combo System"
					#make player execute command "/grantskill 0 Air Hike"
					send formatted "<gold><bold>Promoted to Devil Hunter!"
					send formatted "<run command:/dhtutorial 0><light yellow>View Devil Hunter tutorial? [Click here, can be viewed at any time with /dhtutorial]"
				else if arg 2 is "Dragonborn":
					set {class.%player%} to "Dragonborn"
					#make player execute command "/grantskill 0 Aqua Soul"
					send formatted "<gold><bold>Promoted to Dragonborn!"
				else if arg 2 is "Survivor":
					set {class.%player%} to "Survivor"
					#make player execute command "/grantskill 0 Scavenger"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Survivor!"
				else if arg 2 is "Trickster":
					set {class.%player%} to "Trickster"
					#make player execute command "/grantskill 0 Midas Touch"
					send formatted "<gold><bold>Promoted to Trickster!"
				else if arg 2 is "Summoner":
					set {class.%player%} to "Summoner"
					give 1 blaze rod named "<light yellow>Summoner's Cane" to the player
					send "<light purple><italics>Use the command /summons to equip Summons to your Summoner's Cane." to the player
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Summoner!"
				else if arg 2 is "Keeper":
					set {class.%player%} to "Keeper"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Keeper!"
				else if arg 2 is "Charlatan":
					set {class.%player%} to "Charlatan"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Charlatan!"	
				else if arg 2 is "Conjurer":
					set {class.%player%} to "Conjurer"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Conjurer!"
				else if arg 2 is "Poet":
					set {class.%player%} to "Poet"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Poet!"
				else if arg 2 is "Outlaw":
					set {class.%player%} to "Outlaw"
					send formatted "<gold><bold>Promoted to Outlaw!"
				else if arg 2 is "Troubador":
					set {class.%player%} to "Troubador"
					give 1 blaze rod named "<light yellow><bold>Magic Wand" with nbt "{isWand:1}" to the player
					send formatted "<light purple><italics>Use the command /spells to equip spells to your Magic Wand." to the player
					send formatted "<gold><bold>Promoted to Troubador!"					
				else if arg 2 is "Survivor1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 20 to {hp.%player%}
					add 8 to {str.%player%}
					add 8 to {def.%player%}
					add 2 to {chr.%player%}
					add 4 to {lck.%player%}
					add 12 to {spd.%player%}
					add 12 to {mag.%player%}
					add 14 to {res.%player%}
					set {class.%player%} to "Builder"
					#make player execute command "/grantskill 0 Efficiency"
					send formatted "<gold><bold>Promoted to Builder!"
				else if arg 2 is "Archer1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 12 to {hp.%player%}
					add 14 to {str.%player%}
					add 12 to {def.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					add 10 to {spd.%player%}
					add 6 to {mag.%player%}
					add 6 to {res.%player%}
					set {class.%player%} to "Ranger"
					#make player execute command "/grantskill 0 True Shot"
					send formatted "<gold><bold>Promoted to Ranger!"
				else if arg 2 is "Strategist1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 8 to {hp.%player%}
					add 10 to {str.%player%}
					add 12 to {def.%player%}
					add 14 to {chr.%player%}
					add 8 to {lck.%player%}
					add 8 to {spd.%player%}
					add 12 to {mag.%player%}
					add 8 to {res.%player%}
					set {class.%player%} to "Tactician"
					#make player execute command "/grantskill 0 Commanding Presence"
					send formatted "<gold><bold>Promoted to Tactician!"
				else if arg 2 is "Gunslinger1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 8 to {hp.%player%}
					add 14 to {str.%player%}
					add 6 to {def.%player%}
					add 16 to {chr.%player%}
					add 14 to {lck.%player%}
					add 14 to {spd.%player%}
					add 2 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Rifleman"
					#make player execute command "/grantskill 0 Controlled Shot"
					send formatted "<gold><bold>Promoted to Rifleman!"
				else if arg 2 is "Devil Hunter1":
					set {combosenabled.%player%} to true
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 6 to {hp.%player%}
					add 12 to {str.%player%}
					add 4 to {def.%player%}
					add 16 to {chr.%player%}
					add 14 to {lck.%player%}
					add 12 to {spd.%player%}
					add 12 to {mag.%player%}
					add 4 to {res.%player%}
					set {class.%player%} to "Angel Slayer"
					#make player execute command "/grantskill 0 Devil Trigger"
					send formatted "<gold><bold>Promoted to Angel Slayer!"
				else if arg 2 is "Mage1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 6 to {hp.%player%}
					add 6 to {str.%player%}
					add 6 to {def.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					add 10 to {spd.%player%}
					add 20 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Sorcerer"
					#make player execute command "/grantskill 0 Elder Knowledge"
					drop 1 blaze rod named "<yellow><bold>Magic Wand" at the player
					send formatted "<gold><bold>Promoted to Sorcerer!"
				else if arg 2 is "Knight1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 18 to {hp.%player%}
					add 8 to {str.%player%}
					add 18 to {def.%player%}
					add 12 to {chr.%player%}
					add 10 to {lck.%player%}
					add 6 to {spd.%player%}
					add 4 to {mag.%player%}
					add 6 to {res.%player%}
					set {class.%player%} to "General"
					#make player execute command "/grantskill 0 Guard"
					send formatted "<gold><bold>Promoted to General!"
				else if arg 2 is "Cavalier1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 8 to {hp.%player%}
					add 12 to {str.%player%}
					add 6 to {def.%player%}
					add 12 to {chr.%player%}
					add 14 to {lck.%player%}
					add 16 to {spd.%player%}
					add 4 to {mag.%player%}
					add 8 to {res.%player%}
					set {class.%player%} to "Paladin"
					#make player execute command "/grantskill 0 Pursuit"
					send formatted "<gold><bold>Promoted to Paladin!"
				else if arg 2 is "Bladesman1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 10 to {hp.%player%}
					add 16 to {str.%player%}
					add 4 to {def.%player%}
					add 4 to {chr.%player%}
					add 18 to {lck.%player%}
					add 20 to {spd.%player%}
					add 4 to {mag.%player%}
					add 4 to {res.%player%}
					set {class.%player%} to "Myrmidon"
					#make player execute command "/grantskill 0 Life and Death"
					send formatted "<gold><bold>Promoted to Myrmidon!"
				else if arg 2 is "Fighter1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 16 to {hp.%player%}
					add 18 to {str.%player%}
					add 14 to {def.%player%}
					add 4 to {chr.%player%}
					add 4 to {lck.%player%}
					add 10 to {spd.%player%}
					add 2 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Berserker"
					#make player execute command "/grantskill 0 Crushing Offense"
					send formatted "<gold><bold>Promoted to Berserker!"
				else if arg 2 is "Mercenary1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 10 to {str.%player%}
					add 10 to {def.%player%}
					add 10 to {spd.%player%}
					add 10 to {mag.%player%}
					add 10 to {res.%player%}
					add 10 to {hp.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					set {class.%player%} to "Hero"
					#make player execute command "/grantskill 0 Double Lion"
					send formatted "<gold><bold>Promoted to Hero!"
				else if arg 2 is "Cleric1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 12 to {hp.%player%}
					add 4 to {str.%player%}
					add 6 to {def.%player%}
					add 10 to {chr.%player%}
					add 14 to {lck.%player%}
					add 6 to {spd.%player%}
					add 14 to {mag.%player%}
					add 14 to {res.%player%}
					set {class.%player%} to "Bishop"
					#make player execute command "/grantskill 0 Miracle"
					send formatted "<gold><bold>Promoted to Bishop!"
				#UNUSED
				#else if arg 2 is "Dragonborn1":
					#add {hpcap.%player%} to {hpcap.%player%}
					#add {strcap.%player%} to {strcap.%player%}
					#add {defcap.%player%} to {defcap.%player%}
					#add {lckcap.%player%} to {lckcap.%player%}
					#add {chrcap.%player%} to {chrcap.%player%}
					#add {spdcap.%player%} to {spdcap.%player%}
					#add {magcap.%player%} to {magcap.%player%}
					#add {rescap.%player%} to {rescap.%player%}
					#add 8 to {hp.%player%}
					#add 1 to {str.%player%}
					#add 5 to {def.%player%}
					#add 2 to {chr.%player%}
					#add 3 to {lck.%player%}
					#add 4 to {spd.%player%}
					#add 12 to {mag.%player%}
					#add 6 to {res.%player%}
					#set {class.%player%} to "Manakete"
					#make player execute command "/grantskill 0 Flight"
					#send formatted "<gold><bold>Promoted to Manakete!"
				else if arg 2 is "Trickster1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 8 to {hp.%player%}
					add 6 to {str.%player%}
					add 6 to {def.%player%}
					add 22 to {chr.%player%}
					add 14 to {lck.%player%}
					add 14 to {spd.%player%}
					add 4 to {mag.%player%}
					add 6 to {res.%player%}
					set {class.%player%} to "Rogue"
					#make player execute command "/grantskill 0 Saboteur"
					send formatted "<gold><bold>Promoted to Rogue!"
				else if arg 2 is "Summoner1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 14 to {hp.%player%}
					add 4 to {str.%player%}
					add 4 to {def.%player%}
					add 8 to {chr.%player%}
					add 10 to {lck.%player%}
					add 14 to {spd.%player%}
					add 18 to {mag.%player%}
					add 8 to {res.%player%}
					set {class.%player%} to "Fell Commander"		
					send formatted "<gold><bold>Promoted to Fell Commander!"
				#New Classes
				else if arg 2 is "Keeper1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 16 to {hp.%player%}
					add 4 to {str.%player%}
					add 14 to {def.%player%}
					add 12 to {chr.%player%}
					add 10 to {lck.%player%}
					add 6 to {spd.%player%}
					add 8 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Warden"		
					send formatted "<gold><bold>Promoted to Warden!"
				else if arg 2 is "Troubador1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 8 to {str.%player%}
					add 6 to {def.%player%}
					add 16 to {spd.%player%}
					add 12 to {mag.%player%}
					add 6 to {res.%player%}
					add 8 to {hp.%player%}
					add 8 to {chr.%player%}
					add 16 to {lck.%player%}
					set {class.%player%} to "Valkyrie"		
					send formatted "<gold><bold>Promoted to Valkyrie!"					
				else if arg 2 is "Charlatan1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 10 to {hp.%player%}
					add 6 to {str.%player%}
					add 6 to {def.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					add 10 to {spd.%player%}
					add 12 to {mag.%player%}
					add 16 to {res.%player%}
					set {class.%player%} to "Occultist"		
					send formatted "<gold><bold>Promoted to Occultist!"
				else if arg 2 is "Poet1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 6 to {str.%player%}
					add 4 to {def.%player%}
					add 14 to {spd.%player%}
					add 12 to {mag.%player%}
					add 4 to {res.%player%}
					add 8 to {hp.%player%}
					add 14 to {chr.%player%}
					add 14 to {lck.%player%}
					set {class.%player%} to "Bard"		
					send formatted "<gold><bold>Promoted to Bard!"
				else if arg 2 is "Outlaw1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 8 to {hp.%player%}
					add 20 to {str.%player%}
					add 6 to {def.%player%}
					add 8 to {chr.%player%}
					add 18 to {lck.%player%}
					add 14 to {spd.%player%}
					add 4 to {mag.%player%}
					add 6 to {res.%player%}
					set {class.%player%} to "Cleaner"		
					send formatted "<gold><bold>Promoted to Cleaner!"
				else if arg 2 is "Conjurer1":
					add {hpcap.%player%} to {hpcap.%player%}
					add {strcap.%player%} to {strcap.%player%}
					add {defcap.%player%} to {defcap.%player%}
					add {lckcap.%player%} to {lckcap.%player%}
					add {chrcap.%player%} to {chrcap.%player%}
					add {spdcap.%player%} to {spdcap.%player%}
					add {magcap.%player%} to {magcap.%player%}
					add {rescap.%player%} to {rescap.%player%}
					add 16 to {hp.%player%}
					add 8 to {str.%player%}
					add 8 to {def.%player%}
					add 4 to {chr.%player%}
					add 10 to {lck.%player%}
					add 8 to {spd.%player%}
					add 18 to {mag.%player%}
					add 10 to {res.%player%}
					set {class.%player%} to "Thaumaturge"		
					send formatted "<gold><bold>Promoted to Thaumaturge!"
				#New Classes 3rd Promote
				else if arg 2 is "Warden":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 16 to {hp.%player%}
					add 4 to {str.%player%}
					add 14 to {def.%player%}
					add 12 to {chr.%player%}
					add 10 to {lck.%player%}
					add 6 to {spd.%player%}
					add 8 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Guardian"		
					send formatted "<gold><bold>Promoted to Guardian!"
				else if arg 2 is "Valkyrie":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 8 to {str.%player%}
					add 6 to {def.%player%}
					add 16 to {spd.%player%}
					add 12 to {mag.%player%}
					add 6 to {res.%player%}
					add 8 to {hp.%player%}
					add 8 to {chr.%player%}
					add 16 to {lck.%player%}
					set {class.%player%} to "Master Knight"		
					send formatted "<gold><bold>Promoted to Master Knight!"			
				else if arg 2 is "Occultist":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 10 to {hp.%player%}
					add 6 to {str.%player%}
					add 6 to {def.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					add 10 to {spd.%player%}
					add 12 to {mag.%player%}
					add 16 to {res.%player%}
					set {class.%player%} to "Augur"		
					send formatted "<gold><bold>Promoted to Augur!"
				else if arg 2 is "Bard":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 6 to {str.%player%}
					add 4 to {def.%player%}
					add 14 to {spd.%player%}
					add 12 to {mag.%player%}
					add 4 to {res.%player%}
					add 8 to {hp.%player%}
					add 14 to {chr.%player%}
					add 14 to {lck.%player%}
					set {class.%player%} to "Minstrel"		
					send formatted "<gold><bold>Promoted to Minstrel!"
				else if arg 2 is "Cleaner":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 8 to {hp.%player%}
					add 20 to {str.%player%}
					add 6 to {def.%player%}
					add 8 to {chr.%player%}
					add 18 to {lck.%player%}
					add 14 to {spd.%player%}
					add 4 to {mag.%player%}
					add 6 to {res.%player%}
					set {class.%player%} to "Assassin"		
					send formatted "<gold><bold>Promoted to Assassin!"
				else if arg 2 is "Thaumaturge":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 16 to {hp.%player%}
					add 8 to {str.%player%}
					add 8 to {def.%player%}
					add 4 to {chr.%player%}
					add 10 to {lck.%player%}
					add 8 to {spd.%player%}
					add 18 to {mag.%player%}
					add 10 to {res.%player%}
					set {class.%player%} to "Warlock"		
					send formatted "<gold><bold>Promoted to Warlock!"					
				else if arg 2 is "Rogue":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 8 to {hp.%player%}
					add 6 to {str.%player%}
					add 6 to {def.%player%}
					add 22 to {chr.%player%}
					add 14 to {lck.%player%}
					add 14 to {spd.%player%}
					add 4 to {mag.%player%}
					add 6 to {res.%player%}
					set {class.%player%} to "Freeblade"
					#make player execute command "/grantskill 0 Locktouch"
					send formatted "<gold><bold>Promoted to Freeblade!"
				else if arg 2 is "Builder":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 20 to {hp.%player%}
					add 8 to {str.%player%}
					add 8 to {def.%player%}
					add 2 to {chr.%player%}
					add 4 to {lck.%player%}
					add 12 to {spd.%player%}
					add 12 to {mag.%player%}
					add 14 to {res.%player%}
					set {class.%player%} to "Craftsman"
					#make player execute command "/grantskill 0 Craftsmanship"
					send formatted "<gold><bold>Promoted to Craftsman!"
				else if arg 2 is "Ranger":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 12 to {hp.%player%}
					add 14 to {str.%player%}
					add 12 to {def.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					add 10 to {spd.%player%}
					add 6 to {mag.%player%}
					add 6 to {res.%player%}
					set {class.%player%} to "Sniper"
					#make player execute command "/grantskill 0 Heavy Draw"
					send formatted "<gold><bold>Promoted to Sniper!"
				else if arg 2 is "Tactician":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 8 to {hp.%player%}
					add 10 to {str.%player%}
					add 12 to {def.%player%}
					add 14 to {chr.%player%}
					add 8 to {lck.%player%}
					add 8 to {spd.%player%}
					add 12 to {mag.%player%}
					add 8 to {res.%player%}
					set {class.%player%} to "Grandmaster"
					#make player execute command "/grantskill 0 Spectrum +10"
					send formatted "<gold><bold>Promoted to Grandmaster!"
				else if arg 2 is "Rifleman":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 8 to {hp.%player%}
					add 14 to {str.%player%}
					add 6 to {def.%player%}
					add 16 to {chr.%player%}
					add 14 to {lck.%player%}
					add 14 to {spd.%player%}
					add 2 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Doom Slayer"
					#make player execute command "/grantskill 0 Resourceful"
					send formatted "<gold><bold>Promoted to Doom Slayer!"
				else if arg 2 is "Angel Slayer":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 6 to {hp.%player%}
					add 12 to {str.%player%}
					add 4 to {def.%player%}
					add 16 to {chr.%player%}
					add 14 to {lck.%player%}
					add 12 to {spd.%player%}
					add 12 to {mag.%player%}
					add 4 to {res.%player%}
					set {class.%player%} to "Platinum Star"
					#make player execute command "/grantskill 0 Trigger Heart"
					send formatted "<gold><bold>Promoted to Platinum Star!"
				else if arg 2 is "General":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 18 to {hp.%player%}
					add 8 to {str.%player%}
					add 18 to {def.%player%}
					add 12 to {chr.%player%}
					add 10 to {lck.%player%}
					add 6 to {spd.%player%}
					add 4 to {mag.%player%}
					add 6 to {res.%player%}
					#make player execute command "/grantskill 0 Steady Breath"
					set {class.%player%} to "Chieftain"
					send formatted "<gold><bold>Promoted to Chieftain!"
				else if arg 2 is "Paladin":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 8 to {hp.%player%}
					add 12 to {str.%player%}
					add 6 to {def.%player%}
					add 12 to {chr.%player%}
					add 14 to {lck.%player%}
					add 16 to {spd.%player%}
					add 4 to {mag.%player%}
					add 8 to {res.%player%}
					set {class.%player%} to "Crusader"
					#make player execute command "/grantskill 0 Crusader's Blood"
					#make player execute command "/grantskill 0 Crusader's Charge"
					send formatted "<gold><bold>Promoted to Crusader!"
				else if arg 2 is "Myrmidon":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 10 to {hp.%player%}
					add 16 to {str.%player%}
					add 4 to {def.%player%}
					add 4 to {chr.%player%}
					add 18 to {lck.%player%}
					add 20 to {spd.%player%}
					add 4 to {mag.%player%}
					add 4 to {res.%player%}
					#make player execute command "/grantskill 0 Close Call"
					set {class.%player%} to "Swordmaster"
					send formatted "<gold><bold>Promoted to Swordmaster!"
				else if arg 2 is "Berserker":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 16 to {hp.%player%}
					add 18 to {str.%player%}
					add 14 to {def.%player%}
					add 4 to {chr.%player%}
					add 4 to {lck.%player%}
					add 10 to {spd.%player%}
					add 2 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Warrior"
					#make player execute command "/grantskill 0 STR +20"
					send formatted "<gold><bold>Promoted to Warrior!"
				else if arg 2 is "Hero":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 10 to {str.%player%}
					add 10 to {def.%player%}
					add 10 to {spd.%player%}
					add 10 to {mag.%player%}
					add 10 to {res.%player%}
					add 10 to {hp.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					set {class.%player%} to "Prince"
					#make player execute command "/grantskill 0 Lord's Blood"
					send formatted "<gold><bold>Promoted to Prince!"
				else if arg 2 is "Sorcerer":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 6 to {hp.%player%}
					add 6 to {str.%player%}
					add 6 to {def.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					add 10 to {spd.%player%}
					add 20 to {mag.%player%}
					add 12 to {res.%player%}
					set {class.%player%} to "Archwizard"
					#make player execute command "/grantskill 0 Brazen Spectrum"
					drop 1 blaze rod named "<yellow><bold>Magic Wand" at the player
					send formatted "<gold><bold>Promoted to an Archwizard!"
				#UNUSED
				#else if arg 2 is "Manakete":
					#add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					#add floor({strcap.%player%} / 2) to {strcap.%player%}
					#add floor({defcap.%player%} / 2) to {defcap.%player%}
					#add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					#add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					#add floor({magcap.%player%} / 2) to {magcap.%player%}
					#add floor({rescap.%player%} / 2) to {rescap.%player%}
					#add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					#add 16 to {hp.%player%}
					#add 2 to {str.%player%}
					#add 5 to {def.%player%}
					#add 2 to {chr.%player%}
					#add 3 to {lck.%player%}
					#add 4 to {spd.%player%}
					#add 12 to {mag.%player%}
					#add 6 to {res.%player%}
					#set {class.%player%} to "Divine Dragon"
					#make player execute command "/grantskill 0 Draconic Aura"
					#send formatted "<gold><bold>Promoted to Divine Dragon!"
				else if arg 2 is "Prince":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 10 to {str.%player%}
					add 10 to {def.%player%}
					add 10 to {spd.%player%}
					add 10 to {mag.%player%}
					add 10 to {res.%player%}
					add 10 to {hp.%player%}
					add 10 to {chr.%player%}
					add 10 to {lck.%player%}
					set {class.%player%} to "Lord"
					#make player execute command "/grantskill 0 Rightful King"
					send formatted "<gold><bold>Promoted to Lord!"
				else if arg 2 is "Bishop":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}
					add 12 to {hp.%player%}
					add 4 to {str.%player%}
					add 6 to {def.%player%}
					add 10 to {chr.%player%}
					add 14 to {lck.%player%}
					add 6 to {spd.%player%}
					add 14 to {mag.%player%}
					add 14 to {res.%player%}
					set {class.%player%} to "Sage"
					#make player execute command "/grantskill 0 Wolf Fangs"
					send formatted "<gold><bold>Promoted to Sage!"
				else if arg 2 is "Fell Commander":
					add floor({hpcap.%player%} / 2) to {hpcap.%player%}
					add floor({strcap.%player%} / 2) to {strcap.%player%}
					add floor({defcap.%player%} / 2) to {defcap.%player%}
					add floor({lckcap.%player%} / 2) to {lckcap.%player%}
					add floor({spdcap.%player%} / 2) to {spdcap.%player%}
					add floor({magcap.%player%} / 2) to {magcap.%player%}
					add floor({rescap.%player%} / 2) to {rescap.%player%}
					add floor({chrcap.%player%} / 2) to {chrcap.%player%}	
					add 14 to {hp.%player%}
					add 4 to {str.%player%}
					add 4 to {def.%player%}
					add 8 to {chr.%player%}
					add 10 to {lck.%player%}
					add 14 to {spd.%player%}
					add 18 to {mag.%player%}
					add 8 to {res.%player%}
					set {class.%player%} to "Requisitioner"
					send formatted "<gold><bold>Promoted to Requisitioner!"					
				else if arg 2 is "Overclass":
					add 15 to {strcap.%player%}
					add 8 to {str.%player%}
					add 15 to {defcap.%player%}
					add 8 to {def.%player%}
					add 15 to {spdcap.%player%}
					add 8 to {spd.%player%}
					add 15 to {magcap.%player%}
					add 8 to {mag.%player%}
					add 20 to {hpcap.%player%}
					add 8 to {hp.%player%}
					add 15 to {lckcap.%player%}
					add 8 to {lck.%player%}
					add 15 to {chrcap.%player%}
					add 8 to {chr.%player%}
					add 15 to {rescap.%player%}
					add 8 to {res.%player%}
					send formatted "<gold><bold>Overclass complete!"
				else if arg 2 is "cancel":
					set {promotionready.%player%} to 0
				add 20 to {lvlcap.%player%}
				#Re-Add Asset/Flaw if present
				if {boon.%player%} is set:
					if {bane.%player%} is set:
						add ((getClassBoonBaneAmount(player,{boon.%player%},1)) * {promoted.%player%}) to {%{boon.%player%}%.%player%}
						add ((getClassBoonBaneAmount(player,{boon.%player%},1)) * {promoted.%player%} * 2) to {%{boon.%player%}%cap.%player%}
						add 20 to {%{boon.%player%}%growth.%player%}
						add ((getClassBoonBaneAmount(player,{bane.%player%},0)) * {promoted.%player%}) to {%{bane.%player%}%.%player%}
						add ((getClassBoonBaneAmount(player,{bane.%player%},0)) * {promoted.%player%} * 2) to {%{bane.%player%}%cap.%player%}
				if {class.%player%} is "Journeyman":
					set {promoted.%player%} to 0
				if {str.%player%} is more than {strcap.%player%}:
					set {str.%player%} to {strcap.%player%}
				if {def.%player%} is more than {defcap.%player%}:
					set {def.%player%} to {defcap.%player%}
				if {lck.%player%} is more than {lckcap.%player%}:
					set {lck.%player%} to {lckcap.%player%}
				if {chr.%player%} is more than {chrcap.%player%}:
					set {chr.%player%} to {chrcap.%player%}
				if {hp.%player%} is more than {hpcap.%player%}:
					set {hp.%player%} to {hpcap.%player%}
				if {spd.%player%} is more than {spdcap.%player%}:
					set {spd.%player%} to {spdcap.%player%}
				if {mag.%player%} is more than {magcap.%player%}:
					set {mag.%player%} to {magcap.%player%}
				if {res.%player%} is more than {rescap.%player%}:
					set {res.%player%} to {rescap.%player%}
				wait 0.4 seconds
				send title "<gold><bold>--==Class Up!==--" with subtitle "<gold>%{class.%player%}%" to player for 3 seconds with fade in 0.5 second and fade out 1 seconds
				play sound "entity.player.levelup" with volume 2 and pitch 1 at player for player
				play 10 (mob spawner flames with speed 1) at the player
				play 50 (magical critical hit with speed 0) at the player
				play 50 (smoke with speed 0) at the player
				strike lightning effect at the player
				if arg 2 is "Overclass":
					broadcast "<gold>%player's name% has Overclassed!"
				else if arg 2 is "Reset":
					broadcast "<gold>%player's name% has reset their stats."
				else:
					broadcast "<gold>%player's name% has promoted to %{class.%player%}%!"
				wait 2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Strength: %{_oldstr.%player%}% --> %{str.%player%}%"
				wait 0.2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Defense: %{_olddef.%player%}% --> %{def.%player%}%"
				wait 0.2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Luck: %{_oldlck}% --> %{lck.%player%}%"
				wait 0.2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Charm: %{_oldchr}% --> %{chr.%player%}%"
				wait 0.2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Speed: %{_oldspd.%player%}% --> %{spd.%player%}%"
				wait 0.2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Magic: %{_oldmag.%player%}% --> %{mag.%player%}%"
				wait 0.2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Resistance: %{_oldres}% --> %{res.%player%}%"
				wait 0.2 seconds
				play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at player for player
				send formatted "Health: %{_oldhp.%player%}% --> %{hp.%player%}%"
				set the player's maximum health to ({hp.%player%} / 2) + ({hpbuff.%player%} / 2)
				if {quotesToggle.%player%} is true:
					make player say {playerQuotes.%player%::Promotion}
				add 1 to {promoted.%player%}
				if {quests.%player%::BNW_QUEST_00} is not set:
					make player execute command "/perks %{class.%player%}%"
					#startQuest(player,"Brave New World","Check your Journal for quest information. Search your house's chests for it!")
			else:
				send formatted "You may only promote through use of the Journey's Crest or Warrior's Proof."
				
command /resetClassXP:
	trigger:
		set {classXP.%player%} to 0
				
#MARKER - Level-Up Handler
command /adm_lvlup <player>:
	executable by: console
	trigger:
		if arg 1 is alive:
			if {lvl.%arg 1%} is {lvl.%arg 1%}:
				if {lvl.%arg 1%} is less than {lvlcap.%arg 1%}:
					while {isLevelling.%arg 1%} is set:
						wait 5 ticks
					set {isLevelling.%arg 1%} to true
					play sound "entity.player.levelup" with volume 2 and pitch 1 at arg 1 for arg 1
					#send formatted "<gold>Level Up!"
					set {_oldstr.%arg 1%} to {str.%arg 1%}
					set {_olddef.%arg 1%} to {def.%arg 1%}
					set {_oldhp.%arg 1%} to {hp.%arg 1%}
					set {_oldLCK.%arg 1%} to {LCK.%arg 1%}
					set {_oldspd.%arg 1%} to {spd.%arg 1%}
					set {_oldmag.%arg 1%} to {mag.%arg 1%}
					set {_oldLCK} to {LCK.%arg 1%}
					set {_oldres} to {res.%arg 1%}
					set {_oldchr} to {chr.%arg 1%}
					set {_timesToLVL} to 0
					set {_playerLVL} to getPromotionCompensatedClassLevel(arg 1)
					while {_timesToLVL} is not 95:
						if {classXP.%arg 1%} - ceil((({_playerLVL} + ({_playerLVL} ^ 2)) / (1 + ({promoted.%arg 1%} - 1))) + 10) is more than or equal to 0:
							if {lvl.%arg 1%} + {_timesToLVL} is less than {lvlcap.%arg 1%}:
								subtract ceil((({_playerLVL} + ({_playerLVL} ^ 2)) / (1 + ({promoted.%arg 1%} - 1))) + 10) from {classXP.%arg 1%}
								add 1 to {_timesToLVL}
							else:
								exit 1 loop
						else:
							exit 1 loop
					loop {_timesToLVL} times:
						set {_abilityPointsToAdd} to 3
						if {traits.%arg 1%::Skilled} is true:
							set {_abilityPointsToAdd} to 1
						if {traits.%arg 1%::Fast Learner} is true:
							set {_abilityPointsToAdd} to {_abilityPointsToAdd} * 2
						add {_abilityPointsToAdd} to {abilityPoints.%arg 1%}
						#Increase Proficient abilities
						set {_proficentBonusPoints} to 2
						if {traits.%arg 1%::Fast Learner} is true:
							if {FastLearnerLevelPenalty.%player%} is not set:
								set {_proficentBonusPoints} to 0
								set {FastLearnerLevelPenalty.%player%} to true
							else:
								clear {FastLearnerLevelPenalty.%player%}
						if {traits.%arg 1%::Gifted} is true:
							set {_proficentBonusPoints} to 0
						add {_proficentBonusPoints} to {abilities.%arg 1%::%{abilityProficiencies.%arg 1%::1}%}
						add {_proficentBonusPoints} to {abilities.%arg 1%::%{abilityProficiencies.%arg 1%::2}%}
						#Inference perk effect
						if checkSlots(arg 1,"Inference") is 1:
							if {abilityProficiencies.%arg 1%::1} is "Traditional Weapons":
								add 1 to {abilities.%arg 1%::Magical Weapons}
							else if {abilityProficiencies.%arg 1%::2} is "Traditional Weapons":
								add 1 to {abilities.%arg 1%::Magical Weapons}
							if {abilityProficiencies.%arg 1%::1} is "Magical Weapons":
								add 1 to {abilities.%arg 1%::Traditional Weapons}
							else if {abilityProficiencies.%arg 1%::2} is "Magical Weapons":
								add 1 to {abilities.%arg 1%::Traditional Weapons}
						#Armsthrift
						if checkSlots(arg 1,"Armsthrift") is 1:
							add 1 to {abilities.%arg 1%::Traditional Weapons}
							add 1 to {abilities.%arg 1%::Magical Weapons}
							add 1 to {abilities.%arg 1%::Guns}
						add 1 to {lvl.%arg 1%}
						#HP Growths
						if {hpgrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {hpgrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {hp.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {hp.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {hp.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {hp.%arg 1%}								
						else:
							chance of {hpgrowth.%arg 1%}%:
								add 1 to {hp.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {hp.%arg 1%}
						#STR Growths
						if {strgrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {strgrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {str.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {str.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {str.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {str.%arg 1%}
						else:
							chance of {strgrowth.%arg 1%}%:
								add 1 to {str.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {str.%arg 1%}
						#DEF Growths
						if {defgrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {defgrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {def.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {def.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {def.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {def.%arg 1%}
						else:
							chance of {defgrowth.%arg 1%}%:
								add 1 to {def.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {def.%arg 1%}
						#LCK Growths
						if {lckgrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {lckgrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {lck.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {lck.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {lck.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {lck.%arg 1%}
						else:
							chance of {lckgrowth.%arg 1%}%:
								add 1 to {lck.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {lck.%arg 1%}
						#CHR Growths
						if {chrgrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {chrgrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {chr.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {chr.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {chr.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {chr.%arg 1%}
						else:
							chance of {chrgrowth.%arg 1%}%:
								add 1 to {chr.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {chr.%arg 1%}
						#SPD Growths
						if {spdgrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {spdgrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {spd.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {spd.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {spd.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {spd.%arg 1%}
						else:
							chance of {spdgrowth.%arg 1%}%:
								add 1 to {spd.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {spd.%arg 1%}
						#MAG Growths
						if {maggrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {maggrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {mag.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {mag.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {mag.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {mag.%arg 1%}
						else:
							chance of {maggrowth.%arg 1%}%:
								add 1 to {mag.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {mag.%arg 1%}
						#RES Growths
						if {resgrowth.%arg 1%} is more than 100:
							set {_growthtemp} to {resgrowth.%arg 1%}
							while {_growthtemp} is more than 100:
								add 1 to {res.%arg 1%}
								subtract 100 from {_growthtemp}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {res.%arg 1%}
							chance of {_growthtemp}%:
								add 1 to {res.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {res.%arg 1%}
						else:
							chance of {resgrowth.%arg 1%}%:
								add 1 to {res.%arg 1%}
								if checkSlots(arg 1,"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {res.%arg 1%}
						#Limit growths to stat caps
						if {str.%arg 1%} is more than {strcap.%arg 1%}:
							set {str.%arg 1%} to {strcap.%arg 1%}
						if {def.%arg 1%} is more than {defcap.%arg 1%}:
							set {def.%arg 1%} to {defcap.%arg 1%}
						if {lck.%arg 1%} is more than {lckcap.%arg 1%}:
							set {lck.%arg 1%} to {lckcap.%arg 1%}
						if {chr.%arg 1%} is more than {chrcap.%arg 1%}:
							set {chr.%arg 1%} to {chrcap.%arg 1%}
						if {hp.%arg 1%} is more than {hpcap.%arg 1%}:
							set {hp.%arg 1%} to {hpcap.%arg 1%}
						if {spd.%arg 1%} is more than {spdcap.%arg 1%}:
							set {spd.%arg 1%} to {spdcap.%arg 1%}
						if {mag.%arg 1%} is more than {magcap.%arg 1%}:
							set {mag.%arg 1%} to {magcap.%arg 1%}
						if {res.%arg 1%} is more than {rescap.%arg 1%}:
							set {res.%arg 1%} to {rescap.%arg 1%}
					send title "<gold><bold>---===Level Up!===---" with subtitle "<bold>Level: %{lvl.%arg 1%}%" to arg 1 for 2 seconds with fade in 0.25 second and fade out 0.5 seconds
					wait 2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Strength:<reset> %{_oldstr.%arg 1%}% --> %{str.%arg 1%}%" to arg 1
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Defense: <reset>%{_olddef.%arg 1%}% --> %{def.%arg 1%}%"  to arg 1
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Luck:<reset> %{_oldlck}% --> %{lck.%arg 1%}%"  to arg 1
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Charm:<reset> %{_oldchr}% --> %{chr.%arg 1%}%"  to arg 1
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Speed:<reset> %{_oldspd.%arg 1%}% --> %{spd.%arg 1%}%"  to arg 1
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Magic:<reset> %{_oldmag.%arg 1%}% --> %{mag.%arg 1%}%"  to arg 1
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Resistance:<reset> %{_oldres}% --> %{res.%arg 1%}%"  to arg 1
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at arg 1 for arg 1
					send formatted "<gold>Vitality:<reset> %{_oldhp.%arg 1%}% --> %{hp.%arg 1%}%"  to arg 1
					set the arg 1's maximum health to ({hp.%arg 1%} / 2) + ({hpbuff.%arg 1%} / 2)
					wait 0.2 seconds
					set {_oldbst} to {bst.%arg 1%}
					set {bst.%arg 1%} to ({str.%arg 1%} + {def.%arg 1%} + {LCK.%arg 1%} + {spd.%arg 1%} + {res.%arg 1%} + {hp.%arg 1%} + {chr.%arg 1%})
					set {bstcap.%arg 1%} to ({strcap.%arg 1%} + {defcap.%arg 1%} + {LCKcap.%arg 1%} + {spdcap.%arg 1%} + {magcap.%arg 1%} + {hpcap.%arg 1%} + {chrcap.%arg 1%})
					if {quotesToggle.%arg 1%} is true:
						if {bstcap.%arg 1%} - {bst.%arg 1%} is less than 10:
							make arg 1 say {playerQuotes.%arg 1%::MaxLevel}
						else if {bst.%arg 1%} - {_oldbst} is less than 2:
							make arg 1 say {playerQuotes.%arg 1%::BadLevelUp}
						else if {bst.%arg 1%} - {_oldbst} is less than 5:
							make arg 1 say {playerQuotes.%arg 1%::AverageLevelUp}
						else:
							make arg 1 say {playerQuotes.%arg 1%::GoodLevelUp}
					#Renewal at LVL 18
					if {lvl.%arg 1%} is more than 17:
						if {perks.%arg 1%::Renewal} is not set:
							make arg 1 execute command "/grantskill 0 Renewal"
					#Restock at LVL 19
					if {lvl.%arg 1%} is more than 18:
						if {perks.%arg 1%::Restock} is not set:
							make arg 1 execute command "/grantskill 0 Restock"
					#HP +5 at LVL 1
					if {lvl.%arg 1%} is more than 0:
						if {perks.%arg 1%::HP +5} is not set:
							make arg 1 execute command "/grantskill 0 HP +5"
					#STR +3 at LVL 2
					if {lvl.%arg 1%} is more than 1:
						if {perks.%arg 1%::STR +3} is not set:
							make arg 1 execute command "/grantskill 0 STR +3"
					#DEF +3 at LVL 3
					if {lvl.%arg 1%} is more than 2:
						if {perks.%arg 1%::DEF +3} is not set:
							make arg 1 execute command "/grantskill 0 DEF +3"
					#LCK +3 at LVL 5
					if {lvl.%arg 1%} is more than 4:
						if {perks.%arg 1%::LCK +3} is not set:
							make arg 1 execute command "/grantskill 0 LCK +3"
					#SPD +3 at LVL 6
					if {lvl.%arg 1%} is more than 5:
						if {perks.%arg 1%::SPD +3} is not set:
							make arg 1 execute command "/grantskill 0 SPD +3"
					#MAG +3 at LVL 7
					if {lvl.%arg 1%} is more than 6:
						if {perks.%arg 1%::MAG +3} is not set:
							make arg 1 execute command "/grantskill 0 MAG +3"
					#RES +3 at LVL 4
					if {lvl.%arg 1%} is more than 3:
						if {perks.%arg 1%::RES +3} is not set:
							make arg 1 execute command "/grantskill 0 RES +3"
					#CHR +7 at LVL 7
					if {lvl.%arg 1%} is more than 6:
						if {perks.%arg 1%::CHR +7} is not set:
							make arg 1 execute command "/grantskill 0 CHR +7"
					#High Jumper at LVL 3
					if {lvl.%arg 1%} is more than 2:
						if {perks.%arg 1%::High Jumper} is not set:
							make arg 1 execute command "/grantskill 0 High Jumper"
					#Acrobatics at LVL 8
					if {lvl.%arg 1%} is more than 7:
						if {perks.%arg 1%::Acrobatics} is not set:
							make arg 1 execute command "/grantskill 0 Acrobatics"
					#Brazen MAG at LVL 10
					if {lvl.%arg 1%} is more than 9:
						if {perks.%arg 1%::Brazen MAG} is not set:
							make arg 1 execute command "/grantskill 0 Brazen MAG"
					#Brazen RES at LVL 11
					if {lvl.%arg 1%} is more than 10:
						if {perks.%arg 1%::Brazen RES} is not set:
							make arg 1 execute command "/grantskill 0 Brazen RES"
					#Brazen LCK at LVL 12
					if {lvl.%arg 1%} is more than 11:
						if {perks.%arg 1%::Brazen LCK} is not set:
							make arg 1 execute command "/grantskill 0 Brazen LCK"
					#Brazen DEF at LVL 13
					if {lvl.%arg 1%} is more than 12:
						if {perks.%arg 1%::Brazen DEF} is not set:
							make arg 1 execute command "/grantskill 0 Brazen DEF"
					#Brazen SPD at LVL 14
					if {lvl.%arg 1%} is more than 13:
						if {perks.%arg 1%::Brazen SPD} is not set:
							make arg 1 execute command "/grantskill 0 Brazen SPD"
					#Brazen STR at LVL 15
					if {lvl.%arg 1%} is more than 14:
						if {perks.%arg 1%::Brazen STR} is not set:
							make arg 1 execute command "/grantskill 0 Brazen STR"
					#Fierce Posture at LVL 16
					if {lvl.%arg 1%} is more than 15:
						if {perks.%arg 1%::Fierce Posture} is not set:
							make arg 1 execute command "/grantskill 0 Fierce Posture"
					#Steady Posture at LVL 17
					if {lvl.%arg 1%} is more than 16:
						if {perks.%arg 1%::Steady Posture} is not set:
							make arg 1 execute command "/grantskill 0 Steady Posture"
					#Rally Strength at LVL 18
					if {lvl.%arg 1%} is more than 17:
						if {perks.%arg 1%::Rally Strength} is not set:
							make arg 1 execute command "/grantskill 0 Rally Strength"
					#Rally Speed at LVL 19
					if {lvl.%arg 1%} is more than 18:
						if {perks.%arg 1%::Rally Speed} is not set:
							make arg 1 execute command "/grantskill 0 Rally Speed"
					#Rally Resistance at LVL 20
					if {lvl.%arg 1%} is more than 19:
						if {perks.%arg 1%::Rally Resistance} is not set:
							make arg 1 execute command "/grantskill 0 Rally Resistance"
					#Guns Specialist at LVL 21
					if {lvl.%arg 1%} is more than 20:
						if {perks.%arg 1%::Guns Specialist} is not set:
							make arg 1 execute command "/grantskill 0 Guns Specialist"
					#Magical Specialist at LVL 22
					if {lvl.%arg 1%} is more than 21:
						if {perks.%arg 1%::Magical Specialist} is not set:
							make arg 1 execute command "/grantskill 0 Magical Specialist"
					#Traditional Specialist at LVL 23
					if {lvl.%arg 1%} is more than 22:
						if {perks.%arg 1%::Traditional Specialist} is not set:
							make arg 1 execute command "/grantskill 0 Traditional Specialist"
					#Renown at LVL 25
					if {lvl.%arg 1%} is more than 24:
						if {perks.%arg 1%::Renown} is not set:
							make arg 1 execute command "/grantskill 0 Renown"
					#Darting Blow II at LVL 26
					if {lvl.%arg 1%} is more than 25:
						if {perks.%arg 1%::Darting Blow II} is not set:
							make arg 1 execute command "/grantskill 0 Darting Blow II"
					#Heavy Blow at LVL 27
					if {lvl.%arg 1%} is more than 26:
						if {perks.%arg 1%::Heavy Blow} is not set:
							make arg 1 execute command "/grantskill 0 Heavy Blow"
					#Bracing Blow at LVL 28
					if {lvl.%arg 1%} is more than 27:
						if {perks.%arg 1%::Bracing Blow} is not set:
							make arg 1 execute command "/grantskill 0 Bracing Blow"
					#Seal ATK at LVL 29
					if {lvl.%arg 1%} is more than 28:
						if {perks.%arg 1%::Seal ATK} is not set:
							make arg 1 execute command "/grantskill 0 Seal ATK"
					#Seal DEF/RES at LVL 30
					if {lvl.%arg 1%} is more than 29:
						if {perks.%arg 1%::Seal DEF/RES} is not set:
							make arg 1 execute command "/grantskill 0 Seal DEF/RES"
					#Critical Snag at LVL 31
					if {lvl.%arg 1%} is more than 30:
						if {perks.%arg 1%::Critical Snag} is not set:
							make arg 1 execute command "/grantskill 0 Critical Snag"
					#Rising Courage at LVL 32
					if {lvl.%arg 1%} is more than 31:
						if {perks.%arg 1%::Rising Courage} is not set:
							make arg 1 execute command "/grantskill 0 Rising Courage"
					#Vantage at LVL 33
					if {lvl.%arg 1%} is more than 32:
						if {perks.%arg 1%::Vantage} is not set:
							make arg 1 execute command "/grantskill 0 Vantage"
					#Sacred Boost at LVL 34
					if {lvl.%arg 1%} is more than 33:
						if {perks.%arg 1%::Sacred Boost} is not set:
							make arg 1 execute command "/grantskill 0 Sacred Boost"							
					#Mystic Boost at LVL 35
					if {lvl.%arg 1%} is more than 34:
						if {perks.%arg 1%::Mystic Boost} is not set:
							make arg 1 execute command "/grantskill 0 Mystic Boost"
					#Nihl at LVL 41
					if {lvl.%arg 1%} is more than 40:
						if {perks.%arg 1%::Nihl} is not set:
							make arg 1 execute command "/grantskill 0 Nihl"
					#Spells
					#Fire spell at LVL 12
					set {_isMagical} to canUseMagic(arg 1)
					if {_isMagical} is true:
						if {lvl.%arg 1%} is more than 11:
							if {spells.%arg 1%::Fire} is not set:
								make arg 1 execute command "/grantspell 0 Fire"
						if {lvl.%arg 1%} is more than 14:
							if {spells.%arg 1%::Hail} is not set:
								make arg 1 execute command "/grantspell 0 Hail"
						if {lvl.%arg 1%} is more than 17:
							if {spells.%arg 1%::Thunder} is not set:
								make arg 1 execute command "/grantspell 0 Thunder"
						if {lvl.%arg 1%} is more than 20:
							if {spells.%arg 1%::Wind} is not set:
								make arg 1 execute command "/grantspell 0 Wind"
						if {lvl.%arg 1%} is more than 23:
							if {spells.%arg 1%::Elfire} is not set:
								make arg 1 execute command "/grantspell 0 Elfire"
						if {lvl.%arg 1%} is more than 26:
							if {spells.%arg 1%::Blizzard} is not set:
								make arg 1 execute command "/grantspell 0 Blizzard"
						if {lvl.%arg 1%} is more than 29:
							if {spells.%arg 1%::Thoron} is not set:
								make arg 1 execute command "/grantspell 0 Thoron"
						if {lvl.%arg 1%} is more than 32:
							if {spells.%arg 1%::Tornado} is not set:
								make arg 1 execute command "/grantspell 0 Tornado"
						if {lvl.%arg 1%} is more than 35:
							if {spells.%arg 1%::Bolganone} is not set:
								make arg 1 execute command "/grantspell 0 Bolganone"
						if {lvl.%arg 1%} is more than 38:
							if {spells.%arg 1%::Aurora} is not set:
								make arg 1 execute command "/grantspell 0 Aurora"
						if {lvl.%arg 1%} is more than 41:
							if {spells.%arg 1%::Light} is not set:
								make arg 1 execute command "/grantspell 0 Light"
						if {lvl.%arg 1%} is more than 59:
							if {spells.%arg 1%::Spellblade} is not set:
								make arg 1 execute command "/grantspell 0 Spellblade"
					clear {isLevelling.%arg 1%}
					
#MARKER - Level-Up Handler
command /npc_lvlup <player>:
	executable by: console
	trigger:
		if arg 1 is alive:
			set {_CID} to citizen id of player
			if {npc_lvl.%{_CID}%} is {npc_lvl.%{_CID}%}:
				if {npc_lvl.%{_CID}%} is less than {npc_lvlcap.%{_CID}%}:
					while {npc_isLevelling.%{_CID}%} is set:
						wait 5 ticks
					set {npc_isLevelling.%{_CID}%} to true
					#send formatted "<gold>Level Up!"
					set {_oldstr.%{_CID}%} to {npc_str.%{_CID}%}
					set {_olddef.%{_CID}%} to {npc_def.%{_CID}%}
					set {_oldhp.%{_CID}%} to {npc_hp.%{_CID}%}
					set {_oldLCK.%{_CID}%} to {npc_LCK.%{_CID}%}
					set {_oldspd.%{_CID}%} to {npc_spd.%{_CID}%}
					set {_oldmag.%{_CID}%} to {npc_mag.%{_CID}%}
					set {_oldLCK} to {npc_LCK.%{_CID}%}
					set {_oldres} to {npc_res.%{_CID}%}
					set {_oldchr} to {npc_chr.%{_CID}%}
					set {_timesToLVL} to 0
					set {_playerLVL} to getPromotionCompensatedClassLevel({_CID})
					while {_timesToLVL} is not 95:
						if {npc_classXP.%{_CID}%} - (ceil((({_playerLVL} + (({_playerLVL} - 1) ^ 2)) / 2) + 1)) is more than or equal to 0:
							subtract (ceil((({_playerLVL} + (({_playerLVL} - 1) ^ 2)) / 2) + 1)) from {npc_classXP.%{_CID}%}
							add 1 to {_timesToLVL}
						else:
							exit 1 loop
					loop {_timesToLVL} times:
						add 3 to {npc_abilityPoints.%{_CID}%}
						#Increase Proficient abilities
						add 2 to {npc_abilities.%{_CID}%::%{npc_abilityProficiencies.%{_CID}%::1}%}
						add 2 to {npc_abilities.%{_CID}%::%{npc_abilityProficiencies.%{_CID}%::2}%}
						#Inference perk effect
						if checkSlots({_CID},"Inference") is 1:
							if {npc_abilityProficiencies.%{_CID}%::1} is "Traditional Weapons":
								add 1 to {npc_abilities.%{_CID}%::Magical Weapons}
							else if {npc_abilityProficiencies.%{_CID}%::2} is "Traditional Weapons":
								add 1 to {npc_abilities.%{_CID}%::Magical Weapons}
							if {npc_abilityProficiencies.%{_CID}%::1} is "Magical Weapons":
								add 1 to {npc_abilities.%{_CID}%::Traditional Weapons}
							else if {npc_abilityProficiencies.%{_CID}%::2} is "Magical Weapons":
								add 1 to {npc_abilities.%{_CID}%::Traditional Weapons}
						add 1 to {npc_lvl.%{_CID}%}
						#HP Growths
						if {npc_hpgrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_hpgrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_hp.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_hp.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_hp.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_hp.%{_CID}%}								
						else:
							chance of {npc_hpgrowth.%{_CID}%}%:
								add 1 to {npc_hp.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_hp.%{_CID}%}
						#STR Growths
						if {npc_strgrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_strgrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_str.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_str.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_str.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_str.%{_CID}%}
						else:
							chance of {npc_strgrowth.%{_CID}%}%:
								add 1 to {npc_str.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_str.%{_CID}%}
						#DEF Growths
						if {npc_defgrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_defgrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_def.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_def.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_def.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_def.%{_CID}%}
						else:
							chance of {npc_defgrowth.%{_CID}%}%:
								add 1 to {npc_def.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_def.%{_CID}%}
						#LCK Growths
						if {npc_lckgrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_lckgrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_lck.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_lck.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_lck.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_lck.%{_CID}%}
						else:
							chance of {npc_lckgrowth.%{_CID}%}%:
								add 1 to {npc_lck.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_lck.%{_CID}%}
						#CHR Growths
						if {npc_chrgrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_chrgrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_chr.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_chr.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_chr.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_chr.%{_CID}%}
						else:
							chance of {npc_chrgrowth.%{_CID}%}%:
								add 1 to {npc_chr.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_chr.%{_CID}%}
						#SPD Growths
						if {npc_spdgrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_spdgrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_spd.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_spd.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_spd.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_spd.%{_CID}%}
						else:
							chance of {npc_spdgrowth.%{_CID}%}%:
								add 1 to {npc_spd.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_spd.%{_CID}%}
						#MAG Growths
						if {npc_maggrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_maggrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_mag.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_mag.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_mag.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_mag.%{_CID}%}
						else:
							chance of {npc_maggrowth.%{_CID}%}%:
								add 1 to {npc_mag.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_mag.%{_CID}%}
						#RES Growths
						if {npc_resgrowth.%{_CID}%} is more than 100:
							set {_growthtemp} to {npc_resgrowth.%{_CID}%}
							while {_growthtemp} is more than 100:
								add 1 to {npc_res.%{_CID}%}
								subtract 100 from {_growthtemp}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_res.%{_CID}%}
							chance of {_growthtemp}%:
								add 1 to {npc_res.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_res.%{_CID}%}
						else:
							chance of {npc_resgrowth.%{_CID}%}%:
								add 1 to {npc_res.%{_CID}%}
								if checkSlots({_CID},"Seth's Guidance") is 1:
									chance of 50%:
										add 1 to {npc_res.%{_CID}%}
						#Limit growths to stat caps
						if {npc_str.%{_CID}%} is more than {npc_strcap.%{_CID}%}:
							set {npc_str.%{_CID}%} to {npc_strcap.%{_CID}%}
						if {npc_def.%{_CID}%} is more than {npc_defcap.%{_CID}%}:
							set {npc_def.%{_CID}%} to {npc_defcap.%{_CID}%}
						if {npc_lck.%{_CID}%} is more than {npc_lckcap.%{_CID}%}:
							set {npc_lck.%{_CID}%} to {npc_lckcap.%{_CID}%}
						if {npc_chr.%{_CID}%} is more than {npc_chrcap.%{_CID}%}:
							set {npc_chr.%{_CID}%} to {npc_chrcap.%{_CID}%}
						if {npc_hp.%{_CID}%} is more than {npc_hpcap.%{_CID}%}:
							set {npc_hp.%{_CID}%} to {npc_hpcap.%{_CID}%}
						if {npc_spd.%{_CID}%} is more than {npc_spdcap.%{_CID}%}:
							set {npc_spd.%{_CID}%} to {npc_spdcap.%{_CID}%}
						if {npc_mag.%{_CID}%} is more than {npc_magcap.%{_CID}%}:
							set {npc_mag.%{_CID}%} to {npc_magcap.%{_CID}%}
						if {npc_res.%{_CID}%} is more than {npc_rescap.%{_CID}%}:
							set {npc_res.%{_CID}%} to {npc_rescap.%{_CID}%}
					send title "<gold><bold>---===Level Up!===---" with subtitle "<bold>Level: %{lvl.%{_CID}%}%" to {_CID} for 2 seconds with fade in 0.25 second and fade out 0.5 seconds
					wait 2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Strength:<reset> %{_oldstr.%{_CID}%}% --> %{str.%{_CID}%}%" to {_CID}
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Defense: <reset>%{_olddef.%{_CID}%}% --> %{def.%{_CID}%}%"  to {_CID}
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Luck:<reset> %{_oldlck}% --> %{lck.%{_CID}%}%"  to {_CID}
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Charm:<reset> %{_oldchr}% --> %{chr.%{_CID}%}%"  to {_CID}
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Speed:<reset> %{_oldspd.%{_CID}%}% --> %{spd.%{_CID}%}%"  to {_CID}
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Magic:<reset> %{_oldmag.%{_CID}%}% --> %{mag.%{_CID}%}%"  to {_CID}
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Resistance:<reset> %{_oldres}% --> %{res.%{_CID}%}%"  to {_CID}
					wait 0.2 seconds
					play sound "entity.experience_orb.pickup" with volume 2 and pitch 0.8 at {_CID} for {_CID}
					send formatted "<gold>Vitality:<reset> %{_oldhp.%{_CID}%}% --> %{hp.%{_CID}%}%"  to {_CID}
					set the {_CID}'s maximum health to ({hp.%{_CID}%} / 2) + ({hpbuff.%{_CID}%} / 2)
					wait 0.2 seconds
					set {_oldbst} to {bst.%{_CID}%}
					set {bst.%{_CID}%} to ({str.%{_CID}%} + {def.%{_CID}%} + {LCK.%{_CID}%} + {spd.%{_CID}%} + {res.%{_CID}%} + {hp.%{_CID}%} + {chr.%{_CID}%})
					set {bstcap.%{_CID}%} to ({strcap.%{_CID}%} + {defcap.%{_CID}%} + {LCKcap.%{_CID}%} + {spdcap.%{_CID}%} + {magcap.%{_CID}%} + {hpcap.%{_CID}%} + {chrcap.%{_CID}%})
					if {quotesToggle.%{_CID}%} is true:
						if {bstcap.%{_CID}%} - {bst.%{_CID}%} is less than 10:
							make {_CID} say {playerQuotes.%player%::MaxLevel}
						else if {bst.%{_CID}%} - {_oldbst} is less than 2:
							make {_CID} say {playerQuotes.%player%::BadLevelUp}
						else if {bst.%{_CID}%} - {_oldbst} is less than 5:
							make {_CID} say {playerQuotes.%player%::AverageLevelUp}
						else:
							make {_CID} say {playerQuotes.%player%::GoodLevelUp}
					#Renewal at LVL 21
					if {lvl.%{_CID}%} is more than 20:
						if {perks.%{_CID}%::Renewal} is not set:
							make {_CID} execute command "/grantskill 0 Renewal"
					#Restock at LVL 22
					if {lvl.%{_CID}%} is more than 21:
						if {perks.%{_CID}%::Restock} is not set:
							make {_CID} execute command "/grantskill 0 Restock"
					#HP +5 at LVL 1
					if {lvl.%{_CID}%} is more than 0:
						if {perks.%{_CID}%::HP +5} is not set:
							make {_CID} execute command "/grantskill 0 HP +5"
					#STR +3 at LVL 3
					if {lvl.%{_CID}%} is more than 1:
						if {perks.%{_CID}%::STR +3} is not set:
							make {_CID} execute command "/grantskill 0 STR +3"
					#DEF +3 at LVL 5
					if {lvl.%{_CID}%} is more than 2:
						if {perks.%{_CID}%::DEF +3} is not set:
							make {_CID} execute command "/grantskill 0 DEF +3"
					#LCK +3 at LVL 7
					if {lvl.%{_CID}%} is more than 4:
						if {perks.%{_CID}%::LCK +3} is not set:
							make {_CID} execute command "/grantskill 0 LCK +3"
					#SPD +3 at LVL 9
					if {lvl.%{_CID}%} is more than 5:
						if {perks.%{_CID}%::SPD +3} is not set:
							make {_CID} execute command "/grantskill 0 SPD +3"
					#MAG +3 at LVL 11
					if {lvl.%{_CID}%} is more than 6:
						if {perks.%{_CID}%::MAG +3} is not set:
							make {_CID} execute command "/grantskill 0 MAG +3"
					#RES +3 at LVL 11
					if {lvl.%{_CID}%} is more than 3:
						if {perks.%{_CID}%::RES +3} is not set:
							make {_CID} execute command "/grantskill 0 RES +3"
					#CHR +7 at LVL 11
					if {lvl.%{_CID}%} is more than 6:
						if {perks.%{_CID}%::CHR +7} is not set:
							make {_CID} execute command "/grantskill 0 CHR +7"
					#High Jumper at LVL 13
					if {lvl.%{_CID}%} is more than 2:
						if {perks.%{_CID}%::High Jumper} is not set:
							make {_CID} execute command "/grantskill 0 High Jumper"
					#Acrobatics at LVL 14
					if {lvl.%{_CID}%} is more than 7:
						if {perks.%{_CID}%::Acrobatics} is not set:
							make {_CID} execute command "/grantskill 0 Acrobatics"
					#Brazen MAG at LVL 10
					if {lvl.%{_CID}%} is more than 9:
						if {perks.%{_CID}%::Brazen MAG} is not set:
							make {_CID} execute command "/grantskill 0 Brazen MAG"
					#Brazen RES at LVL 11
					if {lvl.%{_CID}%} is more than 9:
						if {perks.%{_CID}%::Brazen RES} is not set:
							make {_CID} execute command "/grantskill 0 Brazen RES"
					#Rally Strength at LVL 18
					if {lvl.%{_CID}%} is more than 17:
						if {perks.%{_CID}%::Rally Strength} is not set:
							make {_CID} execute command "/grantskill 0 Rally Strength"
					#Brazen LCK at LVL 20
					if {lvl.%{_CID}%} is more than 19:
						if {perks.%{_CID}%::Brazen LCK} is not set:
							make {_CID} execute command "/grantskill 0 Brazen LCK"
					#Rally Speed at LVL 23
					if {lvl.%{_CID}%} is more than 22:
						if {perks.%{_CID}%::Rally Speed} is not set:
							make {_CID} execute command "/grantskill 0 Rally Speed"
					#Brazen DEF at LVL 25
					if {lvl.%{_CID}%} is more than 13:
						if {perks.%{_CID}%::Brazen DEF} is not set:
							make {_CID} execute command "/grantskill 0 Brazen DEF"
					#Rally Resistance at LVL 28
					if {lvl.%{_CID}%} is more than 27:
						if {perks.%{_CID}%::Rally Resistance} is not set:
							make {_CID} execute command "/grantskill 0 Rally Resistance"
					#Brazen SPD at LVL 16
					if {lvl.%{_CID}%} is more than 15:
						if {perks.%{_CID}%::Brazen SPD} is not set:
							make {_CID} execute command "/grantskill 0 Brazen SPD"
					#Brazen STR at LVL 18
					if {lvl.%{_CID}%} is more than 17:
						if {perks.%{_CID}%::Brazen STR} is not set:
							make {_CID} execute command "/grantskill 0 Brazen STR"
					#Fierce Posture at LVL 20
					if {lvl.%{_CID}%} is more than 19:
						if {perks.%{_CID}%::Fierce Posture} is not set:
							make {_CID} execute command "/grantskill 0 Fierce Posture"
					#Steady Posture at LVL 20
					if {lvl.%{_CID}%} is more than 19:
						if {perks.%{_CID}%::Steady Posture} is not set:
							make {_CID} execute command "/grantskill 0 Steady Posture"
					#Vantage at LVL 45
					if {lvl.%{_CID}%} is more than 44:
						if {perks.%{_CID}%::Vantage} is not set:
							make {_CID} execute command "/grantskill 0 Vantage"
					#Ranged Specialist at LVL 25:
					if {lvl.%{_CID}%} is more than 24:
						if {perks.%{_CID}%::Ranged Specialist} is not set:
							make {_CID} execute command "/grantskill 0 Ranged Specialist"
					#Lance Specialist at LVL 28:
					if {lvl.%{_CID}%} is more than 27:
						if {perks.%{_CID}%::Lance Specialist} is not set:
							make {_CID} execute command "/grantskill 0 Lance Specialist"
					#Axe Specialist at LVL 31:
					if {lvl.%{_CID}%} is more than 30:
						if {perks.%{_CID}%::Axe Specialist} is not set:
							make {_CID} execute command "/grantskill 0 Axe Specialist"
					#Sword Specialist at LVL 34:
					if {lvl.%{_CID}%} is more than 33:
						if {perks.%{_CID}%::Sword Specialist} is not set:
							make {_CID} execute command "/grantskill 0 Sword Specialist"
					#Mystic Boost at LVL 37
					if {lvl.%{_CID}%} is more than 36:
						if {perks.%{_CID}%::Mystic Boost} is not set:
							make {_CID} execute command "/grantskill 0 Mystic Boost"
					#Nihl at LVL 45
					if {lvl.%{_CID}%} is more than 44:
						if {perks.%{_CID}%::Nihl} is not set:
							make {_CID} execute command "/grantskill 0 Nihl"
					#Sacred Boost at LVL 40
					if {lvl.%{_CID}%} is more than 39:
						if {perks.%{_CID}%::Sacred Boost} is not set:
							make {_CID} execute command "/grantskill 0 Sacred Boost"
					#Spells
					#Fire spell at LVL 12
					set {_isMagical} to checkClass({_CID})
					if {_isMagical} is true:
						if {lvl.%{_CID}%} is more than 11:
							if {spells.%{_CID}%::Fire} is not set:
								make {_CID} execute command "/grantspell 0 Fire"
						if {lvl.%{_CID}%} is more than 14:
							if {spells.%{_CID}%::Hail} is not set:
								make {_CID} execute command "/grantspell 0 Hail"
						if {lvl.%{_CID}%} is more than 17:
							if {spells.%{_CID}%::Thunder} is not set:
								make {_CID} execute command "/grantspell 0 Thunder"
						if {lvl.%{_CID}%} is more than 20:
							if {spells.%{_CID}%::Wind} is not set:
								make {_CID} execute command "/grantspell 0 Wind"
						if {lvl.%{_CID}%} is more than 23:
							if {spells.%{_CID}%::Elfire} is not set:
								make {_CID} execute command "/grantspell 0 Elfire"
						if {lvl.%{_CID}%} is more than 26:
							if {spells.%{_CID}%::Blizzard} is not set:
								make {_CID} execute command "/grantspell 0 Blizzard"
						if {lvl.%{_CID}%} is more than 29:
							if {spells.%{_CID}%::Thoron} is not set:
								make {_CID} execute command "/grantspell 0 Thoron"
						if {lvl.%{_CID}%} is more than 32:
							if {spells.%{_CID}%::Tornado} is not set:
								make {_CID} execute command "/grantspell 0 Tornado"
						if {lvl.%{_CID}%} is more than 35:
							if {spells.%{_CID}%::Bolganone} is not set:
								make {_CID} execute command "/grantspell 0 Bolganone"
						if {lvl.%{_CID}%} is more than 38:
							if {spells.%{_CID}%::Aurora} is not set:
								make {_CID} execute command "/grantspell 0 Aurora"
						if {lvl.%{_CID}%} is more than 41:
							if {spells.%{_CID}%::Light} is not set:
								make {_CID} execute command "/grantspell 0 Light"
						if {lvl.%{_CID}%} is more than 59:
							if {spells.%{_CID}%::Spellblade} is not set:
								make {_CID} execute command "/grantspell 0 Spellblade"
					clear {isLevelling.%{_CID}%}

on death:
	if attacker is player:
		add 1 to {kills.%attacker%}

every hour:
	loop all players:
		add 1 to {hoursplayed.%loop-player%}
		
#On server join behavior
on join:
	make server execute command "/minecraft:recipe give %player% *"
	if {class.%player%} is not set:
		set the player's level to 1
		set {lvl.%player%} to 1
		set {ctoggle.%player%} to 1
		set {generation.%player%} to 1
		set {class.%player%} to "Freelancer"
		make player execute command "/name"
	create bossbar titled "<light green>Class Level Progress" and id "classxpbar.%player's uuid%" for player with progress 0 with colors green
	display bossbar "classxpbar.%player's uuid%"
	set {_playerLVL} to getPromotionCompensatedClassLevel({_PLR})
	set bossbar "classxpbar.%player's UUID%" progress to ({classXP.%player%} / (ceil((({_playerLVL} + (({_playerLVL} - 1) ^ 2)) / 2) + 1))) * 100
	#Combo Bar
	create bossbar titled "<gold>Combo Meter" and id "combobar.%player's uuid%" for player with progress 0 with colors yellow
	display bossbar "combobar.%player's uuid%"
	#Display perk gauges
	set {_LCKcheck} to canUseDevilTrigger(player)
	if {_LCKcheck} is 1:
		create bossbar titled "<light red>Devil Trigger" and id "dt.%player's uuid%" for player with progress 0 with colors red
		display bossbar "dt.%player's uuid%"
		set bossbar "dt.%player's uuid%" progress to {dtMeter.%player%} / {dtMeterCap.%player%} * 100
	else:
		hide bossbar "dt.%player's uuid%"
		destroy bossbar "dt.%player's uuid%"
	#Dragon Soul Gauges
	#Gale Soul
	set {_LCKcheck} to checkSlots(player,"Gale Soul")
	if {_LCKcheck} is 1:
		create bossbar titled "<light green>Gale Soul" and id "dsoul.%player's uuid%" for player with progress 0 with colors green
		display bossbar "dsoul.%player's uuid%"
		set bossbar "dsoul.%player's uuid%" progress to {dSoulMeter.%player%} / {dSoulMeterCap.%player%} * 100
	else:
		#Flame Soul
		set {_LCKcheck} to checkSlots(player,"Flame Soul")
		if {_LCKcheck} is 1:
			create bossbar titled "<orange>Flame Soul" and id "dsoul.%player's uuid%" for player with progress 0 with colors red
			display bossbar "dsoul.%player's uuid%"
			set bossbar "dsoul.%player's uuid%" progress to {dSoulMeter.%player%} / {dSoulMeterCap.%player%} * 100
		else:
			#Aqua Soul
			set {_LCKcheck} to checkSlots(player,"Aqua Soul")
			if {_LCKcheck} is 1:
				create bossbar titled "<light blue>Aqua Soul" and id "dsoul.%player's uuid%" for player with progress 0 with colors blue
				display bossbar "dsoul.%player's uuid%"
				set bossbar "dsoul.%player's uuid%" progress to {dSoulMeter.%player%} / {dSoulMeterCap.%player%} * 100
			else:
				hide bossbar "dsoul.%player's uuid%"
				destroy bossbar "dsoul.%player's uuid%"
	strike lightning effect at the player
	#Auto-execute a Reset Buffs routine in case character stats somehow get corrupted over a server restart
	make player execute command "/sdebug resetbuffs"
	wait 1 tick
	play 40 (wool break with speed 1) at the player
	play 40 (lapis break with speed 1) at the player

#debug
command /cleartraits <player>:
	executable by: console
	trigger:
		clear {traits.%arg 1%::*}
		clear {traitsSelected.%arg 1%}
		
every 2 seconds:
	loop all players:
		if {traits.%loop-player%::Perceptive} is true:
			if time in loop-player's world is not between 18:00 and 6:00:
				apply night vision 1 to loop-player for 3 seconds
			else if sunlight level at loop-player is less than or equal to 7:
				apply night vision 1 to loop-player for 3 seconds
				
command /class_setup_perkmenu [<text="2">]:
	trigger:
		if arg 1 is "2":
			set {_slotNumber} to 0
			open chest inventory with 5 rows named "<bold>Preview Class Perks" for the player
			#physical/magical divider
			set slot 4 of the player's current inventory to 1 blaze rod named "<white>Physical/Magical" with lore "<white>Classes to the left of this divider use physical damage,", "<white>while classes to the right use magical damage.", "<while>While it is possible to use either damage type on any class,", "<white>it is ideal to use the damage type that a class is best at."
			#set slot 13 of the player's current inventory to 1 blaze rod
			set slot 22 of the player's current inventory to 1 blaze rod
			#set slot 31 of the player's current inventory to 1 blaze rod
			#set slot 40 of the player's current inventory to 1 blaze rod
			#Classes
			set slot 13 of the player's current inventory to 1 iron sword named "<white>Basic Classes" with lore "<white>Simple and easy to pick up and play.", "<white>These classes have straightforward statlines and easy-to-activate perk conditions.", "<white>Great for learning the ins and outs of effective character building."
			#Basic Classes
			#physical
			set slot 9 of the player's current inventory to 1 nether star named "<gold>Mercenary" with lore "<white>Strong warriors with a balanced stat spread.", "<cyan>Strengths: None", "<light red>Weaknesses: None", "<cyan>This class naturally learns spells."
			set slot 10 of the player's current inventory to 1 nether star named "<gold>Knight" with lore "<white>Slow but sturdy fighters with extreme physical defense.", "<cyan>Strengths: HP, DEF", "<light red>Weaknesses: SPD, RES, MAG"
			set slot 11 of the player's current inventory to 1 nether star named "<gold>Fighter" with lore "<white>Focused on physical damage and defense, they have devastating blows.", "<cyan>Strengths: HP, STR", "<light red>Weaknesses: LCK, SPD"
			set slot 12 of the player's current inventory to 1 nether star named "<gold>Archer" with lore "<white>Average fighters with a focus on ranged, single-target elimination.", "<cyan>Strengths: STR, DEF", "<light red>Weaknesses: HP, LCK"
			set slot 18 of the player's current inventory to 1 nether star named "<gold>Cavalier" with lore "<white>A well-balanced class that specializes in mounted combat.", "<cyan>Strengths: LCK", "<light red>Weaknesses: HP"
			set slot 19 of the player's current inventory to 1 nether star named "<gold>Trickster" with lore "<white>Slippery thieves that can pick locks and sabotage foes.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, STR"
			#magical
			set slot 14 of the player's current inventory to 1 nether star named "<gold>Mage" with lore "<white>Magic wielders utilizing various wands and tomes for combat.", "<cyan>Strengths: MAG, SPD", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
			set slot 15 of the player's current inventory to 1 nether star named "<gold>Conjurer" with lore "<white>Dark mages who use their own health for stronger attacks.", "<cyan>Strengths: MAG, RES, HP", "<light red>Weaknesses: SPD, CHR, LCK", "<cyan>This class naturally learns spells."
			set slot 16 of the player's current inventory to 1 nether star named "<gold>Keeper" with lore "<white>Armored mage with strong defences but poor physical strength.", "<cyan>Strengths: DEF, RES, MAG", "<light red>Weaknesses: SPD, STR, CHR", "<cyan>This class naturally learns spells."
			#Advanced Classes
			set slot 31 of the player's current inventory to 1 diamond sword named "<white>Advanced Classes" with lore "<white>More specialized classes with harder to use perks and stat lines.", "<white>While they are more difficult to build effectively,", "<white>Advanced Classes can utilize more unique abilities."
			#phys
			set slot 27 of the player's current inventory to 1 nether star named "<gold>Bladesman" with lore "<white>Quick-footed warriors that prioritize speed above all else.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: DEF, RES, HP"
			set slot 28 of the player's current inventory to 1 nether star named "<gold>Gunslinger" with lore "<white>Foreigners who make the best use of firearms for combat.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, DEF"
			set slot 29 of the player's current inventory to 1 nether star named "<gold>Outlaw" with lore "<white>Lone wolves that sow chaos throughout the land.", "<cyan>Strengths: STR, SPD, LCK", "<light red>Weaknesses: HP, DEF, RES"
			#magic
			set slot 32 of the player's current inventory to 1 nether star named "<gold>Cleric" with lore "<white>Ill-suited for combat, but are the best at party-wide healing.", "<cyan>Strengths: HP, RES", "<light red>Weaknesses: DEF, SPD", "<cyan>This class naturally learns spells."
			set slot 33 of the player's current inventory to 1 nether star named "<gold>Strategist" with lore "<white>Clever magicians that support allies in whatever role is needed.", "<cyan>Strengths: MAG, DEF", "<light red>Weaknesses: SPD", "<cyan>This class naturally learns spells."
			set slot 34 of the player's current inventory to 1 nether star named "<gold>Troubador" with lore "<white>Mounted healers with multi-weapon utility.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: HP, DEF, RES", "<cyan>This class naturally learns spells."
			set slot 35 of the player's current inventory to 1 nether star named "<gold>Poet" with lore "<white>Speedy performers that grant bonuses to allies.", "<cyan>Strengths: SPD, LCK, MAG, CHR", "<light red>Weaknesses: STR, HP, DEF", "<cyan>This class naturally learns spells."
			#Specialist Classes
			set slot 40 of the player's current inventory to 1 golden sword named "<white>Specialist Classes" with lore "<white>These classes radically change the way you play.", "<white>They each have unique abilities that no other class can replicate,", "<white>but they can be extremely tricky to play effectively."
			#phys
			set slot 36 of the player's current inventory to 1 nether star named "<gold>Devil Hunter" with lore "<white>Utilizes a unique Stylish system to combo foes.", "<cyan>Strengths: SPD, LCK", "<light red>Weaknesses: DEF, RES, HP"
			set slot 37 of the player's current inventory to 1 nether star named "<gold>Survivor" with lore "<white>Sacrifices combat ability in favor of traditional Minecraft gameplay.", "<cyan>Strengths: HP, MAG", "<light red>Weaknesses: STR, SPD, DEF, LCK, RES", "<cyan>This class naturally learns spells."
			#magic
			set slot 41 of the player's current inventory to 1 nether star named "<gold>Summoner" with lore "<white>Fragile magicians that create familiars to aid in combat.", "<cyan>Strengths: MAG, HP", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
			set slot 42 of the player's current inventory to 1 nether star named "<gold>Charlatan" with lore "<white>Crazed alchemist who sacrifices their health for more power.", "<cyan>Strengths: RES, MAG", "<light red>Weaknesses: STR, DEF", "<cyan>This class naturally learns spells."
			set slot 0 of player's current inventory to 1 book named "<bold>Return to Character Creation"
		#Mercenary Perks Preview
		else if arg 1 is "Mercenary":
			open chest inventory with 6 rows named "<gold>Mercenary Perks Preview" for the player
			if {activePerkTree.%player%::Mercenary} is not set:
				set {activePerkTree.%player%::Mercenary} to "Fortitude"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			#Fortitude Active Display
			if {activePerkTree.%player%::Mercenary} is "Fortitude":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Fortitude" with lore "<white>Focuses on strong openings.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Fortitude}%"
				set slot 11 of the player's current inventory to 1 stone named "<gray>Camraderie" with lore "<white>Focuses on helping allies.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Camraderie}%"
				set slot 15 of the player's current inventory to 1 stone named "<gray>Courage" with lore "<white>Focuses on unyielding strength.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Courage}%"
			#Camraderie Active Display
			else if {activePerkTree.%player%::Mercenary} is "Camraderie":
				set slot 4 of the player's current inventory to 1 stone named "<gray>Fortitude" with lore "<white>Focuses on strong openings.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Fortitude}%"
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Camraderie" with lore "<white>Focuses on helping allies.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Camraderie}%"
				set slot 15 of the player's current inventory to 1 stone named "<gray>Courage" with lore "<white>Focuses on unyielding strength.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Courage}%"
			#Courage Active Display
			else if {activePerkTree.%player%::Mercenary} is "Courage":
				set slot 4 of the player's current inventory to 1 stone named "<gray>Fortitude" with lore "<white>Focuses on strong openings.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Fortitude}%"
				set slot 11 of the player's current inventory to 1 stone named "<gray>Camraderie" with lore "<white>Focuses on helping allies.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Camraderie}%"
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Courage" with lore "<white>Focuses on unyielding strength.", "<white>Tree XP Earned: %{perkTreeXP.mercenary.%player%::Courage}%"		
			#First perk XP walls
			#Camraderie
			if {perkTreeXP.mercenary.%player%::Camraderie} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Camraderie: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Odd Recovery" with lore "<white>Every 3 seconds, restores 1.5 hearts to player and allies within 30 blocks,", "<white>and neutralizes negative potion effects."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Camraderie: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Camraderie XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Camraderie} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Odd Recovery" with lore "<white>Every 3 seconds, restores 1.5 hearts to player and allies within 30 blocks.", "<white>and neutralizes negative potion effects."
			#Fortitude
			if {perkTreeXP.mercenary.%player%::Fortitude} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Fortitude: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Heavy Blade" with lore "<white>If player initiates combat, and has STR >= foe's STR:", "<white>Grants LCK +X, where X = (player's STR - foe's STR),", "<white>and boosts damage dealt by (X / 2).", "<white>Maximum value of X: 20"
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Fortitude: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Fortitude XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Fortitude} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Heavy Blade" with lore "<white>If player initiates combat, and has STR >= foe's STR:", "<white>Grants LCK +X, where X = (player's STR - foe's STR),", "<white>and boosts damage dealt by (X / 2).", "<white>Maximum value of X: 20"
			#Courage
			if {perkTreeXP.mercenary.%player%::Courage} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Courage: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Brazen STR/DEF" with lore "<white>During combat, if player's HP <= 70%%:", "<white>Grants STR/DEF +7 during combat."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Courage: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Courage XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Courage} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Brazen STR/DEF" with lore "<white>During combat, if player's HP <= 70%%:", "<white>Grants STR/DEF +7 during combat."
			#Second perk XP walls
			#Camraderie
			if {perkTreeXP.mercenary.%player%::Camraderie} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Camraderie: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Helping Hand" with lore "<white>Reviving an ally who has been downed,", "<white>or cheering an ally on from low Morale,", "<white>heals both the player and target by 50%% and grants Regeneration/Resistance 3 for 10 seconds."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Camraderie: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Camraderie XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Camraderie} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Helping Hand" with lore "<white>Reviving an ally who has been downed,", "<white>or cheering an ally on from low Morale,", "<white>heals both the player and target by 50%% and grants Regeneration/Resistance 3 for 10 seconds."
			#Fortitude
			if {perkTreeXP.mercenary.%player%::Fortitude} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Fortitude: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Scendscale" with lore "<white>If player initiates combat, and has HP = 100%%:", "<white>Player makes a guaranteed follow-up attack,", "<white>and boosts damage dealt by 20%% of their STR,", "<white>but suffers 2.5 hearts of recoil damage after combat."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Fortitude: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Fortitude XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Fortitude} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Scendscale" with lore "<white>If player initiates combat, and has HP = 100%%:", "<white>Player makes a guaranteed follow-up attack,", "<white>and boosts damage dealt by 20%% of their STR,", "<white>but suffers 2.5 hearts of recoil damage after combat."
			#Courage
			if {perkTreeXP.mercenary.%player%::Courage} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Courage: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Shrug It Off" with lore "<white>During combat, if player's HP <= 80%%:", "<white>Reduces damage suffered during combat by 30%%."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Courage: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Courage XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Courage} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Shrug It Off" with lore "<white>During combat, if player's HP <= 80%%:", "<white>Reduces damage suffered during combat by 30%%."
			if {perkTreeXP.mercenary.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Lord's Blood" with lore "<white>Grants HP +10, STR/LCK +5 while equipped.", "<white>Boosts Traditional Weapons by +100 while equipped."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Mercenary Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Mercenary Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Lord's Blood" with lore "<white>Grants HP +10, STR/LCK +5 while equipped.", "<white>Boosts Traditional Weapons by +100 while equipped."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Mercenary Mastery" with lore "<white>You need more XP in the Mercenary class to equip the Mastery perk.", "<white>Mercenary XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Mercenary Mastery" with lore "<white>You need more XP in the Mercenary class to equip the Mastery perk.", "<white>Mercenary XP needed: %getAbsoluteValue({perkTreeXP.mercenary.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Knight Perks Preview
		else if arg 1 is "Knight":
			open chest inventory with 6 rows named "<gold>Knight Perks Preview" for the player
			if {activePerkTree.%player%::Knight} is not set:
				set {activePerkTree.%player%::Knight} to "Perserverance"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Reliability" with lore "<white>Focuses on consistent performance.", "<white>Tree XP Earned: %{perkTreeXP.Knight.%player%::Reliability}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Perserverance" with lore "<white>Focuses on high durability.", "<white>Tree XP Earned: %{perkTreeXP.Knight.%player%::Perserverance}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Pessimism" with lore "<white>Focuses on self-sufficiency.", "<white>Tree XP Earned: %{perkTreeXP.Knight.%player%::Pessimism}%"
			#Reliability Active Display
			if {activePerkTree.%player%::Knight} is "Reliability":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Reliability" with lore "<white>Focuses on consistent performance.", "<white>Tree XP Earned: %{perkTreeXP.Knight.%player%::Reliability}%"
			#Perserverance Active Display
			else if {activePerkTree.%player%::Knight} is "Perserverance":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Perserverance" with lore "<white>Focuses on high durability.", "<white>Tree XP Earned: %{perkTreeXP.Knight.%player%::Perserverance}%"
			#Pessimism Active Display
			else if {activePerkTree.%player%::Knight} is "Pessimism":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Pessimism" with lore "<white>Focuses on self-sufficiency.", "<white>Tree XP Earned: %{perkTreeXP.Knight.%player%::Pessimism}%"		
			#First perk XP walls
			#Perserverance
			if {perkTreeXP.Knight.%player%::Perserverance} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Perserverance: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Bracing Stance" with lore "<white>If foe initiates combat, grants DEF/RES +4 during combat."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Perserverance: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Perserverance XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Perserverance} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Bracing Stance" with lore "<white>If foe initiates combat, grants DEF/RES +4 during combat."
			#Reliability
			if {perkTreeXP.Knight.%player%::Reliability} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Reliability: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Hardy Bearing" with lore "<white>During combat, if player's HP >= 50%%:", "<white>Inflicts LCK -15 on foe during combat,", "<white>and disables foe's skills that guarantee a follow-up attack during combat."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Reliability: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Reliability XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Reliability} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Hardy Bearing" with lore "<white>During combat, if player's HP >= 50%%:", "<white>Inflicts LCK -15 on foe during combat,", "<white>and disables foe's skills that guarantee a follow-up attack during combat."
			#Pessimism
			if {perkTreeXP.Knight.%player%::Pessimism} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Pessimism: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>STR/SPD Solo" with lore "<white>During combat, if player is at least 20 blocks away from all allies:", "<white>Grants STR/SPD +7 during combat."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Pessimism: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Pessimism XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Pessimism} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>STR/SPD Solo" with lore "<white>During combat, if player is at least 20 blocks away from all allies:", "<white>Grants STR/SPD +7 during combat."
			#Second perk XP walls
			#Perserverance
			if {perkTreeXP.Knight.%player%::Perserverance} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Perserverance: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Boundless Stamina" with lore "<white>After combat, restores 3 hearts and 1 point of hunger."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Perserverance: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Perserverance XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Perserverance} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Boundless Stamina" with lore "<white>After combat, restores 3 hearts and 1 point of hunger."
			#Reliability
			if {perkTreeXP.Knight.%player%::Reliability} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Reliability: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>By a Thread" with lore "<white>During combat, if player's HP <= 50%%:", "<white>Grants STR +7 and boosts damage dealt by 30%% of health missing."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Reliability: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Reliability XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Reliability} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>By a Thread" with lore "<white>During combat, if player's HP <= 50%%:", "<white>Grants STR +7 and boosts damage dealt by 30%% of health missing."
			#Pessimism
			if {perkTreeXP.Knight.%player%::Pessimism} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Pessimism: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Indomitable Will" with lore "<white>If foe's HP >= 80%%:", "<white>Nullifies damage resistance provided by foe's armour."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Pessimism: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Pessimism XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Pessimism} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Indomitable Will" with lore "<white>If foe's HP >= 80%%:", "<white>Nullifies damage resistance provided by foe's armour."
			if {perkTreeXP.Knight.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Steady Breath" with lore "<white>If foe initiates combat:", "<white>Grants DEF/RES +2 and accelerates Special activation (+10%% activation chance) through player's next action."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Knight Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Knight Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Steady Breath" with lore "<white>If foe initiates combat:", "<white>Grants DEF/RES +2 and accelerates Special activation (+10%% activation chance) through player's next action."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Knight Mastery" with lore "<white>You need more XP in the Knight class to equip the Mastery perk.", "<white>Knight XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Knight Mastery" with lore "<white>You need more XP in the Knight class to equip the Mastery perk.", "<white>Knight XP needed: %getAbsoluteValue({perkTreeXP.Knight.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Bladesman Perks Preview
		else if arg 1 is "Bladesman":
			open chest inventory with 6 rows named "<gold>Bladesman Perks Preview" for the player
			if {activePerkTree.%player%::Bladesman} is not set:
				set {activePerkTree.%player%::Bladesman} to "Intuition"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Intuition" with lore "<white>Focuses on extreme speed.", "<white>Tree XP Earned: %{perkTreeXP.Bladesman.%player%::Intuition}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Zeal" with lore "<white>Focuses on Critical Dodges.", "<white>Tree XP Earned: %{perkTreeXP.Bladesman.%player%::Zeal}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Daring" with lore "<white>Focuses on powerful opening attacks.", "<white>Tree XP Earned: %{perkTreeXP.Bladesman.%player%::Daring}%"
			#Intuition Active Display
			if {activePerkTree.%player%::Bladesman} is "Intuition":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Intuition" with lore "<white>Focuses on extreme speed.", "<white>Tree XP Earned: %{perkTreeXP.Bladesman.%player%::Intuition}%"
			#Zeal Active Display
			else if {activePerkTree.%player%::Bladesman} is "Zeal":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Zeal" with lore "<white>Focuses on Critical Dodges.", "<white>Tree XP Earned: %{perkTreeXP.Bladesman.%player%::Zeal}%"
			#Daring Active Display
			else if {activePerkTree.%player%::Bladesman} is "Daring":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Daring" with lore "<white>Focuses on powerful opening attacks.", "<white>Tree XP Earned: %{perkTreeXP.Bladesman.%player%::Daring}%"		
			#First perk XP walls
			#Zeal
			if {perkTreeXP.Bladesman.%player%::Zeal} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Zeal: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Avoidance +20" with lore "<white>During combat, if foe can Critically Miss, raises Critical Dodge chance by 20%%."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Zeal: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Zeal XP needed: %getAbsoluteValue({perkTreeXP.Bladesman.%player%::Zeal} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Avoidance +20" with lore "<white>During combat, if foe can Critically Miss, raises Critical Dodge chance by 20%%."
			#Intuition
			if {perkTreeXP.Bladesman.%player%::Intuition} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Intuition: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Life or Death" with lore "<white>While equipped, grants STR/SPD/LCK +7, but inflicts DEF/RES -5."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Intuition: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Intuition XP needed: %getAbsoluteValue({perksFirstHonorXPRequirement} - {perkTreeXP.Bladesman.%player%::Intuition})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Life or Death" with lore "<white>While equipped, grants STR/SPD/LCK +7, but inflicts DEF/RES -5."
			#Daring
			if {perkTreeXP.Bladesman.%player%::Daring} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Daring: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Daring Fighter" with lore "<white>During combat, if player's HP >= 80%%:", "<white>Grants SPD/LCK +5 during combat,", "<white>and accelerates Special skill activation (+5%% activation chance)."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Daring: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Daring XP needed: %getAbsoluteValue({perksFirstHonorXPRequirement} - {perkTreeXP.Bladesman.%player%::Daring})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Daring Fighter" with lore "<white>During combat, if player's HP >= 80%%:", "<white>Grants SPD/LCK +5 during combat,", "<white>and accelerates Special skill activation (+5%% activation chance)."
			#Second perk XP walls
			#Zeal
			if {perkTreeXP.Bladesman.%player%::Zeal} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Zeal: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Desperate Dodge" with lore "<white>If HP <= 50%% and foe can Critically Miss,", "<white>Raises Critical Dodge chance by 30%%."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Zeal: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Zeal XP needed: %getAbsoluteValue({perkTreeXP.Bladesman.%player%::Zeal} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Desperate Dodge" with lore "<white>If HP <= 50%% and foe can Critically Miss,", "<white>Raises Critical Dodge chance by 30%%."
			#Intuition
			if {perkTreeXP.Bladesman.%player%::Intuition} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Intuition: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Windsweep" with lore "<white>If player's SPD >= foe's SPD + 5:", "<white>Disables foe's skills that grant automatic counter-attacks,", "<white>and inflicts Weakness 4 on foe for 4 seconds after combat."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Intuition: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Intuition XP needed: %getAbsoluteValue({perkTreeXP.Bladesman.%player%::Intuition} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Windsweep" with lore "<white>If player's SPD >= foe's SPD + 5:", "<white>Disables foe's skills that grant guaranteed counter-attacks,", "<white>and inflicts Weakness 4 on foe for 4 seconds after combat."
			#Daring
			if {perkTreeXP.Bladesman.%player%::Daring} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Daring: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>ATK/SPD Push" with lore "<white>During combat, if player's HP >= 80%% and player initiates combat:", "<white>Grants SPD +7 and boosts damage dealt by 3.5 hearts."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Daring: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Daring XP needed: %getAbsoluteValue({perkTreeXP.Bladesman.%player%::Daring} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>ATK/SPD Push" with lore "<white>During combat, if player's HP >= 80%% and player initiates combat:", "<white>Grants SPD +7 and boosts damage dealt by 3.5 hearts."
			if {perkTreeXP.Bladesman.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Close Call" with lore "<white>During combat, if player's SPD > foe's SPD:", "<white>Reduces damage suffered during combat by X%%,", "<white>where X = difference between player and foe's SPD stats * 4.", "<white>(Maximum value of X: 40)"
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Bladesman Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Bladesman Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Close Call" with lore "<white>During combat, if player's SPD > foe's SPD:", "<white>Reduces damage suffered during combat by X%%,", "<white>where X = difference between player and foe's SPD stats * 4.", "<white>(Maximum value of X: 40)"
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Bladesman Mastery" with lore "<white>You need more XP in the Bladesman class to equip the Mastery perk.", "<white>Bladesman XP needed: %getAbsoluteValue({perkTreeXP.Bladesman.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Bladesman Mastery" with lore "<white>You need more XP in the Bladesman class to equip the Mastery perk.", "<white>Bladesman XP needed: %getAbsoluteValue({perkTreeXP.Bladesman.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Fighter Perks Preview
		else if arg 1 is "Fighter":
			open chest inventory with 6 rows named "<gold>Fighter Perks Preview" for the player
			if {activePerkTree.%player%::Fighter} is not set:
				set {activePerkTree.%player%::Fighter} to "Heroism"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Heroism" with lore "<white>Focuses on high, but unreliable damage.", "<white>Tree XP Earned: %{perkTreeXP.Fighter.%player%::Heroism}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Flexibility" with lore "<white>Focuses on versatility.", "<white>Tree XP Earned: %{perkTreeXP.Fighter.%player%::Flexibility}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Confidence" with lore "<white>Focuses on strong average damage.", "<white>Tree XP Earned: %{perkTreeXP.Fighter.%player%::Confidence}%"
			#Heroism Active Display
			if {activePerkTree.%player%::Fighter} is "Heroism":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Heroism" with lore "<white>Focuses on high, but unreliable damage.", "<white>Tree XP Earned: %{perkTreeXP.Fighter.%player%::Heroism}%"
			#Flexibility Active Display
			else if {activePerkTree.%player%::Fighter} is "Flexibility":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Flexibility" with lore "<white>Focuses on versatility.", "<white>Tree XP Earned: %{perkTreeXP.Fighter.%player%::Flexibility}%"
			#Confidence Active Display
			else if {activePerkTree.%player%::Fighter} is "Confidence":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Confidence" with lore "<white>Focuses on strong average damage.", "<white>Tree XP Earned: %{perkTreeXP.Fighter.%player%::Confidence}%"		
			#First perk XP walls
			#Flexibility
			if {perkTreeXP.Fighter.%player%::Flexibility} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Flexibility: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Skim the Books" with lore "<white>Grants a +20 bonus to your Traditional Weapons ability while equipped,", "<white>and if player's weapon is an axe, grants STR/DEF/RES +4 during combat."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Flexibility: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Flexibility XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Flexibility} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Skim the Books" with lore "<white>Grants a +20 bonus to your Traditional Weapons ability while equipped,", "<white>and if player's weapon is an axe, grants STR/DEF/RES +4 during combat."
			#Heroism
			if {perkTreeXP.Fighter.%player%::Heroism} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Heroism: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Gamble" with lore "<white>Grants STR/MAG +12 while equipped,", "<white>but, if player can Critically Miss during combat,", "<white>boosts Critical Miss chance by 30%%."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Heroism: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Heroism XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Heroism} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Gamble" with lore "<white>Grants STR/MAG +12 while equipped,", "<white>but, if player can Critically Miss during combat,", "<white>boosts Critical Miss chance by 30%%."
			#Confidence
			if {perkTreeXP.Fighter.%player%::Confidence} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Confidence: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Flame Boost II" with lore "<white>If player initiates combat, and has HP >= foe's HP +3:", "<white>Grants STR/DEF/RES +6 and accelerates Special skill activation (+10%% activation chance)."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Confidence: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Confidence XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Confidence} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<bold>Flame Boost II" with lore "<white>If player initiates combat, and has HP >= foe's HP +3:", "<white>Grants STR/DEF/RES +6 and accelerates Special skill activation (+10%% activation chance)."
			#Second perk XP walls
			#Flexibility
			if {perkTreeXP.Fighter.%player%::Flexibility} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Flexibility: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>En Vouge" with lore "<white>Right-clicking with any axe throws it at a foe, at the cost of durability."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Flexibility: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Flexibility XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Flexibility} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>En Vouge" with lore "<white>Right-clicking with any axe throws it at a foe, at the cost of durability."
			#Heroism
			if {perkTreeXP.Fighter.%player%::Heroism} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Heroism: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Sky's the Limit" with lore "<white>During combat, if player can Critically Miss,", "<white>Boosts damage dealt by 15%%."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Heroism: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Heroism XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Heroism} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Sky's the Limit" with lore "<white>During combat, if player can Critically Miss,", "<white>Boosts damage dealt by 15%%."
			#Confidence
			if {perkTreeXP.Fighter.%player%::Confidence} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Confidence: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Attack Stability" with lore "<white>During combat, if player can Critically Miss,", "<white>Reduces Critical Miss chance by 25%% and grants STR/MAG +5 per attack for that combat."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Confidence: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Confidence XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Confidence} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Attack Stability" with lore "<white>During combat, if player can Critically Miss,", "<white>Reduces Critical Miss chance by 25%% and boosts damage dealt by 3 hearts."
			if {perkTreeXP.Fighter.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Overwhelm" with lore "<white>If player initiates combat, and has HP >= 50%%,", "<white>Boosts damage dealt by 25%% of player's STR."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Fighter Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Fighter Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Overwhelm" with lore "<white>If player initiates combat, and has HP >= 50%%,", "<white>Boosts damage dealt by 25%% of player's STR."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Fighter Mastery" with lore "<white>You need more XP in the Fighter class to equip the Mastery perk.", "<white>Fighter XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Fighter Mastery" with lore "<white>You need more XP in the Fighter class to equip the Mastery perk.", "<white>Fighter XP needed: %getAbsoluteValue({perkTreeXP.Fighter.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Mage Perks Preview
		else if arg 1 is "Mage":
			open chest inventory with 6 rows named "<gold>Mage Perks Preview" for the player
			if {activePerkTree.%player%::Mage} is not set:
				set {activePerkTree.%player%::Mage} to "Serenity"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Serenity" with lore "<white>Focuses on stronger wand casting.", "<white>Tree XP Earned: %{perkTreeXP.Mage.%player%::Serenity}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Wisdom" with lore "<white>Focuses on rapid-fire spells.", "<white>Tree XP Earned: %{perkTreeXP.Mage.%player%::Wisdom}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Diligence" with lore "<white>Focuses on improved melee damage.", "<white>Tree XP Earned: %{perkTreeXP.Mage.%player%::Diligence}%"
			#Serenity Active Display
			if {activePerkTree.%player%::Mage} is "Serenity":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Serenity" with lore "<white>Focuses on stronger wand casting.", "<white>Tree XP Earned: %{perkTreeXP.Mage.%player%::Serenity}%"
			#Wisdom Active Display
			else if {activePerkTree.%player%::Mage} is "Wisdom":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Wisdom" with lore "<white>Focuses on rapid-fire spells.", "<white>Tree XP Earned: %{perkTreeXP.Mage.%player%::Wisdom}%"
			#Diligence Active Display
			else if {activePerkTree.%player%::Mage} is "Diligence":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Diligence" with lore "<white>Focuses on improved melee damage.", "<white>Tree XP Earned: %{perkTreeXP.Mage.%player%::Diligence}%"		
			#First perk XP walls
			#Wisdom
			if {perkTreeXP.Mage.%player%::Wisdom} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Wisdom: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Ancient Knowledge" with lore "<white>Nullifies cooldown of Magic Wands,", "<white>but deals non-lethal recoil damage equal to 50%% of the nullified cooldown time."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Wisdom: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Wisdom XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Wisdom} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Ancient Knowledge" with lore "<white>Nullifies cooldown of Magic Wands,", "<white>but deals non-lethal recoil damage equal to 50%% of the nullified cooldown time."
			#Serenity
			if {perkTreeXP.Mage.%player%::Serenity} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Serenity: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Focused Magic" with lore "<white>Halves the cooldown of Magic Wands while equipped."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Serenity: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Serenity XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Serenity} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Focused Magic" with lore "<white>Halves the cooldown of Magic Wands while equipped."
			#Diligence
			if {perkTreeXP.Mage.%player%::Diligence} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Diligence: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Hexblade" with lore "<white>Causes melee weapons to deal magical damage instead of physical damage while equipped."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Diligence: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Diligence XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Diligence} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Hexblade" with lore "<white>Causes melee weapons to deal magical damage instead of physical damage while equipped."
			#Second perk XP walls
			#Wisdom
			if {perkTreeXP.Mage.%player%::Wisdom} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Wisdom: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Lifetaker" with lore "<white>If player initiates combat, restores health equal to 10%% of damage dealt during combat."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Wisdom: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Wisdom XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Wisdom} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Lifetaker" with lore "<white>If player initiates combat, restores health equal to 10%% of damage dealt during combat."
			#Serenity
			if {perkTreeXP.Mage.%player%::Serenity} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Serenity: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Steadfast Casting" with lore "<white>Whenever a spell hits a foe, grants MAG +5 after combat.", "<white>This effect can stack up to MAG +25, but is lost when changing weapons."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Serenity: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Serenity XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Serenity} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Steadfast Casting" with lore "<white>Whenever a spell hits a foe, grants MAG +5 after combat.", "<white>This effect can stack up to MAG +25, but is lost when changing weapons."
			#Diligence
			if {perkTreeXP.Mage.%player%::Diligence} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Diligence: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>More Than Magic" with lore "<white>Changing weapons after casting a spell grants +20%% damage for 3 seconds."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Diligence: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Diligence XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Diligence} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>More Than Magic" with lore "<white>Changing weapons after casting a spell grants +20%% damage for 3 seconds."
			if {perkTreeXP.Mage.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Ascended Magic" with lore "<white>While equipped, grants MAG +9, LCK/RES +6.", "<white>Boosts Magical Weapons by +100 while equipped."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Mage Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Mage Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Ascended Magic" with lore "<white>While equipped, grants MAG +9, LCK/RES +6.", "<white>Boosts Magical Weapons by +100 while equipped."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Mage Mastery" with lore "<white>You need more XP in the Mage class to equip the Mastery perk.", "<white>Mage XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Mage Mastery" with lore "<white>You need more XP in the Mage class to equip the Mastery perk.", "<white>Mage XP needed: %getAbsoluteValue({perkTreeXP.Mage.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Cleric Perks Preview
		else if arg 1 is "Cleric":
			open chest inventory with 6 rows named "<gold>Cleric Perks Preview" for the player
			if {activePerkTree.%player%::Cleric} is not set:
				set {activePerkTree.%player%::Cleric} to "Pacifism"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Loyalty" with lore "<white>Focuses on supporting allies in combat.", "<white>Tree XP Earned: %{perkTreeXP.Cleric.%player%::Loyalty}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Pacifism" with lore "<white>Focuses on high defense and healing.", "<white>Tree XP Earned: %{perkTreeXP.Cleric.%player%::Pacifism}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Hypocrisy" with lore "<white>Focuses on improved damage output.", "<white>Tree XP Earned: %{perkTreeXP.Cleric.%player%::Hypocrisy}%"
			#Loyalty Active Display
			if {activePerkTree.%player%::Cleric} is "Loyalty":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Loyalty" with lore "<white>Focuses on supporting allies in combat.", "<white>Tree XP Earned: %{perkTreeXP.Cleric.%player%::Loyalty}%"
			#Pacifism Active Display
			else if {activePerkTree.%player%::Cleric} is "Pacifism":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Pacifism" with lore "<white>Focuses on high defense and healing.", "<white>Tree XP Earned: %{perkTreeXP.Cleric.%player%::Pacifism}%"
			#Hypocrisy Active Display
			else if {activePerkTree.%player%::Cleric} is "Hypocrisy":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Hypocrisy" with lore "<white>Focuses on improved damage output.", "<white>Tree XP Earned: %{perkTreeXP.Cleric.%player%::Hypocrisy}%"		
			#First perk XP walls
			#Pacifism
			if {perkTreeXP.Cleric.%player%::Pacifism} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Pacifism: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Sacred Balm" with lore "<white>Healing an ally with any staff grants DEF/RES +9", "<white>to both the healer and target through their next action,", "<white>and grants Absorption 5 for 20 seconds."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Pacifism: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Pacifism XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Pacifism} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Sacred Balm" with lore "<white>Healing an ally with any staff grants DEF/RES +9", "<white>to both the healer and target through their next action.", "<white>and grants Absorption 5 for 20 seconds."
			#Loyalty
			if {perkTreeXP.Cleric.%player%::Loyalty} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Loyalty: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Breath of Life" with lore "<white>After combat, if player attacked:", "<white>Restores 6 hearts to allies within 30 blocks."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Loyalty: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Loyalty XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Loyalty} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Breath of Life" with lore "<white>After combat, if player attacked:", "<white>Restores 6 hearts to allies within 30 blocks."
			#Hypocrisy
			if {perkTreeXP.Cleric.%player%::Hypocrisy} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Hypocrisy: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Secret Training" with lore "<white>Boosts your Traditional Weapons, Magical Weapons, and Guns abilities by +20 while equipped.", "<white>Also, if player initiates combat with any Staff:", "<white>Boosts damage dealt by 5 hearts and calculates damage using STR or MAG,", "<white>whichever of the player's stats is higher."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Hypocrisy: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Hypocrisy XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Hypocrisy} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Secret Training" with lore "<white>Boosts your Traditional Weapons, Magical Weapons, and Guns abilities by +20 while equipped.", "<white>Also, if player initiates combat with any Staff:", "<white>Boosts damage dealt by 5 hearts and calculates damage using STR or MAG,", "<white>whichever of the player's stats is higher."
			#Second perk XP walls
			#Pacifism
			if {perkTreeXP.Cleric.%player%::Pacifism} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Pacifism: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Live to Serve" with lore "<white>Using a staff on an ally applies the effects to yourself as well.", "<white>You and all allies within 30 blocks recover 1/2 heart every 3 seconds while equipped."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Pacifism: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Pacifism XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Pacifism} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Live to Serve" with lore "<white>Using a staff on an ally applies the effects to yourself as well.", "<white>You and all allies within 30 blocks recover 0.5 HP/s while equipped."
			#Loyalty
			if {perkTreeXP.Cleric.%player%::Loyalty} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Loyalty: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Herbivore" with lore "<white>Boosts the drop rates for Sacred and Golden herbs by 50%%.", "<white>After combat, restores 3 hearts of health."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Loyalty: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Loyalty XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Loyalty} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Herbivore" with lore "<white>Boosts the drop rates for Sacred and Golden herbs by 50%%.", "<white>After combat, restores 3 hearts of health."
			#Hypocrisy
			if {perkTreeXP.Cleric.%player%::Hypocrisy} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Hypocrisy: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Hidden Thorn" with lore "<white>During combat, if player's STR / MAG < foe's STR / MAG:", "<white>Boosts damage dealt during combat by 50%% of the difference", "<white>between stats (maximum bonus of +10 hearts).", "<white>Stat used for comparison is dependent on physical VS magical damage being used."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Hypocrisy: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Hypocrisy XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Hypocrisy} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Hidden Thorn" with lore "<white>During combat, if player's STR / MAG < foe's STR / MAG:", "<white>Boosts damage dealt during combat by 50%% of the difference", "<white>between stats (maximum bonus of +10 hearts).", "<white>Stat used for comparison is dependent on physical VS magical damage being used."
			if {perkTreeXP.Cleric.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Wings of Mercy" with lore "<white>If any ally has HP <= 50%%:", "<white>Sneak and right-click with an empty hand to teleport to that ally.", "<white>If multiple allies have HP <= 50%%, you will teleport to the closest ally."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Cleric Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Cleric Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Wings of Mercy" with lore "<white>If any ally has HP <= 50%%:", "<white>Sneak and right-click with an empty hand to teleport to that ally.", "<white>If multiple allies have HP <= 50%%, you will teleport to the closest ally."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Cleric Mastery" with lore "<white>You need more XP in the Cleric class to equip the Mastery perk.", "<white>Cleric XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Cleric Mastery" with lore "<white>You need more XP in the Cleric class to equip the Mastery perk.", "<white>Cleric XP needed: %getAbsoluteValue({perkTreeXP.Cleric.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Archer Perks Preview
		else if arg 1 is "Archer":
			open chest inventory with 6 rows named "<gold>Archer Perks Preview" for the player
			if {activePerkTree.%player%::Archer} is not set:
				set {activePerkTree.%player%::Archer} to "Prudence"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Recitence" with lore "<white>Focuses on long-ranged mastery.", "<white>Tree XP Earned: %{perkTreeXP.Archer.%player%::Recitence}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Prudence" with lore "<white>Focuses on improved speed.", "<white>Tree XP Earned: %{perkTreeXP.Archer.%player%::Prudence}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Spirit" with lore "<white>Focuses on close-ranged dueling.", "<white>Tree XP Earned: %{perkTreeXP.Archer.%player%::Spirit}%"
			#Recitence Active Display
			if {activePerkTree.%player%::Archer} is "Recitence":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Recitence" with lore "<white>Focuses on long-ranged mastery.", "<white>Tree XP Earned: %{perkTreeXP.Archer.%player%::Recitence}%"
			#Prudence Active Display
			else if {activePerkTree.%player%::Archer} is "Prudence":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Prudence" with lore "<white>Focuses on improved speed.", "<white>Tree XP Earned: %{perkTreeXP.Archer.%player%::Prudence}%"
			#Spirit Active Display
			else if {activePerkTree.%player%::Archer} is "Spirit":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Spirit" with lore "<white>Focuses on close-ranged dueling.", "<white>Tree XP Earned: %{perkTreeXP.Archer.%player%::Spirit}%"		
			#First perk XP walls
			#Prudence
			if {perkTreeXP.Archer.%player%::Prudence} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Prudence: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Quick Draw" with lore "<white>Bows fire at max charge instantly while equipped."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Prudence: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Prudence XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Prudence} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Quick Draw" with lore "<white>Bows fire at max charge instantly while equipped."
			#Recitence
			if {perkTreeXP.Archer.%player%::Recitence} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Recitence: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Marked for Death" with lore "<white>Hitting an enemy with any ranged weapon marks them for death.", "<white>Marked enemies take 30%% more damage from ranged damage."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Recitence: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Recitence XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Recitence} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<bold>Marked for Death" with lore "<white>Hitting an enemy with any ranged weapon marks them for death.", "<white>Marked enemies take 30%% more damage from ranged damage."
			#Spirit
			if {perkTreeXP.Archer.%player%::Spirit} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Spirit: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Archer's Foil" with lore "<white>While wielding a bow, enables automatic counter-attacks against melee opponents."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Spirit: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Spirit XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Spirit} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Archer's Foil" with lore "<white>While wielding a bow, enables automatic counter-attacks against melee opponents."
			#Second perk XP walls
			#Prudence
			if {perkTreeXP.Archer.%player%::Prudence} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Prudence: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Hit and Run" with lore "<white>After hitting an enemy, grants Swiftness 3 for 2 seconds,", "<white>and SPD +5 through your next action."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Prudence: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Prudence XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Prudence} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Hit and Run" with lore "<white>After hitting an enemy, grants Swiftness 3 for 2 seconds,", "<white>and SPD +5 through your next action."
			#Recitence
			if {perkTreeXP.Archer.%player%::Recitence} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Recitence: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Heavy Draw" with lore "<white>Grants bonus damage equal to 25%% of the distance between you and your foe during combat.", "<white>Maximum bonus of +10 hearts of damage."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Recitence: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Recitence XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Recitence} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Heavy Draw" with lore "<white>Grants bonus damage equal to 25%% of the distance between you and your foe during combat.", "<white>Maximum bonus of +10 hearts of damage."
			#Spirit
			if {perkTreeXP.Archer.%player%::Spirit} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Spirit: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Quick Riposte" with lore "<white>If foe initiates combat, the player's HP >= 70%%, and player can automatically counter-attack:", "<white>Player automatically makes a guaranteed follow-up attack."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Spirit: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Spirit XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Spirit} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Quick Riposte" with lore "<white>If foe initiates combat, the player's HP >= 70%%, and player can automatically counter-attack:", "<white>Player automatically makes a guaranteed follow-up attack."
			if {perkTreeXP.Archer.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Lunar Arc" with lore "<white>Boosts damage dealt by 10%% of foe's DEF + RES during combat."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Archer Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Archer Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Lunar Arc" with lore "<white>Boosts damage dealt by 10%% of foe's DEF + RES during combat."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Archer Mastery" with lore "<white>You need more XP in the Archer class to equip the Mastery perk.", "<white>Archer XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Archer Mastery" with lore "<white>You need more XP in the Archer class to equip the Mastery perk.", "<white>Archer XP needed: %getAbsoluteValue({perkTreeXP.Archer.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Cavalier Perks Preview
		else if arg 1 is "Cavalier":
			open chest inventory with 6 rows named "<gold>Cavalier Perks Preview" for the player
			if {activePerkTree.%player%::Cavalier} is not set:
				set {activePerkTree.%player%::Cavalier} to "Adeptness"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Enthusiasm" with lore "<white>Focuses on caring for animals.", "<white>Tree XP Earned: %{perkTreeXP.Cavalier.%player%::Enthusiasm}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Adeptness" with lore "<white>Focuses on mounted combat.", "<white>Tree XP Earned: %{perkTreeXP.Cavalier.%player%::Adeptness}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Steadfastness" with lore "<white>Focuses on improved damage output.", "<white>Tree XP Earned: %{perkTreeXP.Cavalier.%player%::Steadfastness}%"
			#Enthusiasm Active Display
			if {activePerkTree.%player%::Cavalier} is "Enthusiasm":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Enthusiasm" with lore "<white>Focuses on caring for animals.", "<white>Tree XP Earned: %{perkTreeXP.Cavalier.%player%::Enthusiasm}%"
			#Adeptness Active Display
			else if {activePerkTree.%player%::Cavalier} is "Adeptness":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Adeptness" with lore "<white>Focuses on mounted combat.", "<white>Tree XP Earned: %{perkTreeXP.Cavalier.%player%::Adeptness}%"
			#Steadfastness Active Display
			else if {activePerkTree.%player%::Cavalier} is "Steadfastness":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Steadfastness" with lore "<white>Focuses on improved damage output.", "<white>Tree XP Earned: %{perkTreeXP.Cavalier.%player%::Steadfastness}%"		
			#First perk XP walls
			#Adeptness
			if {perkTreeXP.Cavalier.%player%::Adeptness} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Adeptness: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Well-Trained" with lore "<white>While riding a horse, grants +20 to Traditional/Magical Weapons,", "<white>and grants STR/MAG/LCK +4."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Adeptness: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Adeptness XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Adeptness} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Well-Trained" with lore "<white>While riding a horse, grants +20 to Traditional/Magical Weapons,", "<white>and grants STR/MAG/LCK +4."
			#Enthusiasm
			if {perkTreeXP.Cavalier.%player%::Enthusiasm} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Enthusiasm: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Mount" with lore "<white>Allows use of the /mount command while equipped,", "<white>allowing you to summon a horse to your side at any time.", "<white>Horses summed by /mount have Swiftness 3 until death."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Enthusiasm: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Enthusiasm XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Enthusiasm} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Mount" with lore "<white>Allows use of the /mount command while equipped,", "<white>allowing you to summon a horse to your side at any time."
			#Steadfastness
			if {perkTreeXP.Cavalier.%player%::Steadfastness} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Steadfastness: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Power Pitcher" with lore "<white>When attacking at range with any weapon,", "<white>including Hand Axes and thrown Lances, grants ATK +6, and", "<white>reduces Critical Miss chance by 15%%."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Steadfastness: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Steadfastness XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Steadfastness} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Power Pitcher" with lore "<white>When attacking at range with any weapon,", "<white>including Hand Axes and thrown Lances, grants ATK +6, and", "<white>reduces Critical Miss chance by 15%%."
			#Second perk XP walls
			#Adeptness
			if {perkTreeXP.Cavalier.%player%::Adeptness} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Adeptness: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Canto" with lore "<white>After combat, if player is riding a horse:", "<white>Grants Swiftness/Resistance 5 to the mount for 2 seconds,", "<white>and if foe is killed during that combat,", "<white>grants Swiftness/Resistance 8 to the mount for 5 seconds."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Adeptness: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Adeptness XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Adeptness} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Canto" with lore "<white>After combat, if player is riding a horse:", "<white>Grants Swiftness/Resistance 5 to the mount for 2 seconds,", "<white>and if foe is killed during that combat,", "<white>grants Swiftness/Resistance 8 to the mount for 5 seconds."
			#Enthusiasm
			if {perkTreeXP.Cavalier.%player%::Enthusiasm} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Enthusiasm: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Deep Bond" with lore "<white>Animals that you tame (or are summoned via /mount) are granted", "<white>3x HP, and Swiftness/Resistance 5 until their death."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Enthusiasm: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Enthusiasm XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Enthusiasm} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Deep Bond" with lore "<white>Animals that you tame (or are summoned via /mount) are granted", "<white>3x HP, and Swiftness/Resistance 5 until their death."
			#Steadfastness
			if {perkTreeXP.Cavalier.%player%::Steadfastness} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Steadfastness: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Seth's Guidance" with lore "<white>When a stat increases via level-up,", "<white>grants a 50%% chance for that stat to go up again.", "<white>NOTE: Seth's Guidance cannot activate itself."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Steadfastness: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Steadfastness XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Steadfastness} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Seth's Guidance" with lore "<white>When a stat increases via level-up,", "<white>grants a 50%% chance for that stat to go up again.", "<white>NOTE: Seth's Guidance cannot activate itself."
			if {perkTreeXP.Cavalier.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Crusader's Charge" with lore "<white>During combat, if player's HP >= 50%% and is riding a horse:", "<white>Inflicts SPD -5 on foe during combat.", "<white>Reduces SPD advantage needed to double to 1,", "<white>and grants STR/MAG/DEF/RES +6 during combat."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Cavalier Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Cavalier Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Crusader's Charge" with lore "<white>During combat, if player's HP >= 50%% and is riding a horse:", "<white>Inflicts SPD -5 on foe during combat.", "<white>Reduces SPD advantage needed to double to 1,", "<white>and grants STR/MAG/DEF/RES +6 during combat."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Cavalier Mastery" with lore "<white>You need more XP in the Cavalier class to equip the Mastery perk.", "<white>Cavalier XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Cavalier Mastery" with lore "<white>You need more XP in the Cavalier class to equip the Mastery perk.", "<white>Cavalier XP needed: %getAbsoluteValue({perkTreeXP.Cavalier.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Devil Hunter Perks Preview
		else if arg 1 is "Devil Hunter":
			open chest inventory with 6 rows named "<gold>Devil Hunter Perks Preview" for the player
			if {activePerkTree.%player%::Devil Hunter} is not set:
				set {activePerkTree.%player%::Devil Hunter} to "Confidence"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Stoicism" with lore "<white>Focuses on controlling enemy movement.", "<white>Tree XP Earned: %{perkTreeXP.Devil Hunter.%player%::Stoicism}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Confidence" with lore "<white>Focuses on maximizing the Devil Trigger technique.", "<white>Tree XP Earned: %{perkTreeXP.Devil Hunter.%player%::Confidence}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Impulsiveness" with lore "<white>Focuses on keeping enemies close by.", "<white>Tree XP Earned: %{perkTreeXP.Devil Hunter.%player%::Impulsiveness}%"
			#Stoicism Active Display
			if {activePerkTree.%player%::Devil Hunter} is "Stoicism":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Stoicism" with lore "<white>Focuses on controlling enemy movement.", "<white>Tree XP Earned: %{perkTreeXP.Devil Hunter.%player%::Stoicism}%"
			#Confidence Active Display
			else if {activePerkTree.%player%::Devil Hunter} is "Confidence":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Confidence" with lore "<white>No-frills stylish action.", "<white>Tree XP Earned: %{perkTreeXP.Devil Hunter.%player%::Confidence}%"
			#Impulsiveness Active Display
			else if {activePerkTree.%player%::Devil Hunter} is "Impulsiveness":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Impulsiveness" with lore "<white>Focuses on keeping enemies close by.", "<white>Tree XP Earned: %{perkTreeXP.Devil Hunter.%player%::Impulsiveness}%"		
			#First perk XP walls
			#Confidence
			if {perkTreeXP.Devil Hunter.%player%::Confidence} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Confidence: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Electro Heart" with lore "<white>While in Devil Trigger,", "<white>melee attacks have +3 range and nullify foe's armour,", "<white>bows fire at max charge instantly, and guns have infinite ammo.", "<italics>Crap like that doesn't interest me, but your swan song will."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Confidence: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Confidence XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Confidence} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Electro Heart" with lore "<white>While in Devil Trigger,", "<white>melee attacks have +3 range and nullify foe's armour,", "<white>bows fire at max charge instantly, and guns have infinite ammo.", "<italics>Crap like that doesn't interest me, but your swan song will."
			#Stoicism
			if {perkTreeXP.Devil Hunter.%player%::Stoicism} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Stoicism: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Summoned Swords" with lore "<white>While wielding any melee weapon without an Assist skill,", "<white>right-click to fire an ethereal sword that calculates damage using the MAG stat.", "<light red>Disables the Snatch perk while equipped.", "<italics>Our souls are at odds, brother."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Stoicism: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Stoicism XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Stoicism} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Summoned Swords" with lore "<white>While wielding any melee weapon without an Assist skill,", "<white>right-click to fire an ethereal sword that calculates damage using the MAG stat.", "<light red>Disables the Snatch perk while equipped.", "<italics>Our souls are at odds, brother."
			#Impulsiveness
			if {perkTreeXP.Devil Hunter.%player%::Impulsiveness} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Impulsiveness: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Snatch" with lore "<white>While wielding any melee weapon without an Assist skill,", "<white>right-click to grab an enemy from afar and reel them in towards you.", "<light red>Disables the Summoned Swords perk while equipped.", "<italics>You've got a jacked-up notion of fair play, pal."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Impulsiveness: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Impulsiveness XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Impulsiveness} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Snatch" with lore "<white>While wielding any melee weapon without an Assist skill,", "<white>right-click to grab an enemy from afar and reel them in towards you.", "<light red>Disables the Summoned Swords perk while equipped.", "<italics>You've got a jacked-up notion of fair play, pal."
			#Second perk XP walls
			#Confidence
			if {perkTreeXP.Devil Hunter.%player%::Confidence} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Confidence: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Air Raid" with lore "<white>While in Devil Trigger, enables flight.", "<white>Flying drains the Devil Trigger gauge.", "<italics>Looks like we have a winner... Jackpot!!"
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Confidence: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Confidence XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Confidence} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Air Raid" with lore "<white>While in Devil Trigger, enables flight.", "<white>Flying drains the Devil Trigger gauge.", "<italics>Looks like we have a winner... Jackpot!!"
			#Stoicism
			if {perkTreeXP.Devil Hunter.%player%::Stoicism} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Stoicism: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Embedded Swords" with lore "<white>Striking a foe with a Summoned Sword", "<white>embeds it inside them for 10 seconds.", "<white>Teleport to an embedded sword by right-clicking with an empty hand.", "<white>Teleport the embedded sword to you by right-clicking with an empty hand while sneaking.", "<italics>Your nightmares will soon be over."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Stoicism: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Stoicism XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Stoicism} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Embedded Swords" with lore "<white>Striking a foe with a Summoned Sword", "<white>embeds it inside them for 10 seconds.", "<white>Teleport to an embedded sword by right-clicking with an empty hand.", "<white>Teleport the embedded sword to you by right-clicking with an empty hand while sneaking.", "<italics>Your nightmares will soon be over."
			#Impulsiveness
			if {perkTreeXP.Devil Hunter.%player%::Impulsiveness} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Impulsiveness: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Charged Shot" with lore "<white>While in Devil Trigger state, projectile attacks deal 20%% more damage", "<white>and inflict Dazed on the foe for 2 seconds.", "<italics>Place your bets... All in!!"
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Impulsiveness: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Impulsiveness XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Impulsiveness} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Charged Shot" with lore "<white>While in Devil Trigger state, projectile attacks deal 20%% more damage", "<white>and inflict Dazed on the foe for 2 seconds.", "<italics>Place your bets... All in!!"
			if {perkTreeXP.Devil Hunter.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Trigger Heart" with lore "<white>While in Devil Trigger,", "<white>grants Strength/Swiftness 3, STR/MAG/SPD/LCK +6, and", "<white>reduces consumption of the Devil Trigger gauge by 50%%.", "<italics>Yeah... Let's go all the way to hell!"
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Devil Hunter Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Devil Hunter Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Trigger Heart" with lore "<white>While in Devil Trigger,", "<white>grants Strength/Swiftness 3, STR/MAG/SPD/LCK +6, and", "<white>reduces consumption of the Devil Trigger gauge by 50%%.", "<italics>Yeah... Let's go all the way to hell!"
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Devil Hunter Mastery" with lore "<white>You need more XP in the Devil Hunter class to equip the Mastery perk.", "<white>Devil Hunter XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Devil Hunter Mastery" with lore "<white>You need more XP in the Devil Hunter class to equip the Mastery perk.", "<white>Devil Hunter XP needed: %getAbsoluteValue({perkTreeXP.Devil Hunter.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Gunslinger Perks Preview
		else if arg 1 is "Gunslinger":
			open chest inventory with 6 rows named "<gold>Gunslinger Perks Preview" for the player
			if {activePerkTree.%player%::Gunslinger} is not set:
				set {activePerkTree.%player%::Gunslinger} to "GUNSLINGER_TREE_01"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>GUNSLINGER_TREE_01" with lore "<white>GUNSLINGER_TREE_01_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_01}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>GUNSLINGER_TREE_02" with lore "<white>GUNSLINGER_TREE_02_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_02}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>GUNSLINGER_TREE_03" with lore "<white>GUNSLINGER_TREE_03_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_03}%"
			#GUNSLINGER_TREE_01 Active Display
			if {activePerkTree.%player%::Gunslinger} is "GUNSLINGER_TREE_01":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>GUNSLINGER_TREE_01" with lore "<white>GUNSLINGER_TREE_01_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_01}%"
			#GUNSLINGER_TREE_02 Active Display
			else if {activePerkTree.%player%::Gunslinger} is "GUNSLINGER_TREE_02":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>GUNSLINGER_TREE_02" with lore "<white>GUNSLINGER_TREE_02_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_02}%"
			#GUNSLINGER_TREE_03 Active Display
			else if {activePerkTree.%player%::Gunslinger} is "GUNSLINGER_TREE_03":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>GUNSLINGER_TREE_03" with lore "<white>GUNSLINGER_TREE_03_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_03}%"		
			#First perk XP walls
			#GUNSLINGER_TREE_02
			if {perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_02} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>GUNSLINGER_TREE_02: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Belt Feed" with lore "<white>Firearms draw ammunition directly from your inventory, removing the need to reload.", "<light red>But, guns use 2x the normal amount of ammunition while equipped.", "<light purple>Minigun is unaffected."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>GUNSLINGER_TREE_02: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>GUNSLINGER_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_02} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Belt Feed" with lore "<white>Firearms draw ammunition directly from your inventory, removing the need to reload.", "<light red>But, guns use 2x the normal amount of ammunition while equipped.", "<light purple>Minigun is unaffected."
			#GUNSLINGER_TREE_01
			if {perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_01} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>GUNSLINGER_TREE_01: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Slug Rounds" with lore "<white>Reduces damage falloff of all firearms."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>GUNSLINGER_TREE_01: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>GUNSLINGER_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_01} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Slug Rounds" with lore "<white>Reduces damage falloff of all firearms."
			#GUNSLINGER_TREE_03
			if {perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_03} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>GUNSLINGER_TREE_03: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Utility Belt" with lore "<white>Attempting to reload a firearm that has a full clip throws a grenade from your inventory.", "<white>If no grenades are found, a rock is thrown instead."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>GUNSLINGER_TREE_03: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>GUNSLINGER_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_03} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Utility Belt" with lore "<white>Attempting to reload a firearm that has a full clip throws a grenade from your inventory.", "<white>If no grenades are found, a rock is thrown instead."
			#Second perk XP walls
			#GUNSLINGER_TREE_02
			if {perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_02} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>GUNSLINGER_TREE_02: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Glory Kill" with lore "<white>Boosts damage dealt while unarmed by +100%%", "<white>Defeating an enemy with an unarmed strike restores ammunition,", "<white>and heals you for 50%% of your maximum health."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>GUNSLINGER_TREE_02: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>GUNSLINGER_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_02} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Glory Kill" with lore "<white>Boosts damage dealt while unarmed by +100%%", "<white>Defeating an enemy with an unarmed strike restores ammunition,", "<white>and heals you for 50%% of your maximum health."
			#GUNSLINGER_TREE_01
			if {perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_01} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>GUNSLINGER_TREE_01: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Extra Attachments" with lore "<white>Grants a special bonus to certain firearms while equipped:", "<white>Shotguns: Pierces enemy armor.", "<white>Rifles: Counted as being unarmed for perks/skills.", "<white>Snipers: Halved reload times.", "<white>Pistols: Boosts damage and forcibly juggle enemies on-hit."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>GUNSLINGER_TREE_01: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>GUNSLINGER_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_01} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Extra Attachments" with lore "<white>Grants a special bonus to certain firearms while equipped:", "<white>Shotguns: Pierces enemy armor.", "<white>Rifles: Counted as being unarmed for perks/skills.", "<white>Snipers: Halved reload times.", "<white>Pistols: Boosts damage and forcibly juggle enemies on-hit."
			#GUNSLINGER_TREE_03
			if {perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_03} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>GUNSLINGER_TREE_03: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>D.B.N.O" with lore "<white>Doubles the bleedout timer while equipped.", "<white>While in bleedout, pistols have unlimited ammo."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>GUNSLINGER_TREE_03: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>GUNSLINGER_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::GUNSLINGER_TREE_03} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>D.B.N.O" with lore "<white>Doubles the bleedout timer while equipped.", "<white>While in bleedout, pistols have unlimited ammo."
			if {perkTreeXP.Gunslinger.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Blood Thirst" with lore "<white>Killing an enemy grants STR/SPD +15 through your next action.", "<white>But, enemies that are combat tagged take 20%% less damage."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Gunslinger Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Gunslinger Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<bold>Blood Thirst" with lore "<white>Killing an enemy grants STR/SPD +15 through your next action.", "<white>But, enemies that are combat tagged take 20%% less damage."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Gunslinger Mastery" with lore "<white>You need more XP in the Gunslinger class to equip the Mastery perk.", "<white>Gunslinger XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Gunslinger Mastery" with lore "<white>You need more XP in the Gunslinger class to equip the Mastery perk.", "<white>Gunslinger XP needed: %getAbsoluteValue({perkTreeXP.Gunslinger.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Strategist Perks Preview
		else if arg 1 is "Strategist":
			open chest inventory with 6 rows named "<gold>Strategist Perks Preview" for the player
			if {activePerkTree.%player%::Strategist} is not set:
				set {activePerkTree.%player%::Strategist} to "Strategist_TREE_01"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Strategist_TREE_01" with lore "<white>Strategist_TREE_01_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Strategist.%player%::Strategist_TREE_01}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Strategist_TREE_02" with lore "<white>Strategist_TREE_02_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Strategist.%player%::Strategist_TREE_02}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Strategist_TREE_03" with lore "<white>Strategist_TREE_03_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Strategist.%player%::Strategist_TREE_03}%"
			#Strategist_TREE_01 Active Display
			if {activePerkTree.%player%::Strategist} is "Strategist_TREE_01":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Strategist_TREE_01" with lore "<white>Strategist_TREE_01_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Strategist.%player%::Strategist_TREE_01}%"
			#Strategist_TREE_02 Active Display
			else if {activePerkTree.%player%::Strategist} is "Strategist_TREE_02":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Strategist_TREE_02" with lore "<white>Strategist_TREE_02_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Strategist.%player%::Strategist_TREE_02}%"
			#Strategist_TREE_03 Active Display
			else if {activePerkTree.%player%::Strategist} is "Strategist_TREE_03":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Strategist_TREE_03" with lore "<white>Strategist_TREE_03_DESCRIPTION.", "<white>Tree XP Earned: %{perkTreeXP.Strategist.%player%::Strategist_TREE_03}%"		
			#First perk XP walls
			#Strategist_TREE_02
			if {perkTreeXP.Strategist.%player%::Strategist_TREE_02} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Strategist_TREE_02: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Inference" with lore "<white>When either Traditional Weapons or Magical Weapons increases,", "<white>grants +1 to the other Ability's value.", "<light purple>EX: Traditional Weapons is raised by +1 from the Journal.", "<light purple>With Inference, Magical Weapons increases by +1."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Strategist_TREE_02: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Strategist_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Strategist_TREE_02} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Inference" with lore "<white>When either Traditional Weapons or Magical Weapons increases,", "<white>grants +1 to the other Ability's value.", "<light purple>EX: Traditional Weapons is raised by +1 from the Journal.", "<light purple>With Inference, Magical Weapons increases by +1."
			#Strategist_TREE_01
			if {perkTreeXP.Strategist.%player%::Strategist_TREE_01} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Strategist_TREE_01: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Joint-Drive Spectrum" with lore "<white>If an ally is within 30 blocks, grants:", "<white>STR/MAG/SPD/LCK/DEF/RES +4 to player and all allies within 15 blocks." 
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Strategist_TREE_01: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Strategist_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Strategist_TREE_01} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Joint-Drive Spectrum" with lore "<white>If an ally is within 30 blocks, grants:", "<white>STR/MAG/SPD/LCK/DEF/RES +4 to player and all allies within 15 blocks." 
			#Strategist_TREE_03
			if {perkTreeXP.Strategist.%player%::Strategist_TREE_03} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Strategist_TREE_03: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Near Save" with lore "<white>If foe initiates combat on an ally within 15 blocks:", "<white>Grants a (LCK / 4)%% chance to reduce the damage that ally suffers by 50%%."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Strategist_TREE_03: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Strategist_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Strategist_TREE_03} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Near Save" with lore "<white>If foe initiates combat on an ally within 15 blocks:", "<white>Grants a (LCK / 4)%% chance to reduce the damage that ally suffers by 50%%.", "<italics>Calculated per-hit during that combat."
			#Second perk XP walls
			#Strategist_TREE_02
			if {perkTreeXP.Strategist.%player%::Strategist_TREE_02} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Strategist_TREE_02: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Dual Strike" with lore "<white>If an ally is within 30 blocks, the player's HP >= 70%%, and the player initiates combat:", "<white>Boosts damage dealt by 10%% of the nearest ally's STR or MAG depending on damage type,", "<white>and grants a (LCK / 4)%% chance to attack twice.", "<italics>Once per combat only."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Strategist_TREE_02: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Strategist_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Strategist_TREE_02} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Dual Strike" with lore "<white>If an ally is within 30 blocks, the player's HP >= 70%%, and the player initiates combat:", "<white>Boosts damage dealt by 10%% of the nearest ally's STR or MAG depending on damage type,", "<white>and grants a (LCK / 4)%% chance to attack twice.", "<italics>Once per combat only."
			#Strategist_TREE_01
			if {perkTreeXP.Strategist.%player%::Strategist_TREE_01} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Strategist_TREE_01: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Under This Banner" with lore "<white>Grants CHR +6.", "<white>Doubles the effects of your Leadership bonuses."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Strategist_TREE_01: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Strategist_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Strategist_TREE_01} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Under This Banner" with lore "<white>Grants CHR +6.", "<white>Doubles the effects of your Leadership bonuses."
			#Strategist_TREE_03
			if {perkTreeXP.Strategist.%player%::Strategist_TREE_03} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Strategist_TREE_03: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Rally Up!" with lore "<white>The effects of skills/perks that activate on a right-click action,", "<white>such as Rally Strength or Ardent Sacrifice,", "<white>apply to all allies within 10 blocks of the target at no additional cost.", "<italics>Positional skills such as Reposition are unaffected."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Strategist_TREE_03: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Strategist_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Strategist_TREE_03} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Rally Up!" with lore "<white>The effects of skills/perks that activate on a right-click action,", "<white>such as Rally Strength or Ardent Sacrifice,", "<white>apply to all allies within 30 blocks of the target at no additional cost."
			if {perkTreeXP.Strategist.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Spectrum +4" with lore "<white>Grants STR/MAG/SPD/LCK/DEF/RES/CHR +4."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Strategist Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Strategist Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Spectrum +4" with lore "<white>Grants STR/MAG/SPD/LCK/DEF/RES/CHR +4."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Strategist Mastery" with lore "<white>You need more XP in the Strategist class to equip the Mastery perk.", "<white>Strategist XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Strategist Mastery" with lore "<white>You need more XP in the Strategist class to equip the Mastery perk.", "<white>Strategist XP needed: %getAbsoluteValue({perkTreeXP.Strategist.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Survivor Perks Preview
		else if arg 1 is "Survivor":
			open chest inventory with 6 rows named "<gold>Survivor Perks Preview" for the player
			if {activePerkTree.%player%::Survivor} is not set:
				set {activePerkTree.%player%::Survivor} to "Survivor_TREE_01"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Survivor_TREE_01" with lore "<white>Improves ore collection and processing.", "<white>Tree XP Earned: %{perkTreeXP.Survivor.%player%::Survivor_TREE_01}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Survivor_TREE_02" with lore "<white>Improves farming and agriculture.", "<white>Tree XP Earned: %{perkTreeXP.Survivor.%player%::Survivor_TREE_02}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Survivor_TREE_03" with lore "<white>Restores older mechanics.", "<white>Tree XP Earned: %{perkTreeXP.Survivor.%player%::Survivor_TREE_03}%"
			#Survivor_TREE_01 Active Display
			if {activePerkTree.%player%::Survivor} is "Survivor_TREE_01":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Survivor_TREE_01" with lore "<white>Improves ore collection and processing.", "<white>Tree XP Earned: %{perkTreeXP.Survivor.%player%::Survivor_TREE_01}%"
			#Survivor_TREE_02 Active Display
			else if {activePerkTree.%player%::Survivor} is "Survivor_TREE_02":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Survivor_TREE_02" with lore "<white>Improves farming and agriculture.", "<white>Tree XP Earned: %{perkTreeXP.Survivor.%player%::Survivor_TREE_02}%"
			#Survivor_TREE_03 Active Display
			else if {activePerkTree.%player%::Survivor} is "Survivor_TREE_03":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Survivor_TREE_03" with lore "<white>Restores older mechanics.", "<white>Tree XP Earned: %{perkTreeXP.Survivor.%player%::Survivor_TREE_03}%"		
			#First perk XP walls
			#Survivor_TREE_02
			if {perkTreeXP.Survivor.%player%::Survivor_TREE_02} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Survivor_TREE_02: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Super Fertilizer" with lore "<white>A single use of bone meal instantly grows any plant.", "<italics>Due to technical limitations with tree growth,", "<italics>using bone meal on saplings won't consume any bone meal."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Survivor_TREE_02: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Survivor_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Survivor_TREE_02} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Super Fertilizer" with lore "<white>A single use of bone meal instantly grows any plant.",  "<italics>Due to technical limitations with tree growth,", "<italics>using bone meal on saplings won't consume any bone meal."
			#Survivor_TREE_01
			if {perkTreeXP.Survivor.%player%::Survivor_TREE_01} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Survivor_TREE_01: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Super Smelter" with lore "<white>Crafting a furnace automatically crafts an extra, superpowered furnace."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Survivor_TREE_01: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Survivor_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Survivor_TREE_01} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Super Smelter" with lore "<white>Crafting a furnace automatically crafts an extra, superpowered furnace."
			#Survivor_TREE_03
			if {perkTreeXP.Survivor.%player%::Survivor_TREE_03} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Survivor_TREE_03: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>True Block" with lore "<white>Restores blocking with a sword by holding right-click.", "<white>Doubles block poise while equipped."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Survivor_TREE_03: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Survivor_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Survivor_TREE_03} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>True Block" with lore "<white>Restores blocking with a sword by holding right-click.", "<white>Doubles block poise while equipped."
			#Second perk XP walls
			#Survivor_TREE_02
			if {perkTreeXP.Survivor.%player%::Survivor_TREE_02} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Survivor_TREE_02: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Lush Farming" with lore "<white>Interacting with farmland, such as planting seeds or using bone meal,", "<white>automatically spreads that use to farmland within 5 blocks of the target block."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Survivor_TREE_02: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Survivor_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Survivor_TREE_02} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Lush Farming" with lore "<white>Interacting with farmland, such as planting seeds or using bone meal,", "<white>automatically spreads that use to farmland within 5 blocks of the target block."
			#Survivor_TREE_01
			if {perkTreeXP.Survivor.%player%::Survivor_TREE_01} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Survivor_TREE_01: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Oretouch" with lore "<white>Grants a random chance for mined ore to duplicate based on LCK."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Survivor_TREE_01: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Survivor_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Survivor_TREE_01} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Oretouch" with lore "<white>Grants a random chance for mined ore to duplicate based on LCK."
			#Survivor_TREE_03
			if {perkTreeXP.Survivor.%player%::Survivor_TREE_03} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Survivor_TREE_03: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Bottomless Stomache" with lore "<white>Makes hunger decay more slowly and restores health when eating food."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Survivor_TREE_03: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Survivor_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Survivor_TREE_03} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Bottomless Stomache" with lore "<white>Makes hunger decay more slowly and restores health when eating food."
			if {perkTreeXP.Survivor.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Scavenger" with lore "<white>Halves the time it takes for ore you mine to regenerate."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Survivor Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Survivor Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Scavenger" with lore "<white>Halves the time it takes for ore you mine to regenerate."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Survivor Mastery" with lore "<white>You need more XP in the Survivor class to equip the Mastery perk.", "<white>Survivor XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Survivor Mastery" with lore "<white>You need more XP in the Survivor class to equip the Mastery perk.", "<white>Survivor XP needed: %getAbsoluteValue({perkTreeXP.Survivor.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Trickster Perks Preview
		else if arg 1 is "Trickster":
			open chest inventory with 6 rows named "<gold>Trickster Perks Preview" for the player
			if {activePerkTree.%player%::Trickster} is not set:
				set {activePerkTree.%player%::Trickster} to "Trickster_TREE_01"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Trickster_TREE_01" with lore "<white>Improves debuffing.", "<white>Tree XP Earned: %{perkTreeXP.Trickster.%player%::Trickster_TREE_01}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Trickster_TREE_02" with lore "<white>Improves hit-and-run tactics.", "<white>Tree XP Earned: %{perkTreeXP.Trickster.%player%::Trickster_TREE_02}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Trickster_TREE_03" with lore "<white>Improves theivery.", "<white>Tree XP Earned: %{perkTreeXP.Trickster.%player%::Trickster_TREE_03}%"
			#Trickster_TREE_01 Active Display
			if {activePerkTree.%player%::Trickster} is "Trickster_TREE_01":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Trickster_TREE_01" with lore "<white>Improves debuffing.", "<white>Tree XP Earned: %{perkTreeXP.Trickster.%player%::Trickster_TREE_01}%"
			#Trickster_TREE_02 Active Display
			else if {activePerkTree.%player%::Trickster} is "Trickster_TREE_02":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Trickster_TREE_02" with lore "<white>Improves hit-and-run tactics.", "<white>Tree XP Earned: %{perkTreeXP.Trickster.%player%::Trickster_TREE_02}%"
			#Trickster_TREE_03 Active Display
			else if {activePerkTree.%player%::Trickster} is "Trickster_TREE_03":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Trickster_TREE_03" with lore "<white>Improves theivery.", "<white>Tree XP Earned: %{perkTreeXP.Trickster.%player%::Trickster_TREE_03}%"		
			#First perk XP walls
			#Trickster_TREE_02
			if {perkTreeXP.Trickster.%player%::Trickster_TREE_02} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Trickster_TREE_02: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Swift Strike" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>Grants STR/SPD +5 and Swiftness 2 for 2 seconds."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Trickster_TREE_02: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Trickster_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Trickster_TREE_02} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Swift Strike" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>Grants STR/SPD +5 and Swiftness 2 for 2 seconds."
			#Trickster_TREE_01
			if {perkTreeXP.Trickster.%player%::Trickster_TREE_01} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Trickster_TREE_01: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Offense Smoke" with lore "<white>If player initiates combat:", "<white>Inflicts STR/MAG/SPD -7 on foes within 10 blocks of the victim through their next action."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Trickster_TREE_01: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Trickster_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Trickster_TREE_01} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Offense Smoke" with lore "<white>If player initiates combat:", "<white>Inflicts STR/MAG/SPD -7 on foes within 10 blocks of the victim through their next action."
			#Trickster_TREE_03
			if {perkTreeXP.Trickster.%player%::Trickster_TREE_03} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Trickster_TREE_03: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Locktouch" with lore "<white>Grants Lockpicking +35 while equipped.", "<white>Loot Chests that you open contain an extra item."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Trickster_TREE_03: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Trickster_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Trickster_TREE_03} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Locktouch" with lore "<white>Grants Lockpicking +35 while equipped.", "<white>Loot Chests that you open contain an extra item."
			#Second perk XP walls
			#Trickster_TREE_02
			if {perkTreeXP.Trickster.%player%::Trickster_TREE_02} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Trickster_TREE_02: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Lethality" with lore "<white>If player initiates combat, and a Critical Hit or Special skill activation occurs:", "<white>Boosts damage dealt by 25%%."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Trickster_TREE_02: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Trickster_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Trickster_TREE_02} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Lethality" with lore "<white>If player initiates combat, and a Critical Hit or Special skill activation occurs:", "<white>Boosts damage dealt by 25%%."
			#Trickster_TREE_01
			if {perkTreeXP.Trickster.%player%::Trickster_TREE_01} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Trickster_TREE_01: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Flash and Clear" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>Grants a (LCK / 4)%% chance to plant a <gold>[Concussion Grenade]<white> on the foe.", "<white>Maximum of 25%% chance. Conc. Grenade explodes after 2 seconds.", "<gold>[Concussion Grenade]: <white>Creates a 15-block radius explosion that inflicts", "<white>Blindness 1, Slowness/Weakness 3 for 10 seconds."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Trickster_TREE_01: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Trickster_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Trickster_TREE_01} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Flash and Clear" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>Grants a (LCK / 4)%% chance to plant a <gold>[Concussion Grenade]<white> on the foe.", "<white>Maximum of 25%% chance. Conc. Grenade explodes after 2 seconds.", "<gold>[Concussion Grenade]: <white>Creates a 15-block radius explosion that inflicts", "<white>Blindness 1, Slowness/Weakness 3 for 10 seconds."
			#Trickster_TREE_03
			if {perkTreeXP.Trickster.%player%::Trickster_TREE_03} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Trickster_TREE_03: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Rough Shove" with lore "<white>When using a positional assist skill that targets an enemy:", "<white>Grants a 50%% chance to disarm the opponent's held item."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Trickster_TREE_03: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Trickster_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Trickster_TREE_03} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Rough Shove" with lore "<white>When using a positional assist skill that targets an enemy:", "<white>Grants a 50%% chance to disarm the opponent's held item."
			if {perkTreeXP.Trickster.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Shadow Walker" with lore "<white>Holding Sneak and then right-clicking with an empty hand hides you in plain sight,", "<white>granting Invisibility and automatically hiding your armour.", "<white>Shadow Walker ends when you stop sneaking or enter combat."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Trickster Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Trickster Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Shadow Walker" with lore "<white>Holding Sneak and then right-clicking with an empty hand hides you in plain sight,", "<white>granting Invisibility and automatically hiding your armour.", "<white>Shadow Walker ends when you stop sneaking or enter combat."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Trickster Mastery" with lore "<white>You need more XP in the Trickster class to equip the Mastery perk.", "<white>Trickster XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Trickster Mastery" with lore "<white>You need more XP in the Trickster class to equip the Mastery perk.", "<white>Trickster XP needed: %getAbsoluteValue({perkTreeXP.Trickster.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Summoner Perks Preview
		else if arg 1 is "Summoner":
			open chest inventory with 6 rows named "<gold>Summoner Perks Preview" for the player
			if {activePerkTree.%player%::Summoner} is not set:
				set {activePerkTree.%player%::Summoner} to "Summoner_TREE_01"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Summoner_TREE_01" with lore "<white>Prioritizes synergy with your summons.", "<white>Tree XP Earned: %{perkTreeXP.Summoner.%player%::Summoner_TREE_01}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Summoner_TREE_02" with lore "<white>Prioritizes strong summons.", "<white>Tree XP Earned: %{perkTreeXP.Summoner.%player%::Summoner_TREE_02}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Summoner_TREE_03" with lore "<white>Prioritizes strong player magics.", "<white>Tree XP Earned: %{perkTreeXP.Summoner.%player%::Summoner_TREE_03}%"
			#Summoner_TREE_01 Active Display
			if {activePerkTree.%player%::Summoner} is "Summoner_TREE_01":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Summoner_TREE_01" with lore "<white>Improves debuffing.", "<white>Tree XP Earned: %{perkTreeXP.Summoner.%player%::Summoner_TREE_01}%"
			#Summoner_TREE_02 Active Display
			else if {activePerkTree.%player%::Summoner} is "Summoner_TREE_02":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Summoner_TREE_02" with lore "<white>Improves hit-and-run tactics.", "<white>Tree XP Earned: %{perkTreeXP.Summoner.%player%::Summoner_TREE_02}%"
			#Summoner_TREE_03 Active Display
			else if {activePerkTree.%player%::Summoner} is "Summoner_TREE_03":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Summoner_TREE_03" with lore "<white>Improves theivery.", "<white>Tree XP Earned: %{perkTreeXP.Summoner.%player%::Summoner_TREE_03}%"		
			#First perk XP walls
			#Summoner_TREE_02
			if {perkTreeXP.Summoner.%player%::Summoner_TREE_02} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Summoner_TREE_02: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Concentrated Summoning" with lore "<white>Reduces max active summons by 1.", "<white>Grants summons Strength/Swiftness 3 until their death or recall."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Summoner_TREE_02: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Summoner_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Summoner_TREE_02} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Concentrated Summoning" with lore "<white>Reduces max active summons by 1.", "<white>Grants summons Strength/Swiftness 3 until their death or recall."
			#Summoner_TREE_01
			if {perkTreeXP.Summoner.%player%::Summoner_TREE_01} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Summoner_TREE_01: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Castling" with lore "<white>If foe initiates combat, the player's HP <= 70%%, and any summon is within 15 blocks:", "<white>Reduces damage suffered by 50%%, but the nearest summon shares the damage suffered."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Summoner_TREE_01: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Summoner_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Summoner_TREE_01} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Castling" with lore "<white>If foe initiates combat, the player's HP <= 70%%, and any summon is within 15 blocks:", "<white>Reduces damage suffered by 50%%, but the nearest summon shares the damage suffered."
			#Summoner_TREE_03
			if {perkTreeXP.Summoner.%player%::Summoner_TREE_03} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Summoner_TREE_03: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Finishing Touch" with lore "<white>Prevents summons from landing a killing blow.", "<white>Defeating an enemy that has HP <= 25%% grants 2x XP and Gold, and restores 30%% of your HP."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Summoner_TREE_03: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Summoner_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Summoner_TREE_03} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Finishing Touch" with lore "<white>Prevents summons from landing a killing blow.", "<white>Defeating an enemy that has HP <= 25%% grants 2x XP and Gold, and restores 30%% of your HP."
			#Second perk XP walls
			#Summoner_TREE_02
			if {perkTreeXP.Summoner.%player%::Summoner_TREE_02} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Summoner_TREE_02: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Uncontrollable Spirit" with lore "<white>Summons gain +10 class levels, but cannot be recalled", "<white>and instead vanish after 15 seconds."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Summoner_TREE_02: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Summoner_TREE_02 XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Summoner_TREE_02} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Uncontrollable Spirit" with lore "<white>Summons gain +10 class levels, but cannot be recalled", "<white>and instead vanish after 15 seconds."
			#Summoner_TREE_01
			if {perkTreeXP.Summoner.%player%::Summoner_TREE_01} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Summoner_TREE_01: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Synergy" with lore "<white>Summons within 10 blocks of the player regain 2 hearts per second."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Summoner_TREE_01: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Summoner_TREE_01 XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Summoner_TREE_01} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Synergy" with lore "<white>Summons within 10 blocks of the player regain 2 hearts per second."
			#Summoner_TREE_03
			if {perkTreeXP.Summoner.%player%::Summoner_TREE_03} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Summoner_TREE_03: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Royal Fork" with lore "<white>If player has 1 or fewer summons active:", "<white>Sneak + Right-click with an empty hand while in mid-air to fire Mirage Bolts at", "<white>all mobs within 10 blocks.", "<white>Mirage Bolts that strike a mob restore 10%% of your maximum health.", "<white>Cooldown: 10 seconds", "<white>Each Mirage Bolt hit reduces cooldown by 0.5 seconds."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Summoner_TREE_03: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Summoner_TREE_03 XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Summoner_TREE_03} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Royal Fork" with lore "<white>If player has 1 or fewer summons active:", "<white>Sneak + Right-click with an empty hand while in mid-air to fire Mirage Bolts at", "<white>all mobs within 10 blocks.", "<white>Mirage Bolts that strike a mob restore 10%% of your maximum health.", "<white>Cooldown: 10 seconds", "<white>Each Mirage Bolt hit reduces cooldown by 0.5 seconds."
			if {perkTreeXP.Summoner.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Crimson Cloud" with lore "<white>Reduces the cost of summoning by 30%%.", "<white>Grants STR/SPD/LCK/MAG +X during combat,", "<white>where X = number of active summons * 3."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Summoner Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Summoner Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Crimson Cloud" with lore "<white>Reduces the cost of summoning by 30%%.", "<white>Grants STR/SPD/LCK/MAG +X during combat,", "<white>where X = number of active summons * 3."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Summoner Mastery" with lore "<white>You need more XP in the Summoner class to equip the Mastery perk.", "<white>Summoner XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Summoner Mastery" with lore "<white>You need more XP in the Summoner class to equip the Mastery perk.", "<white>Summoner XP needed: %getAbsoluteValue({perkTreeXP.Summoner.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Charlatan Perks Preview
		else if arg 1 is "Charlatan":
			open chest inventory with 6 rows named "<gold>Charlatan Perks Preview" for the player
			if {activePerkTree.%player%::Charlatan} is not set:
				set {activePerkTree.%player%::Charlatan} to "Illumination"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			#Illumination Active Display
			if {activePerkTree.%player%::Charlatan} is "Illumination":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Illumination" with lore "<white>Focuses on unlocking potential.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Illumination}%"
				set slot 11 of the player's current inventory to 1 stone named "<gray>Experimentation" with lore "<white>Focuses on alchemical breakthroughs.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Experimentation}%"
				set slot 15 of the player's current inventory to 1 stone named "<gray>Condemnation" with lore "<white>Focuses on destruction.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Condemnation}%"
			#Experimentation Active Display
			else if {activePerkTree.%player%::Charlatan} is "Experimentation":
				set slot 4 of the player's current inventory to 1 stone named "<gray>Illumination" with lore "<white>Focuses on strong openings.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Illumination}%"
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Experimentation" with lore "<white>Focuses on helping allies.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Experimentation}%"
				set slot 15 of the player's current inventory to 1 stone named "<gray>Condemnation" with lore "<white>Focuses on unyielding strength.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Condemnation}%"
			#Condemnation Active Display
			else if {activePerkTree.%player%::Charlatan} is "Condemnation":
				set slot 4 of the player's current inventory to 1 stone named "<gray>Illumination" with lore "<white>Focuses on strong openings.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Illumination}%"
				set slot 11 of the player's current inventory to 1 stone named "<gray>Experimentation" with lore "<white>Focuses on helping allies.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Experimentation}%"
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Condemnation" with lore "<white>Focuses on unyielding strength.", "<white>Tree XP Earned: %{perkTreeXP.charlatan.%player%::Condemnation}%"		
			#First perk XP walls
			#Experimentation
			if {perkTreeXP.charlatan.%player%::Experimentation} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Experimentation: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Flask of Madness" with lore "<white>After drinking any potion,", "<white>the player gains either Strength 3, Swiftness 3, Regeneration 3, or Resistance 3 for 30 seconds.", "<white>Each effect has an equal chance of occurring."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Experimentation: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Experimentation XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Experimentation} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Flask of Madness" with lore "<white>After drinking any potion,", "<white>the player gains either Strength 3, Swiftness 3, Regeneration 3, or Resistance 3 for 30 seconds.", "<white>Each effect has an equal chance of occurring."
			#Illumination
			if {perkTreeXP.charlatan.%player%::Illumination} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Illumination: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Divine Blessing" with lore "<white>If player initiates combat,", "and either the Regeneration or Absorption potion effects are active on them:", "<white>Restores health = 25%% of damage dealt during combat."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Illumination: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Illumination XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Illumination} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Divine Blessing" with lore "<white>If player initiates combat,", "and either the Regeneration or Absorption potion effects are active on them:", "<white>Restores health = 25%% of damage dealt during combat."
			#Condemnation
			if {perkTreeXP.charlatan.%player%::Condemnation} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Condemnation: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Scathing Blow" with lore "<white>If player initiates combat with health = 100%%:", "<white>Grants STR/MAG/DEF/RES +4 during combat,", "<white>and inflicts STR/MAG/DEF/RES -4 on foe through their next action."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Condemnation: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Condemnation XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Condemnation} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Scathing Blow" with lore "<white>If player initiates combat with health = 100%%:", "<white>Grants STR/MAG/DEF/RES +4 during combat,", "<white>and inflicts STR/MAG/DEF/RES -4 on foe through their next action."
			#Second perk XP walls
			#Experimentation
			if {perkTreeXP.charlatan.%player%::Experimentation} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Experimentation: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Alchemical Mutation" with lore "<white>While equipped, inflicts the <gold>[Morph]<reset><white> status effect.", "<gold>[Morph]: During combat, sets the inflicted's STR/MAG/SPD/DEF/RES = highest value from all entities within 30 blocks.", "<gold>Each stat is calculated independently.", "<gold>Stats will decrease if the highest value found is lower than the afflicted's."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Experimentation: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Experimentation XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Experimentation} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Alchemical Mutation" with lore "<white>While equipped, inflicts the <gold>[Morph]<reset><white> status effect.", "<gold>[Morph]: During combat, sets the inflicted's STR/MAG/SPD/DEF/RES = highest value from all entities within 30 blocks.", "<gold>Each stat is calculated independently.", "<gold>Stats will decrease if the highest value found is lower than the afflicted's."
			#Illumination
			if {perkTreeXP.charlatan.%player%::Illumination} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Illumination: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Power of Gods" with lore "<white>Grants the following bonuses based on the total number of positive potion effects active at start of combat:", "<white>[bonuses >= 1]: Grants STR/SPD/DEF/RES +4 during combat.", "<white>[bonuses >= 2]: Player makes a guaranteed follow-up attack via SPD.", "<white>[bonuses >= 3]: Foe cannot counter-attack or make a follow-up attack.", "<white>[bonuses >= 4]: Grants STR/SPD/DEF/RES +6, but damages the player by 20%% of their maximum health after combat."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Illumination: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Illumination XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Illumination} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Power of Gods" with lore "<white>Grants the following bonuses based on the total number of positive potion effects active at start of combat:", "<white>[bonuses >= 1]: Grants STR/SPD/DEF/RES +4 during combat.", "<white>[bonuses >= 2]: Player makes a guaranteed follow-up attack via SPD.", "<white>[bonuses >= 3]: Foe cannot counter-attack or make a follow-up attack.", "<white>[bonuses >= 4]: Grants STR/SPD/DEF/RES +6, but damages the player by 20%% of their maximum health after combat."
			#Condemnation
			if {perkTreeXP.charlatan.%player%::Condemnation} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Condemnation: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Devil's Sentence" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>Inflicts STR/MAG/SPD/DEF/RES -X on foe,", "<white>where X = current debuff on foe's stat.", "<white>Each stat penalty calculated independently."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Condemnation: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Condemnation XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Condemnation} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Devil's Sentence" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>Inflicts STR/MAG/SPD/DEF/RES -X on foe,", "<white>where X = current debuff on foe's stat.", "<white>Each stat penalty calculated independently."
			if {perkTreeXP.charlatan.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Infernal Ascendence" with lore "<white>During combat, if player's HP >= 50%%:", "<white>Grants bonus to player's STR/MAG/SPD/DEF/RES = current bonus on each stat.", "<white>Each bonus calculated independently.", "<white>After combat, damages the player by 30%% of their maximum health."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Charlatan Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Charlatan Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Infernal Ascendence" with lore "<white>During combat, if player's HP >= 50%%:", "<white>Grants bonus to player's STR/MAG/SPD/DEF/RES = current bonus on each stat.", "<white>Each bonus calculated independently.", "<white>After combat, damages the player by 30%% of their maximum health."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Charlatan Mastery" with lore "<white>You need more XP in the Charlatan class to equip the Mastery perk.", "<white>Charlatan XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Charlatan Mastery" with lore "<white>You need more XP in the Charlatan class to equip the Mastery perk.", "<white>Charlatan XP needed: %getAbsoluteValue({perkTreeXP.charlatan.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Troubador Perks Preview
		else if arg 1 is "Troubador":
			open chest inventory with 6 rows named "<gold>Troubador Perks Preview" for the player
			if {activePerkTree.%player%::Troubador} is not set:
				set {activePerkTree.%player%::Troubador} to "Adeptness"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Enthusiasm" with lore "<white>Focuses on caring for animals.", "<white>Tree XP Earned: %{perkTreeXP.Troubador.%player%::Enthusiasm}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Faithfulness" with lore "<white>Focuses on improved healing.", "<white>Tree XP Earned: %{perkTreeXP.Troubador.%player%::Faithfulness}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Versatility" with lore "<white>Focuses on improved damage output.", "<white>Tree XP Earned: %{perkTreeXP.Troubador.%player%::Versatility}%"
			#Enthusiasm Active Display
			if {activePerkTree.%player%::Troubador} is "Enthusiasm":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Enthusiasm" with lore "<white>Focuses on caring for animals.", "<white>Tree XP Earned: %{perkTreeXP.Troubador.%player%::Enthusiasm}%"
			#Faithfulness Active Display
			else if {activePerkTree.%player%::Troubador} is "Faithfulness":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Faithfulness" with lore "<white>Focuses on mounted combat.", "<white>Tree XP Earned: %{perkTreeXP.Troubador.%player%::Faithfulness}%"
			#Versatility Active Display
			else if {activePerkTree.%player%::Troubador} is "Versatility":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Versatility" with lore "<white>Focuses on improved damage output.", "<white>Tree XP Earned: %{perkTreeXP.Troubador.%player%::Versatility}%"		
			#First perk XP walls
			#Faithfulness
			if {perkTreeXP.Troubador.%player%::Faithfulness} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Faithfulness: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Fast Healing" with lore "<white>Allies you heal with a staff instantly recover an extra 7.5 hearts."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Faithfulness: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Faithfulness XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Faithfulness} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Fast Healing" with lore "<white>Allies you heal with a staff instantly recover an extra 7.5 hearts."
			#Enthusiasm
			if {perkTreeXP.Troubador.%player%::Enthusiasm} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Enthusiasm: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Mount" with lore "<white>Allows use of the /mount command while equipped,", "<white>allowing you to summon a horse to your side at any time."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Enthusiasm: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Enthusiasm XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Enthusiasm} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Mount" with lore "<white>Allows use of the /mount command while equipped,", "<white>allowing you to summon a horse to your side at any time."
			#Versatility
			if {perkTreeXP.Troubador.%player%::Versatility} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Versatility: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Armsthrift" with lore "<white>On level-up:", "<white>Grants +1 to Traditional Weapons, Magical Weapons, and Guns abilities."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Versatility: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Versatility XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Versatility} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Armsthrift" with lore "<white>On level-up:", "<white>Grants +1 to Traditional Weapons, Magical Weapons, and Guns abilities."
			#Second perk XP walls
			#Faithfulness
			if {perkTreeXP.Troubador.%player%::Faithfulness} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Faithfulness: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Re-Move" with lore "<white>After healing an ally with a staff:", "<white>grants Strength/Swiftness 2 to the player and their mount for 5 seconds."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Faithfulness: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Faithfulness XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Faithfulness} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Re-Move" with lore "<white>After healing an ally with a staff:", "<white>grants Strength/Swiftness 2 to the player and their mount for 5 seconds."
			#Enthusiasm
			if {perkTreeXP.Troubador.%player%::Enthusiasm} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Enthusiasm: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Deep Bond" with lore "<white>Animals that you tame (or are summoned via /mount) are granted", "<white>3x HP, and Swiftness/Resistance 1 until their death."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Enthusiasm: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Enthusiasm XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Enthusiasm} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Deep Bond" with lore "<white>Animals that you tame (or are summoned via /mount) are granted", "<white>3x HP, and Swiftness/Resistance 1 until their death."
			#Versatility
			if {perkTreeXP.Troubador.%player%::Versatility} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Versatility: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Master of All" with lore "<white>During combat, if player's HP >= 50%% and is riding a horse:", "<white>Grants STR/MAG/SPD +6 during combat."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Versatility: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Versatility XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Versatility} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Master of All" with lore "<white>During combat, if player's HP >= 50%% and is riding a horse:", "<white>Grants STR/MAG/SPD +6 during combat."
			if {perkTreeXP.Troubador.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Njorun's Zeal" with lore "<white>During combat, if player's HP >= 50%%, is riding a horse, and makes a follow-up attack:", "<white>Player automatically activates the <light purple>[Galeforce]<reset><white> Special skill.", "<white>However, after combat, inflicts Weakness/Slowness 2 on player and their mount for 10 seconds.", "<white>Njorun's Zeal cannot activate if the player is debuffed with Weakness or Slowness.", "<light purple>[Galeforce]: <white>Inflicts [Dazed] on foes within 15 blocks for 10 seconds.", "<white>Foes with the [Dazed] condition take 25%% more damage from weapons equipped with [Galeforce]."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Troubador Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Troubador Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Njorun's Zeal" with lore "<white>During combat, if player's HP >= 50%%, is riding a horse, and makes a follow-up attack:", "<white>Player automatically activates the <light purple>[Galeforce]<reset><white> Special skill.", "<white>However, after combat, inflicts Weakness/Slowness 2 on player and their mount for 10 seconds.", "<white>Njorun's Zeal cannot activate if the player is debuffed with Weakness or Slowness.", "<light purple>[Galeforce]: <white>Inflicts [Dazed] on foes within 15 blocks for 10 seconds.", "<white>Foes with the [Dazed] condition take 25%% more damage from weapons equipped with [Galeforce]."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Troubador Mastery" with lore "<white>You need more XP in the Troubador class to equip the Mastery perk.", "<white>Troubador XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Troubador Mastery" with lore "<white>You need more XP in the Troubador class to equip the Mastery perk.", "<white>Troubador XP needed: %getAbsoluteValue({perkTreeXP.Troubador.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Outlaw Perks Preview
		else if arg 1 is "Outlaw":
			open chest inventory with 6 rows named "<gold>Outlaw Perks Preview" for the player
			if {activePerkTree.%player%::Outlaw} is not set:
				set {activePerkTree.%player%::Outlaw} to "Secrecy"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Secrecy" with lore "<white>Improves single-target elimination.", "<white>Tree XP Earned: %{perkTreeXP.Outlaw.%player%::Secrecy}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Lawlessness" with lore "<white>Improves group damage.", "<white>Tree XP Earned: %{perkTreeXP.Outlaw.%player%::Lawlessness}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Mercilessness" with lore "<white>Improves critical strikes.", "<white>Tree XP Earned: %{perkTreeXP.Outlaw.%player%::Mercilessness}%"
			#Secrecy Active Display
			if {activePerkTree.%player%::Outlaw} is "Secrecy":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Secrecy" with lore "<white>Improves single-target elimination.", "<white>Tree XP Earned: %{perkTreeXP.Outlaw.%player%::Secrecy}%"
			#Lawlessness Active Display
			else if {activePerkTree.%player%::Outlaw} is "Lawlessness":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Lawlessness" with lore "<white>Improves group damage.", "<white>Tree XP Earned: %{perkTreeXP.Outlaw.%player%::Lawlessness}%"
			#Mercilessness Active Display
			else if {activePerkTree.%player%::Outlaw} is "Mercilessness":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Mercilessness" with lore "<white>Improves critical strikes.", "<white>Tree XP Earned: %{perkTreeXP.Outlaw.%player%::Mercilessness}%"		
			#First perk XP walls
			#Lawlessness
			if {perkTreeXP.Outlaw.%player%::Lawlessness} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Lawlessness: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Savage Blow II" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>After combat, damages foes within 7 blocks of the foe by 7 hearts."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Lawlessness: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Lawlessness XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Lawlessness} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Savage Blow II" with lore "<white>If player initiates combat with HP >= 50%%:", "<white>After combat, damages foes within 7 blocks of the foe by 7 hearts."
			#Secrecy
			if {perkTreeXP.Outlaw.%player%::Secrecy} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Secrecy: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Isolation" with lore "<white>If number of foes within 7 blocks <= 2:", "<white>Inflicts STR/MAG/SPD/DEF/RES -7 on foe during combat."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Secrecy: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Secrecy XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Secrecy} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Isolation" with lore "<white>If number of foes within 7 blocks <= 2:", "<white>Inflicts STR/MAG/SPD/DEF/RES -7 on foe during combat."
			#Mercilessness
			if {perkTreeXP.Outlaw.%player%::Mercilessness} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Mercilessness: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Venom Fang" with lore "<white>If player initiates combat and performs a Critical Hit:", "<white>Boosts damage by 20%% of player's STR, but inflicts 5 hearts of recoil damage after combat."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Mercilessness: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Mercilessness XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Mercilessness} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Venom Fang" with lore "<white>If player initiates combat and performs a Critical Hit:", "<white>Boosts damage by 20%% of player's STR, but inflicts 5 hearts of recoil damage after combat."
			#Second perk XP walls
			#Lawlessness
			if {perkTreeXP.Outlaw.%player%::Lawlessness} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Lawlessness: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Shroud of Shadow" with lore "<white>If number of foes within 7 blocks >= 3:", "<white>Inflicts DEF/RES -6 on foe during combat, and", "<white>inflicts Slowness/Weakness 2 on foes within 7 blocks for 5 seconds after combat."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Lawlessness: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Lawlessness XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Lawlessness} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Shroud of Shadow" with lore "<white>If player initiates combat and number of foes within 7 blocks >= 3:", "<white>Inflicts DEF/RES -6 on foe during combat, and", "<white>inflicts Slowness/Weakness 2 on foes within 7 blocks for 5 seconds after combat."
			#Secrecy
			if {perkTreeXP.Outlaw.%player%::Secrecy} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Secrecy: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Critical Solo" with lore "<white>If player initiates combat, and no allies are within 10 blocks:", "<white>Grants SPD/LCK +10 during combat."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Secrecy: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Secrecy XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Secrecy} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Critical Solo" with lore "<white>If player initiates combat, and no allies are within 10 blocks:", "<white>Grants SPD/LCK +10 during combat."
			#Mercilessness
			if {perkTreeXP.Outlaw.%player%::Mercilessness} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Mercilessness: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Heavy Hand" with lore "<white>Reduces the number of hits required to trigger a Finishing Blow."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Mercilessness: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Mercilessness XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Mercilessness} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Heavy Hand" with lore "<white>Reduces the number of hits required to trigger a Finishing Blow."
			if {perkTreeXP.Outlaw.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Angel of Death" with lore "<white>If player initiates combat and number of foes > number of allies within 10 blocks:", "<white>Grants STR/MAG/SPD +6 during combat and accelerates Special skill activation (+10%% activation chance)."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Outlaw Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Outlaw Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Angel of Death" with lore "<white>If player initiates combat and number of foes > number of allies within 10 blocks:", "<white>Grants STR/MAG/SPD +6 during combat and accelerates Special skill activation (+10%% activation chance)."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Outlaw Mastery" with lore "<white>You need more XP in the Outlaw class to equip the Mastery perk.", "<white>Outlaw XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Outlaw Mastery" with lore "<white>You need more XP in the Outlaw class to equip the Mastery perk.", "<white>Outlaw XP needed: %getAbsoluteValue({perkTreeXP.Outlaw.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Conjurer Perks Preview
		else if arg 1 is "Conjurer":
			open chest inventory with 6 rows named "<gold>Conjurer Perks Preview" for the player
			if {activePerkTree.%player%::Conjurer} is not set:
				set {activePerkTree.%player%::Conjurer} to "Wisdom"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Vendetta" with lore "<white>Focuses on stronger wand casting.", "<white>Tree XP Earned: %{perkTreeXP.Conjurer.%player%::Vendetta}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Wisdom" with lore "<white>Focuses on rapid-fire spells.", "<white>Tree XP Earned: %{perkTreeXP.Conjurer.%player%::Wisdom}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Chaos" with lore "<white>Focuses on improved melee damage.", "<white>Tree XP Earned: %{perkTreeXP.Conjurer.%player%::Chaos}%"
			#Vendetta Active Display
			if {activePerkTree.%player%::Conjurer} is "Vendetta":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Vendetta" with lore "<white>Focuses on stronger wand casting.", "<white>Tree XP Earned: %{perkTreeXP.Conjurer.%player%::Vendetta}%"
			#Wisdom Active Display
			else if {activePerkTree.%player%::Conjurer} is "Wisdom":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Wisdom" with lore "<white>Focuses on rapid-fire spells.", "<white>Tree XP Earned: %{perkTreeXP.Conjurer.%player%::Wisdom}%"
			#Chaos Active Display
			else if {activePerkTree.%player%::Conjurer} is "Chaos":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Chaos" with lore "<white>Focuses on improved melee damage.", "<white>Tree XP Earned: %{perkTreeXP.Conjurer.%player%::Chaos}%"		
			#First perk XP walls
			#Wisdom
			if {perkTreeXP.Conjurer.%player%::Wisdom} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Wisdom: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Ancient Knowledge" with lore "<white>Nullifies cooldown of Magic Wands,", "<white>but deals non-lethal recoil damage equal to 50%% of the nullified cooldown time."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Wisdom: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Wisdom XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Wisdom} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Ancient Knowledge" with lore "<white>Nullifies cooldown of Magic Wands,", "<white>but deals non-lethal recoil damage equal to 50%% of the nullified cooldown time."
			#Vendetta
			if {perkTreeXP.Conjurer.%player%::Vendetta} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Vendetta: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Blood Pact" with lore "<white>If player initiates combat, and both player and foe are not combat tagged:", "<white>Damage the player suffers also damages the foe by half the amount.", "<white>Effect lasts while player is combat tagged."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Vendetta: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Vendetta XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Vendetta} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Blood Pact" with lore "<white>If player initiates combat, and both player and foe are not combat tagged:", "<white>Damage the player suffers also damages the foe.", "<white>Effect lasts while player is combat tagged."
			#Chaos
			if {perkTreeXP.Conjurer.%player%::Chaos} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Chaos: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Sudden Panic" with lore "<white>During combat, if player's HP >= foe's HP -3:", "<white>Converts bonuses on foe into penalties.", "<white>Inflicts STR/MAG/DEF/RES -4 on foe."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Chaos: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Chaos XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Chaos} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Sudden Panic" with lore "<white>During combat, if player's HP >= foe's HP -3:", "<white>Converts bonuses on foe into penalties.", "<white>Inflicts STR/MAG/DEF/RES -4 on foe."
			#Second perk XP walls
			#Wisdom
			if {perkTreeXP.Conjurer.%player%::Wisdom} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Wisdom: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Lifetaker" with lore "<white>If player initiates combat, restores health equal to 10%% of damage dealt during combat."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Wisdom: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Wisdom XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Wisdom} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Lifetaker" with lore "<white>If player initiates combat, restores health equal to 10%% of damage dealt during combat."
			#Vendetta
			if {perkTreeXP.Conjurer.%player%::Vendetta} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Vendetta: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Foretold Demise" with lore "<white>If player kills a foe, and has HP <= 50%%:", "<white>Grants STR/MAG +6 through player's next action.", "<white>Restores health = 25%% of player's maximum health."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Vendetta: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Vendetta XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Vendetta} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Foretold Demise" with lore "<white>If player kills a foe, and has HP <= 50%%:", "<white>Grants STR/MAG +6 through player's next action.", "<white>Restores health = 25%% of player's maximum health."
			#Chaos
			if {perkTreeXP.Conjurer.%player%::Chaos} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Chaos: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Futile Resistance" with lore "<white>If player initiates combat and foe's HP <= 50%%:", "<white>Inflicts DEF/RES -6 on foe during combat,", "<white>and if player's HP >= 70%%:", "<white>Grants STR/MAG +6 during combat."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Chaos: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Chaos XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Chaos} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Futile Resistance" with lore "<white>If player initiates combat and foe's HP <= 50%%:", "<white>Inflicts DEF/RES -6 on foe during combat,", "<white>and if player's HP >= 70%%:", "<white>Grants STR/MAG +6 during combat."
			if {perkTreeXP.Conjurer.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Chaos's Embrace" with lore "<white>Grants bonus damage equal to 50%% of total debuffs on foe during combat.", "<white>After combat, if player initiated:", "<white>Inflicts recoil damage equal to 20%% of player's maximum health."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Conjurer Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Conjurer Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Chaos's Embrace" with lore "<white>Grants bonus damage equal to 50%% of total debuffs on foe during combat.", "<white>After combat, if player initiated:", "<white>Inflicts recoil damage equal to 20%% of player's maximum health."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Conjurer Mastery" with lore "<white>You need more XP in the Conjurer class to equip the Mastery perk.", "<white>Conjurer XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Conjurer Mastery" with lore "<white>You need more XP in the Conjurer class to equip the Mastery perk.", "<white>Conjurer XP needed: %getAbsoluteValue({perkTreeXP.Conjurer.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Poet Perks Preview
		else if arg 1 is "Poet":
			open chest inventory with 6 rows named "<gold>Poet Perks Preview" for the player
			if {activePerkTree.%player%::Poet} is not set:
				set {activePerkTree.%player%::Poet} to "Rythm"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Rythm" with lore "<white>Manage the flow of melee strikes to boost your damage!", "<white>Tree XP Earned: %{perkTreeXP.Poet.%player%::Rythm}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Tempo" with lore "<white>Keep pace with your allies for increased damage!", "<white>Tree XP Earned: %{perkTreeXP.Poet.%player%::Tempo}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Melody" with lore "<white>Perform for allies to boost their abilities.", "<white>Tree XP Earned: %{perkTreeXP.Poet.%player%::Melody}%"
			#Rythm Active Display
			if {activePerkTree.%player%::Poet} is "Rythm":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Rythm" with lore "<white>Manage the flow of melee strikes to boost your damage.", "<white>Tree XP Earned: %{perkTreeXP.Poet.%player%::Rythm}%"
			#Tempo Active Display
			else if {activePerkTree.%player%::Poet} is "Tempo":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Tempo" with lore "<white>Keep pace with your allies for increased damage.", "<white>Tree XP Earned: %{perkTreeXP.Poet.%player%::Tempo}%"
			#Melody Active Display
			else if {activePerkTree.%player%::Poet} is "Melody":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Melody" with lore "<white>Perform for allies to boost their abilities.", "<white>Tree XP Earned: %{perkTreeXP.Poet.%player%::Melody}%"		
			#First perk XP walls
			#Tempo
			if {perkTreeXP.Poet.%player%::Tempo} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Tempo: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>ATK/SPD Unity" with lore "<white>If any ally is within 30 blocks during combat:", "<white>Grants STR/MAG/SPD +7, and", "<white>neutralizes debuffs to STR/MAG/SPD if present."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Tempo: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Tempo XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Tempo} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>ATK/SPD Unity" with lore "<white>If any ally is within 30 blocks during combat:", "<white>Grants STR/MAG/SPD +7, and", "<white>neutralizes debuffs to STR/MAG/SPD if present."
			#Rythm
			if {perkTreeXP.Poet.%player%::Rythm} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Rythm: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Quick Refrain" with lore "<white>Halves the time melee weapons are disabled after a Finishing Blow,", "<white>but attacking before the cooldown period is over", "<white>inflicts STR/MAG/SPD/DEF/RES -5 during combat."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Rythm: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Rythm XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Rythm} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Quick Refrain" with lore "<white>Halves the time melee weapons are disabled after a Finishing Blow,", "<white>but while melee weapons are disabled,", "<white>inflicts STR/MAG/SPD/DEF/RES -6 during combat."
			#Melody
			if {perkTreeXP.Poet.%player%::Melody} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Melody: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>Perform" with lore "<white>Right-click an ally to grant them Strength/Swiftness 4 for 20 seconds.", "<white>Inflicts Slowness/Weakness 2 on player for 10 seconds after use.", "<white>Perform cannot be used if afflicted with Slowness or Weakness."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Melody: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Melody XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Melody} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>Perform" with lore "<white>Right-click an ally to grant them Strength/Swiftness 4 for 20 seconds.", "<white>Inflicts Slowness/Weakness 2 on player for 10 seconds after use.", "<white>Perform cannot be used if afflicted with Slowness or Weakness."
			#Second perk XP walls
			#Tempo
			if {perkTreeXP.Poet.%player%::Tempo} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Tempo: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Requiem" with lore "<white>If player triggers a Special skill during combat:", "<white>Grants Strength/Swiftness 2 to player & allies within 30 blocks for 10 seconds."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Tempo: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Tempo XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Tempo} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Requiem" with lore "<white>If player triggers a Special skill during combat:", "<white>Grants Strength/Swiftness 2 to player & allies within 30 blocks for 10 seconds."
			#Rythm
			if {perkTreeXP.Poet.%player%::Rythm} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Rythm: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Crescendo" with lore "<white>Doubles the effect of Finishing Blows,", "<white>but also doubles the melee cooldown inflicted."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Rythm: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Rythm XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Rythm} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Crescendo" with lore "<white>Doubles the effect of Finishing Blows,", "<white>but also doubles the melee cooldown inflicted."
			#Melody
			if {perkTreeXP.Poet.%player%::Melody} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Melody: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Firestorm Song" with lore "<white>Using any Rally skill or Performing for an ally", "<white>grants you and that ally STR/MAG/SPD +6 through next action,", "<white>and also instantly heals both player and target by 5 hearts."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Melody: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Melody XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Melody} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Firestorm Song" with lore "<white>Using any Rally skill or Performing for an ally", "<white>grants you and that ally STR/MAG/SPD +6 through next action,", "<white>and also instantly heals both player and target by 5 hearts."
			if {perkTreeXP.Poet.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Flashing Blade II" with lore "<white>If player initiates combat:", "<white>Inflicts SPD -5 on foe during combat, and,", "<white>if player's SPD >= foe's SPD:", "<white>Accelerates Special skill activation (+10%% activation chance)", "<white>and deals bonus damage of [(player's SPD - foe's SPD) * 2].", "<white>Bonus damage caps at +10."
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Poet Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Poet Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Flashing Blade II" with lore "<white>If player initiates combat:", "<white>Inflicts SPD -5 on foe during combat, and,", "<white>if player's SPD >= foe's SPD:", "<white>Accelerates Special skill activation (+10%% activation chance)", "<white>and deals bonus damage of [(player's SPD - foe's SPD) * 2].", "<white>Bonus damage caps at +10."
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Poet Mastery" with lore "<white>You need more XP in the Poet class to equip the Mastery perk.", "<white>Poet XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Poet Mastery" with lore "<white>You need more XP in the Poet class to equip the Mastery perk.", "<white>Poet XP needed: %getAbsoluteValue({perkTreeXP.Poet.%player%::Global} - {perksThirdHonorXPRequirement})%"
		#Keeper Perks Preview
		else if arg 1 is "Keeper":
			open chest inventory with 6 rows named "<gold>Keeper Perks Preview" for the player
			if {activePerkTree.%player%::Keeper} is not set:
				set {activePerkTree.%player%::Keeper} to "Perserverance"
			set slot 0 of the player's current inventory to 1 red glass pane named "<bold>Return to Directory"
			set slot 2 of the player's current inventory to 1 stick
			set slot 3 of the player's current inventory to 1 stick
			set slot 5 of the player's current inventory to 1 stick
			set slot 6 of the player's current inventory to 1 stick
			set slot 4 of the player's current inventory to 1 stone named "<gray>Deflection" with lore "<white>Focuses on consistent performance.", "<white>Tree XP Earned: %{perkTreeXP.Keeper.%player%::Deflection}%"
			set slot 11 of the player's current inventory to 1 stone named "<gray>Perserverance" with lore "<white>Focuses on high durability.", "<white>Tree XP Earned: %{perkTreeXP.Keeper.%player%::Perserverance}%"
			set slot 15 of the player's current inventory to 1 stone named "<gray>Protection" with lore "<white>Focuses on self-sufficiency.", "<white>Tree XP Earned: %{perkTreeXP.Keeper.%player%::Protection}%"
			#Deflection Active Display
			if {activePerkTree.%player%::Keeper} is "Deflection":
				set slot 4 of the player's current inventory to 1 iron block named "<gold>Deflection" with lore "<white>Focuses on consistent performance.", "<white>Tree XP Earned: %{perkTreeXP.Keeper.%player%::Deflection}%"
			#Perserverance Active Display
			else if {activePerkTree.%player%::Keeper} is "Perserverance":
				set slot 11 of the player's current inventory to 1 iron block named "<gold>Perserverance" with lore "<white>Focuses on high durability.", "<white>Tree XP Earned: %{perkTreeXP.Keeper.%player%::Perserverance}%"
			#Protection Active Display
			else if {activePerkTree.%player%::Keeper} is "Protection":
				set slot 15 of the player's current inventory to 1 iron block named "<gold>Protection" with lore "<white>Focuses on self-sufficiency.", "<white>Tree XP Earned: %{perkTreeXP.Keeper.%player%::Protection}%"		
			#First perk XP walls
			#Perserverance
			if {perkTreeXP.Keeper.%player%::Perserverance} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 20 of the player's current inventory to 1 ladder named "<gold>Perserverance: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 29 of the player's current inventory to 1 emerald block named "<bold>Bracing Stance" with lore "<white>If foe initiates combat, grants DEF/RES +6 during combat."
			else:
				set slot 20 of the player's current inventory to 1 barrier named "<light red>Perserverance: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Perserverance XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Perserverance} - {perksFirstHonorXPRequirement})%"
				set slot 29 of the player's current inventory to 1 obsidian named "<light red>Bracing Stance" with lore "<white>If foe initiates combat, grants DEF/RES +6 during combat."
			#Deflection
			if {perkTreeXP.Keeper.%player%::Deflection} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 13 of the player's current inventory to 1 ladder named "<gold>Deflection: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 22 of the player's current inventory to 1 emerald block named "<bold>Aegis Guard" with lore "<white>Shields reduce 70%% more damage if the foe is using any ranged weapon."
			else:
				set slot 13 of the player's current inventory to 1 barrier named "<light red>Deflection: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Deflection XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Deflection} - {perksFirstHonorXPRequirement})%"
				set slot 22 of the player's current inventory to 1 obsidian named "<light red>Aegis Guard" with lore "<white>Shields reduce 70%% more damage if the foe is using any ranged weapon."
			#Protection
			if {perkTreeXP.Keeper.%player%::Protection} is more than or equal to {perksFirstHonorXPRequirement}:
				set slot 24 of the player's current inventory to 1 ladder named "<gold>Protection: 1st Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 33 of the player's current inventory to 1 emerald block named "<bold>DEF/RES Save" with lore "<white>If foe initiates combat against an ally within 15 blocks:", "<white>Grants DEF/RES +4 and triggers <gold>[Savior]<white> on player during that combat.", "<gold>[Savior]:<white> Take the place of the victim of that combat. Original victim recieves 0 damage. Combat then proceeds as normal."
			else:
				set slot 24 of the player's current inventory to 1 barrier named "<light red>Protection: 1st Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Protection XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Protection} - {perksFirstHonorXPRequirement})%"
				set slot 33 of the player's current inventory to 1 obsidian named "<light red>DEF/RES Save" with lore "<white>If foe initiates combat against an ally within 15 blocks:", "<white>Grants DEF/RES +4 and triggers <gold>[Savior]<white> on player during that combat.", "<gold>[Savior]:<white> Take the place of the victim of that combat. Original victim recieves 0 damage. Combat then proceeds as normal."
			#Second perk XP walls
			#Perserverance
			if {perkTreeXP.Keeper.%player%::Perserverance} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 38 of the player's current inventory to 1 ladder named "<gold>Perserverance: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 47 of the player's current inventory to 1 emerald block named "<bold>Boundless Stamina" with lore "<white>After combat, restores 6 hearts and 1 point of hunger."
			else:
				set slot 38 of the player's current inventory to 1 barrier named "<light red>Perserverance: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Perserverance XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Perserverance} - {perksSecondHonorXPRequirement})%"
				set slot 47 of the player's current inventory to 1 obsidian named "<light red>Boundless Stamina" with lore "<white>After combat, restores 6 hearts and 1 point of hunger."
			#Deflection
			if {perkTreeXP.Keeper.%player%::Deflection} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 31 of the player's current inventory to 1 ladder named "<gold>Deflection: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 40 of the player's current inventory to 1 emerald block named "<bold>Warlock's Ward" with lore "<white>If player's HP >= 50%%, the foe initiates combat, and the player is blocking:", "<white>Grants DEF/RES +4 during combat, and", "<white>calculates damage using the higher of the player's DEF or RES."
			else:
				set slot 31 of the player's current inventory to 1 barrier named "<light red>Deflection: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Deflection XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Deflection} - {perksSecondHonorXPRequirement})%"
				set slot 40 of the player's current inventory to 1 obsidian named "<light red>Warlock's Ward" with lore "<white>If player's HP >= 50%%, the foe initiates combat, and the player is blocking:", "<white>Grants DEF/RES +4 during combat, and", "<white>calculates damage using the higher of the player's DEF or RES."
			#Protection
			if {perkTreeXP.Keeper.%player%::Protection} is more than or equal to {perksSecondHonorXPRequirement}:
				set slot 42 of the player's current inventory to 1 ladder named "<gold>Protection: 2nd Honor" with lore "<white>You've reached the XP needed to equip this tree's next perk."
				set slot 51 of the player's current inventory to 1 emerald block named "<bold>Vengeful Fighter" with lore "<white>If player's HP >= 50%%, foe initiates combat, and player's SPD < foe's SPD - 5:", "<white>Player makes a guaranteed counter-attack,", "<white>and accelerates Special skill activation (+10%% activation chance)."
			else:
				set slot 42 of the player's current inventory to 1 barrier named "<light red>Protection: 2nd Honor" with lore "<white>You need more XP in this tree to equip the next perk.", "<white>Protection XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Protection} - {perksSecondHonorXPRequirement})%"
				set slot 51 of the player's current inventory to 1 obsidian named "<light red>Vengeful Fighter" with lore "<white>If player's HP >= 50%%, foe initiates combat, and player's SPD < foe's SPD - 5:", "<white>Player makes a guaranteed counter-attack,", "<white>and accelerates Special skill activation (+10%% activation chance)."
			if {perkTreeXP.Keeper.%player%::Global} is more than or equal to {perksThirdHonorXPRequirement}:
				set slot 49 of the player's current inventory to 1 emerald block of power 1 named "<bold>Dragonskin" with lore "<white>During combat, if player's RES > foe's RES:", "<white>Reduces damage taken from foe by X%%,", "<white>where X = [(player's RES - foe's RES) * 4]", "<white>Maximum value of X: 40%%"
				set slot 48 of the player's current inventory to 1 ladder named "<gold>Keeper Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
				set slot 50 of the player's current inventory to 1 ladder named "<gold>Keeper Mastery" with lore "<white>You've reached the XP needed to equip this tree's Mastery perk."
			else:
				set slot 49 of the player's current inventory to 1 obsidian named "<light red>Dragonskin" with lore "<white>During combat, if player's RES > foe's RES:", "<white>Reduces damage taken from foe by X%%,", "<white>where X = [(player's RES - foe's RES) * 4]", "<white>Maximum value of X: 40%%"
				set slot 48 of the player's current inventory to 1 barrier named "<light red>Keeper Mastery" with lore "<white>You need more XP in the Keeper class to equip the Mastery perk.", "<white>Keeper XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Global} - {perksThirdHonorXPRequirement})%"
				set slot 50 of the player's current inventory to 1 barrier named "<light red>Keeper Mastery" with lore "<white>You need more XP in the Keeper class to equip the Mastery perk.", "<white>Keeper XP needed: %getAbsoluteValue({perkTreeXP.Keeper.%player%::Global} - {perksThirdHonorXPRequirement})%"
				
on inventory click:
	if the name of the player's current inventory contains "Preview":
		if the name of the clicked item is "<bold>Return to Character Creation":
			make player execute command "/charsetup 6"
		else if the name of the clicked item is "<bold>Return to Directory":
			make player execute command "/class_setup_perkmenu 2"
		else if the name of the clicked item contains "<gold>":
			if the name of the player's current inventory contains "Preview Class Perks":
				set {_class} to decolorize(name of the clicked item)
				make player execute command "/class_setup_perkmenu %{_class}%"
		cancel event