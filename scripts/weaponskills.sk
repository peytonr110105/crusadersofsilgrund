function helmType(PLR: player) :: number:
	if {_PLR} is wearing a leather helmet:
		return 0.25
	else if {_PLR} is wearing a chain helmet:
		return 0.55
	else if {_PLR} is wearing an iron helmet:
		return 0.75
	else if {_PLR} is wearing a gold helmet:
		return 0.25
	else if {_PLR} is wearing a diamond helmet:
		return 0.8
		
function chestType(PLR: player) :: number:
	if {_PLR} is wearing a leather chestplate:
		return 0.25
	else if {_PLR} is wearing a chain chestplate:
		return 0.55
	else if {_PLR} is wearing an iron chestplate:
		return 1
	else if {_PLR} is wearing a gold chestplate:
		return 0.5
	else if {_PLR} is wearing a diamond chestplate:
		return 2

function legType(PLR: player) :: number:
	if {_PLR} is wearing leather leggings:
		return 0.25
	else if {_PLR} is wearing chain leggings:
		return 0.55
	else if {_PLR} is wearing iron leggings:
		return 1
	else if {_PLR} is wearing gold leggings:
		return 0.5
	else if {_PLR} is wearing diamond leggings:
		return 2
		
function btType(PLR: player) :: number:
	if {_PLR} is wearing leather boots:
		return 0.25
	else if {_PLR} is wearing chain boots:
		return 0.55
	else if {_PLR} is wearing iron boots:
		return 0.75
	else if {_PLR} is wearing gold boots:
		return 0.25
	else if {_PLR} is wearing diamond boots:
		return 0.8
		
function startQuest(PLR: player , QUEST: text , DESC: text):
	set {quests.%{_PLR}%::%{_QUEST}%} to 1
	send title "<white><bold>New Quest: %{_QUEST}%" with subtitle "%{_DESC}%" to {_PLR} for 5 seconds with fade in 0.25 seconds and fade out 0.25 seconds
	play sound "entity.firework_rocket.launch" with volume 0.75 and pitch 1 at {_PLR} for {_PLR}
	play sound "entity.firework_rocket.twinkle" with volume 0.4 and pitch 1.5 at {_PLR} for {_PLR}
	play sound "entity.player.levelup" with volume 1 and pitch 1 at {_PLR} for {_PLR}
	play 60 (firework spark with speed 1) at {_PLR}
	play 60 (snow shovel with speed 1) at {_PLR}

function setQuestProgress(PLR: player , QUEST: text , STAGE: number, INFO: text):
	set {quests.%{_PLR}%::%{_QUEST}%} to {_STAGE}
	send title "" with subtitle "%{_INFO}%" to {_PLR} for 2.5 seconds with fade in 0.25 seconds and fade out 0.25 seconds
	play sound "entity.player.levelup" with volume 0.5 and pitch 1.5 at {_PLR} for {_PLR}
	#play sound "entity.firework_rocket.twinkle" with volume 0.4 and pitch 1.5 at the player for the player
	play 10 (firework spark with speed 1) at {_PLR}
	play 10 (snow shovel with speed 1) at {_PLR}
	
function finishQuest(PLR: player , QUEST: text , DESC: text):
	set {quests.%{_PLR}%::%{_QUEST}%} to 999
	send title "<gold><bold>Quest Complete: %{_QUEST}%" with subtitle "%{_DESC}%" to {_PLR} for 5 seconds with fade in 0.25 seconds and fade out 0.25 seconds
	play sound "entity.player.levelup" with volume 1 and pitch 0.75 at {_PLR} for {_PLR}
	play sound "entity.firework_rocket.twinkle" with volume 1 and pitch 1.5 at {_PLR} for {_PLR}
	play 60 (firework spark with speed 1) at {_PLR}
	play 60 (snow shovel with speed 1) at {_PLR}
	
function failQuest(PLR: player , QUEST: text , DESC: text):
	set {quests.%{_PLR}%::%{_QUEST}%} to 998
	send title "<light red><bold>Quest Failed: %{_QUEST}%" with subtitle "%{_DESC}%" to {_PLR} for 5 seconds with fade in 0.25 seconds and fade out 0.25 seconds
	play 60 (red wool break with speed 1) at {_PLR}
	show mob spawner flames on {_PLR}
	
function specialCheck(PLR: player, PCT: number, CAP: number) :: number:
	set {_odds} to (({skl.%{_PLR}%} + {sklbuff.%{_PLR}%}) ^ {_PCT})
	if {_odds} is more than {_CAP}:
		set {_odds} to {_CAP}
	if the 6th line of the lore of {_PLR}'s tool contains "Slaying":
		add 10 to {_odds}
	if the 2nd line of the lore of {_PLR}'s tool contains "Wrath":
		if {_PLR}'s health is less than ({_PLR}'s maximum health * 0.5):
			add ({_PLR}'s maximum health - {_PLR}'s health) to {_odds}
	if the 6th line of the lore of {_PLR}'s tool contains "Crushing":
		add {crushing.%{_PLR}%} to {_odds}
	if the name of {_PLR}'s tool is "<gold><bold>Rex Hasta":
		if the 6th line of the lore of {_PLR}'s tool contains "Unique":
			add 20 to {_odds}
	else if the name of {_PLR}'s tool is "<gold><bold>Hauteclere":
		if the 6th line of the lore of {_PLR}'s tool contains "Unique":
			add 20 to {_odds}
	chance of {_odds}%:
		return 1
	else if {_odds} is more than 100:
		return 1
	else:
		return 0
		
#Dodge Roll Toggle Command
command /dr [<number=2>]:
	description: Toggles your Dodge Roll on and off.
	usage: /dr
	executable by: players
	trigger:
		if arg 1 is 1:
			set {drenable.%player%} to 1
			send "<green><bold>Dodge Roll enabled! Double tap Sneak to roll backwards."
		else if arg 1 is 0:
			set {drenable.%player%} to 0
			send "<green><bold>Dodge Roll disabled!"
		else:
			if {drenable.%player%} is 1:
				set {drenable.%player%} to 0
				send "<green><bold>Dodge Roll disabled!"
			else:
				set {drenable.%player%} to 1
				send "<green><bold>Dodge Roll enabled! Double tap Sneak to roll backwards."

#Dodge Roll Refresh and Double-Tap Check
every 0.5 seconds:
	loop all players:
		if {dr.%loop-player%} is 1 or 2:
			set {dr.%loop-player%} to 0
		if the 3rd line of the lore of the loop-player's tool contains "Hone":
			loop all players in radius 10 of the loop-player:
				if loop-player-2 is not the loop-player-1:
					if {party.%loop-player-1%} is {party.%loop-player-2%}:
						if the 3rd line of the lore of the loop-player-1's tool contains "STR":
							add 20 to {strbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {strbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
							add 20 to {spdbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {spdbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
							add 20 to {sklbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {sklbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
							add 20 to {defbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {defbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
							add 20 to {resbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 20 from {resbuff.%loop-player-2%}
					play 10 (lava pop with speed 0.5) at the loop-player-2
					exit 1 loop
		else if the 3rd line of the lore of the loop-player's tool contains "Drive":
			loop all players in radius 15 of the loop-player:
				if loop-player-2 is not the loop-player-1:
					if {party.%loop-player-1%} is {party.%loop-player-2%}:
						if the 3rd line of the lore of the loop-player-1's tool contains "STR":
							add 10 to {strbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {strbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
							add 10 to {spdbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {spdbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
							add 10 to {sklbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {sklbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
							add 10 to {defbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {defbuff.%loop-player-2%}
						else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
							add 10 to {resbuff.%loop-player-2%}
							wait 0.5 seconds
							subtract 10 from {resbuff.%loop-player-2%}
						play 10 (water splash with speed 0.5) at the loop-player-2
		else if the 3rd line of the lore of the loop-player's tool contains "Pressure":
			loop all entities in radius 15 of the loop-player:
				if loop-entity-2 is not loop-player-1:
					if loop-entity-2 is not item:
						if {party.%loop-entity-2%} is not {party.%loop-player-1%}:
							if ({res.%loop-entity-2%} + {resbuff.%loop-entity-2%} + 10) is less than ({res.%loop-player-1%} + {resbuff.%loop-player-1%}):
								if the 3rd line of the lore of the loop-player-1's tool contains "STR":
									subtract 20 from {strbuff.%loop-entity-2%}
									wait 0.5 seconds
									add 20 to {strbuff.%loop-entity-2%}
								else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
									subtract 20 from {spdbuff.%loop-entity-2%}
									wait 0.5 seconds
									add 20 to {spdbuff.%loop-entity-2%}
								else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
									subtract 20 from {sklbuff.%loop-entity-2%}
									wait 0.5 seconds
									add 20 to {sklbuff.%loop-entity-2%}
								else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
									subtract 20 from {defbuff.%loop-entity-2%}
									wait 0.5 seconds
									add 20 to {defbuff.%loop-entity-2%}
								else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
									subtract 20 from {resbuff.%loop-entity-2%}
									wait 0.5 seconds
									add 20 to {resbuff.%loop-entity-2%}
								play 10 (red wool break with speed 0) at the loop-entity-2
		else if the 3rd line of the lore of the loop-player's tool contains "Authority":
			loop all players in radius 15 of the loop-player:
				if loop-player-2 is not the loop-player-1:
					if {party.%loop-player-1%} is {party.%loop-player-2%}:
						if {lvl.%loop-player-1%} is more than {lvl.%loop-player-2%}:
							if the 3rd line of the lore of the loop-player-1's tool contains "STR":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {strbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {strbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "SPD":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {spdbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {spdbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "SKL":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {sklbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {sklbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "DEF":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {defbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {defbuff.%loop-player-2%}
							else if the 3rd line of the lore of the loop-player-1's tool contains "MAG":
								add (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) to {resbuff.%loop-player-2%}
								wait 0.5 seconds
								subtract (({lvl.%loop-player-1%} - {lvl.%loop-player-2%}) * 2) from {resbuff.%loop-player-2%}
							play 10 (yellow wool break with speed 1) at the loop-player-2

#DR = 0 - Prepped
#DR = 1 - Ready to activated
#DR = 2 - Exhausted, must recharge.
#DRInvincible - Player is rolling with invincibility

#Check Slots Function Imported From cskills.sk			
function checkSlots(PLR: player , skill: text) :: number:
	if {skillslot1.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot2.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot3.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot4.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot5.%{_PLR}%} contains "%{_skill}%":
		return 1
	else:
		return 0

#Dodge Roll
on sneak toggle:
	if {drenable.%player%} is 1:
		if player is sneaking:
			set {dr.%player%} to 1
		if {dr.%player%} is 1:
			if player is sneaking:
				set {dr.%player%} to 1
			else:
				set {_flight} to checkSlots(player,"Flight")
				if player's hunger is less than 3:
					send "<red><bold>Not enough hunger to Dodge Roll!" to the player
				else if {_flight} is 1:
					if {flying.%player%} is not set:
						set {flying.%player%} to 1
						set {_armour} to the player's chestplate
						set the player's chestplate to 1 elytra
						push the player upwards at speed 5
						play sound "entity.blaze.shoot" with volume 0.5 and pitch 1.5 at player
						send "<light blue>You take to the skies!"
						wait 1 second
						while player's hunger is more than 3:
							if ground state of player is true:
								exit 1 loop
							else if player is sneaking:
								exit 1 loop
							play 20 (smoke with speed 0) at player
							play 20 (snowball break with speed 0) at player
							play sound "entity.enderdragon.flap" with volume 1 and pitch 1 at player
							push the player forwards at speed 0.5
							if {_food} is not set:
								reduce the player's food level by 0.5
								set {_food} to 1
							else:
								clear {_food}
							wait 1 second
						clear {flying.%player%}
						set the player's chestplate to {_armour}
						send "<light red>Your wings grow tired..."
						play sound "entity.enderdragon.flap" with volume 1 and pitch 1 at player
				else:
					set {DRInvincible.%player%} to 1
					if the 1st line of the lore of the player's boots contains "<light red><bold>Slot A - Long Jump":
						push the player forwards at speed 2
					else if the 1st line of the lore of the player's boots contains "<light red><bold>Slot A - Quick Stomp":
						push the player downwards at speed 3
					else if the 1st line of the lore of the player's boots contains "<light red><bold>Slot A - Boost Jump":
						push the player upwards at speed 2.5
					else:
						push the player backwards at speed 0.85
					play sound "entity.blaze.shoot" with volume 0.5 and pitch 1.5 at player
					loop 15 times:
						show smoke on the player
						show smoke on the player
						show snowball break on the player
						show snowball break on the player
						#if the 2nd line of the lore of the player's boots does not contain "<light blue><bold>Slot B - Pass.":
						#	if distance of any entity and the player is more than 1:
						#		if the 2nd line of the lore of the player's boots contains "<light blue><bold>Slot B - Ram.":
						#			push the entity upwards at speed 1
						#			damage the entity by 1
						#		else:
						#			set the player's speed to 0
						wait 1 tick
					set {_slotcheck.%player%} to checkSlots(player,"Light Feet")
					if {_slotcheck.%player%} is 0:
						reduce the player's food level by 0.5
					set {dr.%player%} to 2
					set {DRInvincible.%player%} to 0
					if {quests.%player%::Days of Training} is 3:
						send "<light blue>Combat Instructor: Well done. You get invincibility while you're rolling, but it'll cost hunger every time you roll. Save it for emergencies or else you'll tear through your hunger supply." to the player
						wait 5 seconds
						send "<light blue>Combat Instructor: Now I suppose we're going to have to talk about perks. You'll get these after leveling up or by getting a Promotion, and with one equipped you'll be able to enhance your abilities." to the player
						wait 5 seconds
						make player execute command "/xp 1l"
						send "<light blue>Combat Instructor: Your practice should've earned you an extra level. Go ahead and equip your new HP +5 perk in your perk menu." to the player
						setQuestProgress(player,"Days of Training",4,"Equip the HP +5 perk by using /perks.")

#Dodge Roll Invincibility
on damage:
	if victim is a player:
		if {DRInvincible.%victim%} is 1:
			add 1 to {qptally.%victim%}
			if {qptally.%victim%} is more than 49:
				if {Quickened Pulse.%victim%} is not set:
					make victim execute command "/grantskill 0 Quickened Pulse"
			set {_slotcheck.%victim%} to checkSlots(victim,"Quickened Pulse")
			send "<green><bold>Dodged the attack!" to the victim
			play sound "item.totem.use" with volume 1 and pitch 1 at attacker for victim
			if {combograde.%victim%} is more than 0:
				add damage to {comboscore.%victim%}
			cancel event
			apply speed 1 to the victim for 3 seconds
			if the 1st line of the lore of the victim's boots contains "<light red><bold>Slot A - Quickened Pulse":
				apply slowness 6 to the attacker for 3 seconds
				apply weakness 6 to the attacker for 3 seconds
				apply mining fatigue 6 to the attacker for 3 seconds
				send "<light blue><bold>Quickened Pulse activated!" to the victim
				loop 5 times:
					show smoke on the attacker
					show smoke on the attacker
					show magical critical hit on the attacker
					show magical critical hit on the attacker
				#wait 2 ticks
			else if the 1st line of the lore of the victim's boots contains "<light red><bold>Slot A - Witch Time":
				apply slowness 6 to the attacker for 3 seconds
				apply weakness 6 to the attacker for 3 seconds
				apply mining fatigue 6 to the attacker for 3 seconds
				send "<light purple><bold>Witch Time activated!" to the victim
				set {_cheeky} to a random integer between 1 and 8
				if {_cheeky} is 1:
					send "<light purple><bold>Is that all you've got?" to the attacker
					send "<light purple><bold>Is that all you've got?" to the victim
				else if {_cheeky} is 2:
					send "<light purple><bold>Can't touch me!" to the attacker
					send "<light purple><bold>Can't touch me!" to the victim
				else if {_cheeky} is 3:
					send "<light purple><bold>Too late!" to the attacker
					send "<light purple><bold>Too late!" to the victim
				else if {_cheeky} is 4:
					send "<light purple><bold>So close!" to the attacker
					send "<light purple><bold>So close!" to the victim
				else if {_cheeky} is 5:
					send "<light purple><bold>Almost!" to the attacker
					send "<light purple><bold>Almost!" to the victim
				else if {_cheeky} is 6:
					send "<light purple><bold>Boring!" to the attacker
					send "<light purple><bold>Boring!" to the victim
				else if {_cheeky} is 7:
					send "<light purple><bold>Dreadful!" to the attacker
					send "<light purple><bold>Dreadful!" to the victim
				else if {_cheeky} is 8:
					send "<light purple><bold>Not quite!" to the attacker
					send "<light purple><bold>Not quite!" to the victim
				loop 5 times:
					show smoke on the attacker
					show smoke on the attacker
					show magical critical hit on the attacker
					show magical critical hit on the attacker
				#wait 1 tick
			else if {_slotcheck.%victim%} is 1:
				apply slowness 6 to the attacker for 3 seconds
				apply weakness 6 to the attacker for 3 seconds
				apply mining fatigue 6 to the attacker for 3 seconds
				send "<light blue><bold>Quickened Pulse activated!" to the victim
				loop 5 times:
					show smoke on the attacker
					show smoke on the attacker
					show magical critical hit on the attacker
					show magical critical hit on the attacker
				#wait 2 ticks

command /sandbag:
	description: Spawn an infinite-health sandbag that tells you the amount of damage you just dealt.
	usage: /sandbag
	executable by: players
	trigger:
		spawn 1 armor stand at the player
		set the name of the last spawned entity to "<gold><bold>Sandbag"

command /sbtoggle:
	description: Toggle damaging of Sandbags
	usage: /sbtoggle
	executable by: players
	trigger:
		if {sandbagkillable.%player%} is 0:
			set {sandbagkillable.%player%} to 1
			send "Your attacks will now damage Sandbags."
		else:
			set {sandbagkillable.%player%} to 0
			send "Your attacks will no longer damage Sandbags."
	

#Define new weapon type - Lances:
on load:
	register new shaped recipe for wood shovel named "<bold>Wooden Lance" using air, any planks, air, any planks, stick, any planks, air, stick, air
	register new shaped recipe for stone shovel named "<bold>Stone Lance" using air, cobblestone, air, cobblestone, stick, cobblestone, air, stick, air
	register new shaped recipe for iron shovel named "<bold>Iron Lance" using air, iron ingot, air, iron ingot, stick, iron ingot, air, stick, air
	register new shaped recipe for gold shovel named "<bold>Golden Lance" using air, gold ingot, air, gold ingot, stick, gold ingot, air, stick, air
	register new shaped recipe for diamond shovel named "<bold>Diamond Lance" using air, diamond, air, diamond, stick, diamond, air, stick, air
#Lance damage correction
on right-click:
	if the name of the player's tool contains "<bold>Wooden Lance":
		make the player shoot an arrow with speed 1.2
		set metadata value "JavType" of the last shot projectile to 1
		damage the player's tool by 2
	else if the name of the player's tool contains "<bold>Stone Lance":
		make the player shoot an arrow with speed 1.2
		set metadata value "JavType" of the last shot projectile to 2
		damage the player's tool by 3
	else if the name of the player's tool contains "<bold>Iron Lance":
		make the player shoot an arrow with speed 1.2
		set metadata value "JavType" of the last shot projectile to 3
		damage the player's tool by 4
	else if the name of the player's tool contains "<bold>Golden Lance":
		make the player shoot an arrow with speed 1.2
		set metadata value "JavType" of the last shot projectile to 4
		damage the player's tool by 1
	else if the name of the player's tool contains "<bold>Diamond Lance":
		make the player shoot an arrow with speed 1.2
		set metadata value "JavType" of the last shot projectile to 5
		damage the player's tool by 5
	else if the name of the player's tool contains "Crusader's Lance":
		make the player shoot an arrow with speed 1.2
		set metadata value "JavType" of the last shot projectile to 6

#Magically-Inclined Class Check Function
function checkClass(PLR: player) :: number:
	if {class.%{_PLR}%} is "Mage":
		return 1
	else if {class.%{_PLR}%} is "Sage":
		return 1
	else if {class.%{_PLR}%} is "Sorcerer":
		return 1
	else if {class.%{_PLR}%} is "Mage Knight":
		return 1
	else if {class.%{_PLR}%} is "Strategist":
		return 1
	else if {class.%{_PLR}%} is "Tactician":
		return 1
	else if {class.%{_PLR}%} is "Grandmaster":
		return 1
	else:
		return 0

on damage:
	if projectile exists:
		set {_JAVTYPE} to metadata value "JavType" of projectile
		if {_JAVTYPE} is 1:
			set damage to 1.5
		else if {_JAVTYPE} is 2:
			set damage to 2.5
		else if {_JAVTYPE} is 3:
			set damage to 3.5
		else if {_JAVTYPE} is 4:
			set damage to 4.5
		else if {_JAVTYPE} is 5:
			set damage to 5
		else if {_JAVTYPE} is 6:
			set damage to 3.5
	else if the name of the attacker's tool contains "<bold>Wooden Lance":
		set damage to 2
	else if the name of the attacker's tool contains "<bold>Stone Lance":
		set damage to 3
	else if the name of the attacker's tool contains "<bold>Iron Lance":
		set damage to 4
	else if the name of the attacker's tool contains "<bold>Golden Lance":
		set damage to 3
	else if the name of the attacker's tool contains "<bold>Diamond Lance":
		set damage to 5
	else if the name of the attacker's tool contains "Crusader's Lance":
		set damage to 5

#Skill Definitions Start Here

#Periodicals
every 2 seconds:
	loop all players:
		#Bold Fighter
		if the 3rd line of the lore of the loop-player's tool contains "Bold Fighter":
			loop all entities in radius 10 of the loop-player:
				if loop-entity-2 is alive:
					apply strength 2 to loop-entity-2 for 2 seconds
		#Leggings Skills
		if the lore of the loop-player's leggings contains "Regeneration":
			apply regeneration 2 to loop-player for 2 seconds
		else if the lore of the loop-player's leggings contains "Strength":
			apply strength 2 to loop-player for 2 seconds
		else if the lore of the loop-player's leggings contains "Swiftness":
			apply swiftness 2 to loop-player for 2 seconds
		else if the lore of the loop-player's leggings contains "Resistance":
			apply resistance 2 to loop-player for 2 seconds
		#Chestplate Skills - Stat Increases
		#HP Up
		if the lore of the loop-player's chestplate contains "HP":
			if {skillhpUp.%loop-player%} is not set:
				set {skillhpUp.%loop-player%} to true
				add 10 to {hpbuff.%loop-player%}
				set the loop-player's maximum health to (({hp.%loop-player%} / 2) + ({hpbuff.%loop-player%} / 2))
		else:
			if {skillhpUp.%loop-player%} is true:
				clear {skillhpUp.%loop-player%}
				subtract 10 from {hpbuff.%loop-player%}
				set the loop-player's maximum health to (({hp.%loop-player%} / 2) + ({hpbuff.%loop-player%} / 2))
		#STR Up
		if the lore of the loop-player's chestplate contains "STR":
			if {skillstrUp.%loop-player%} is not set:
				set {skillstrUp.%loop-player%} to true
				add 10 to {strbuff.%loop-player%}
		else:
			if {skillstrUp.%loop-player%} is set:
				clear {skillstrUp.%loop-player%}
				subtract 10 from {strbuff.%loop-player%}
		#SKL Up
		if the lore of the loop-player's chestplate contains "SKL":
			if {skillsklUp.%loop-player%} is not set:
				set {skillsklUp.%loop-player%} to true
				add 20 to {sklbuff.%loop-player%}
		else:
			if {skillsklUp.%loop-player%} is true:
				clear {skillsklUp.%loop-player%}
				subtract 20 from {sklbuff.%loop-player%}
		#SPD Up
		if the lore of the loop-player's chestplate contains "SPD":
			if {skillspdUp.%loop-player%} is not set:
				set {skillspdUp.%loop-player%} to true
				add 10 to {spdbuff.%loop-player%}
		else if {skillspdUp.%loop-player%} is true:
			clear {skillspdUp.%loop-player%}
			subtract 10 from {spdbuff.%loop-player%}
		#MAG Up
		if the lore of the loop-player's chestplate contains "MAG":
			if {skillmagUp.%loop-player%} is not set:
				set {skillmagUp.%loop-player%} to true
				add 10 to {resbuff.%loop-player%}
		else if {skillmagUp.%loop-player%} is true:
			clear {skillmagUp.%loop-player%}
			subtract 10 from {resbuff.%loop-player%}
		#DEF Up
		if the lore of the loop-player's chestplate contains "DEF":
			if {skilldefUp.%loop-player%} is not set:
				set {skilldefUp.%loop-player%} to true
				add 10 to {defbuff.%loop-player%}
		else if {skilldefUp.%loop-player%} is true:
			clear {skilldefUp.%loop-player%}
			subtract 10 from {defbuff.%loop-player%}
		if the 2nd line of the lore of loop-player's tool contains "Brave Blade":
			subtract 15 from {spdbuff.%loop-player%}
			wait 1 second
			add 15 to {spdbuff.%loop-player%}
			

every 2 seconds:
	#Power Within
	loop all players:
		if the 1st line of the lore of loop-player's tool contains "Power Within":
			damage loop-player by 0.5 with fake cause fall
			add 20 to {strbuff.%loop-player%}
			add 20 to {defbuff.%loop-player%}
			add 20 to {spdbuff.%loop-player%}
			add 20 to {sklbuff.%loop-player%}
			add 20 to {resbuff.%loop-player%}
			wait 2 seconds
			subtract 20 from {strbuff.%loop-player%}
			subtract 20 from {defbuff.%loop-player%}
			subtract 20 from {spdbuff.%loop-player%}
			subtract 20 from {sklbuff.%loop-player%}
			subtract 20 from {resbuff.%loop-player%}

#Blows
on damage:
	#Darting Blow
	if 1st line of the lore of attacker's tool contains "Darting Blow":
		if {DBCD.%attacker%} is not true:
			add 30 to {spdbuff.%attacker%}
			set {DBCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {spdbuff.%attacker%}
			send "<bold>Darting Blow wore off!" to the attacker
			wait 10 seconds
			clear {DBCD.%attacker%}
			send "<bold>Darting Blow ready!" to the attacker
	#Armoured Blow
	else if 1st line of the lore of attacker's tool contains "Armoured Blow":
		if {ABCD.%attacker%} is not true:
			add 30 to {defbuff.%attacker%}
			set {ABCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {defbuff.%attacker%}
			send "<bold>Armoured Blow wore off!" to the attacker
			wait 10 seconds
			clear {ABCD.%attacker%}
			send "<bold>Armoured Blow ready!" to the attacker
	#Death Blow
	else if 1st line of the lore of attacker's tool contains "Death Blow":
		if {DBCD.%attacker%} is not true:
			add 30 to {strbuff.%attacker%}
			set {DBCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {strbuff.%attacker%}
			send "<bold>Death Blow wore off!" to the attacker
			wait 10 seconds
			clear {DBCD.%attacker%}
			send "<bold>Death Blow ready!" to the attacker
	#Steady Blow
	else if 1st line of the lore of attacker's tool is "Steady Blow":
		if {SteadyBlow.%attacker%} is not true:
			add 20 to {strbuff.%attacker%}
			add 20 to {defbuff.%attacker%}
			set {SteadyBlow.%attacker%} to true
			wait 7 seconds
			subtract 20 from {strbuff.%attacker%}
			subtract 20 from {defbuff.%attacker%}
			send "<bold>Steady Blow wore off!" to the attacker
			wait 14 seconds
			clear {SteadyBlow.%attacker%}
			send "<bold>Steady Blow ready!" to the attacker
	#Swift Sparrow
	else if 1st line of the lore of attacker's tool contains "Swift Sparrow":
		if {SwiftSparrow.%attacker%} is not true:
			add 20 to {spdbuff.%attacker%}
			add 20 to {strbuff.%attacker%}
			set {SwiftSparrow.%attacker%} to true
			wait 7 seconds
			subtract 20 from {spdbuff.%attacker%}
			subtract 20 from {strbuff.%attacker%}
			send "<bold>Swift Sparrow wore off!" to the attacker
			wait 14 seconds
			clear {SwiftSparrow.%attacker%}
			send "<bold>Swift Sparrow ready!" to the attacker
	#Warding Blow
	if 1st line of the lore of attacker's tool contains "Warding Blow":
		if {DBCD.%attacker%} is not true:
			add 30 to {resbuff.%attacker%}
			set {WBCD.%attacker%} to true
			wait 10 seconds
			subtract 30 from {resbuff.%attacker%}
			send "<bold>Warding Blow wore off!" to the attacker
			wait 10 seconds
			clear {WBCD.%attacker%}
			send "<bold>Warding Blow ready!" to the attacker
	#Mirror Force
	if 1st line of the lore of attacker's tool contains "Mirror Force":
		if {MFCD.%attacker%} is not true:
			add 20 to {resbuff.%attacker%}
			add 20 to {strbuff.%attacker%}
			set {MFCD.%attacker%} to true
			wait 7 seconds
			subtract 20 from {resbuff.%attacker%}
			subtract 20 from {strbuff.%attacker%}
			send "<bold>Mirror Force wore off!" to the attacker
			wait 14 seconds
			clear {DBCD.%attacker%}
			send "<bold>Mirror Force ready!" to the attacker			
	#Stances
	#Steady Stance
	else if the 1st line of the lore of the victim's tool contains "Steady Stance":
		if {steadystance.%victim%} is not set:
			set {steadystance.%victim%} to true
			add 20 to {defbuff.%victim%}
			wait 2 seconds
			subtract 20 from {defbuff.%victim%}
			clear {steadystance.%victim%}
	#Swift Stance
	else if the 1st line of the lore of the victim's tool contains "Swift Stance":
		if {swiftstance.%victim%} is not set:
			add 20 to {spdbuff.%victim%}
			set {swiftstance.%victim%} to true
			wait 2 second
			subtract 20 from {spdbuff.%victim%}
			clear {swiftstance.%victim%}
	#Warding Stance
	else if the 1st line of the lore of the victim's tool contains "Warding Stance":
		if {wardingstance.%victim%} is not set:
			set {wardingstance.%victim%} to true
			add 20 to {resbuff.%victim%}
			wait 2 second
			subtract 20 from {resbuff.%victim%}
			clear {wardingstance.%victim%}
	#Fierce Stance
	else if the 1st line of the lore of the victim's tool contains "Fierce Stance":
		if {fiercestance.%victim%} is not set:
			add 20 to {strbuff.%victim%}
			set {fiercestance.%victim%} to true
			wait 2 second
			subtract 20 from {strbuff.%victim%}
			clear {fiercestance.%victim%}
	#Bonds
	else if the 1st line of the lore of the attacker's tool contains "Bond":
		if {party.%attacker%} is set:
			loop all players in radius 10 of the attacker:
				if {party.%loop-player%} is {party.%attacker%}:
					set {_bondOK} to 1
					exit 1 loop
		if {_bondOK} is 1:
			if the 1st line of the lore of the attacker's tool contains "STR":
				add 40 to {strbuff.%attacker%}
				wait 1 second
				subtract 40 from {strbuff.%attacker%}
			else if the 1st line of the lore of the attacker's tool contains "DEF":
				add 40 to {defbuff.%attacker%}
				wait 1 second
				subtract 40 from {defbuff.%attacker%}
			else if the 1st line of the lore of the attacker's tool contains "SKL":
				add 40 to {sklbuff.%attacker%}
				wait 1 second
				subtract 40 from {sklbuff.%attacker%}
			else if the 1st line of the lore of the attacker's tool contains "MAG":
				add 40 to {resbuff.%attacker%}
				wait 1 second
				subtract 40 from {resbuff.%attacker%}
	#Solos
	else if the 1st line of the lore of the attacker's tool contains "Solo":
		if {party.%attacker%} is not set:
			set {_soloOK} to 1
		else:
			loop all players in radius 10 of the attacker:
				if {party.%loop-player%} is {party.%attacker%}:
					set {_playerFound} to 1
					exit 1 loop
			if {_playerFound} is not 1:
				set {_soloOK} to 1
			if {_soloOK} is 1:
				if the 1st line of the lore of the attacker's tool contains "STR":
					add 40 to {strbuff.%attacker%}
					wait 1 second
					subtract 40 from {strbuff.%attacker%}
				else if the 1st line of the lore of the attacker's tool contains "DEF":
					add 40 to {defbuff.%attacker%}
					wait 1 second
					subtract 40 from {defbuff.%attacker%}
				else if the 1st line of the lore of the attacker's tool contains "SKL":
					add 40 to {sklbuff.%attacker%}
					wait 1 second
					subtract 40 from {sklbuff.%attacker%}
				else if the 1st line of the lore of the attacker's tool contains "MAG":
					add 40 to {resbuff.%attacker%}
					wait 1 second
					subtract 40 from {resbuff.%attacker%}
	#Smokes
	else if the 3rd line of the lore of the attacker's tool contains "Smoke":
		loop all entities in radius 10 of the victim:
			if loop-entity is not the attacker:
				if loop-entity is not the victim:
					if {party.%loop-entity%} is not {party.%attacker%}:
						if the 3rd line of the lore of the attacker's tool contains "STR":
							subtract 10 from {strbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {strbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "SPD":
							subtract 10 from {spdbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {spdbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "SKL":
							subtract 15 from {sklbuff.%loop-entity%}
							wait 1.5 seconds
							add 15 to {sklbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "DEF":
							subtract 10 from {defbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {defbuff.%loop-entity%}
						else if the 3rd line of the lore of the attacker's tool contains "MAG":
							subtract 10 from {resbuff.%loop-entity%}
							wait 1.5 seconds
							add 10 to {resbuff.%loop-entity%}
	#Sabotage Attack
	if the 2nd line of the lore of the attacker's tool contains "Sabotage Attack":
		remove weakness from the victim
		apply weakness 2 to the victim for 5 seconds
	#Sabotage Speed
	else if the 2nd line of the lore of the attacker's tool contains "Sabotage Speed":
		remove slowness from the victim
		apply slowness 2 to the victim for 5 seconds
	#Poison Strike
	else if the 2nd line of the lore of the attacker's tool contains "Poison Strike":
		remove wither from the victim
		apply wither 3 to the victim for 5 seconds
	#Mystic Boost
	else if the 2nd line of the lore of the attacker's tool contains "Mystic Boost":
		heal the attacker by 1.5 hearts
	#Windsweep
	else if the 2nd line of the lore of the attacker's tool contains "Windsweep":
		if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than or equal to ({spd.%victim%} + {spdbuff.%victim%} + 15):
			remove weakness from the victim
			apply weakness 6 to the victim for 3 seconds
	#Boost Skills
	#Flame Boost
	if the 2nd line of the lore of the attacker's tool contains "Flame Boost":
		if (attacker's health - victim's health) is more than or equal to 6:
			add 15 to {strbuff.%attacker%}
			add 15 to {spdbuff.%attacker%}
			add 15 to {sklbuff.%attacker%}
			wait 1.5 seconds
			subtract 15 from {strbuff.%attacker%}
			subtract 15 from {spdbuff.%attacker%}
			subtract 15 from {sklbuff.%attacker%}
	#Earth Boost
	if the 2nd line of the lore of the victim's tool contains "Earth Boost":
		if (victim's health - attacker's health) is more than or equal to 6:
			add 15 to {defbuff.%victim%}
			add 15 to {spdbuff.%victim%}
			add 15 to {resbuff.%victim%}
			wait 1.5 seconds
			subtract 15 from {defbuff.%victim%}
			subtract 15 from {spdbuff.%victim%}
			subtract 15 from {resbuff.%victim%}
	#Aqua Boost
	if the 2nd line of the lore of the attacker's tool contains "Aqua Boost":
		if (attacker's health - victim's health) is more than or equal to 6:
			add 15 to {resbuff.%attacker%}
			add 15 to {spdbuff.%attacker%}
			add 15 to {sklbuff.%attacker%}
			wait 1.5 seconds
			subtract 15 from {resbuff.%attacker%}
			subtract 15 from {spdbuff.%attacker%}
			subtract 15 from {sklbuff.%attacker%}
	#Other
	#Vantage
	if the 2nd line of the lore of the victim's tool contains "Vantage":
		if the victim's health is less than (victim's maximum health * 0.50):
			if the name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
				loop all entities in radius 4 of the victim:
					if loop-entity is attacker:
						set {_cc} to 1
				if {_cc} is 1:
					if victim's tool is not a bow:
						if victim's tool is not a book:
							if victim's tool is not blaze rod:
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
								set {vancooldown.%victim%} to true
								wait 10 seconds
								clear {vancooldown.%victim%}
							else if the 1st line of the lore of the victim's tool contains "Close Counter":
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
								set {vancooldown.%victim%} to true
								wait 10 seconds
								clear {vancooldown.%victim%}
						else if the 1st line of the lore of the victim's tool contains "Close Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
							set {vancooldown.%victim%} to true
							wait 10 seconds
							clear {vancooldown.%victim%}
					else if the 1st line of the lore of the victim's tool contains "Close Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
						set {vancooldown.%victim%} to true
						wait 10 seconds
						clear {vancooldown.%victim%}
				else if victim's tool is bow:
					if victim's tool is book:
						if victim's tool is blaze rod:
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
							set {vancooldown.%victim%} to true
							wait 10 seconds
							clear {vancooldown.%victim%}
						else if the 1st line of the lore of the victim's tool contains "Distant Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
							set {vancooldown.%victim%} to true
							wait 10 seconds
							clear {vancooldown.%victim%}
					else if the 1st line of the lore of the victim's tool contains "Distant Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
						set {vancooldown.%victim%} to true
						wait 10 seconds
						clear {vancooldown.%victim%}
				else if the 1st line of the lore of the victim's tool contains "Distant Counter":
					damage the attacker by damage * 0.50
					push the attacker upwards at speed 0.25
					push the attacker backwards at speed 0.5
					set {vancooldown.%victim%} to true
					wait 10 seconds
					clear {vancooldown.%victim%}

#Skill Effects	
on damage:
	#Bonus Blade
	if the 2nd line of the lore of the attacker's tool contains "Bonus Blade":
		set {_oldSTR} to {strbuff.%attacker%}
		set {_oldDEF} to {defbuff.%attacker%}
		set {_oldSPD} to {spdbuff.%attacker%}
		set {_oldMAG} to {resbuff.%attacker%}
		set {_oldSKL} to {sklbuff.%attacker%}
		set {strbuff.%attacker%} to {strbuff.%attacker%} * 1.5
		set {defbuff.%attacker%} to {defbuff.%attacker%} * 1.5
		set {spdbuff.%attacker%} to {spdbuff.%attacker%} * 1.5
		set {resbuff.%attacker%} to {resbuff.%attacker%} * 1.5
		set {sklbuff.%attacker%} to {sklbuff.%attacker%} * 1.5
		set {_BB.%attacker%} to true
	if the 2nd line of the lore of the victim's tool contains "Bonus Blade":
		set {_oldSTR.%victim%} to {strbuff.%victim%}
		set {_oldDEF.%victim%} to {defbuff.%victim%}
		set {_oldSPD.%victim%} to {spdbuff.%victim%}
		set {_oldres.%victim%} to {resbuff.%victim%}
		set {_oldSKL.%victim%} to {sklbuff.%victim%}
		set {strbuff.%victim%} to {strbuff.%victim%} * 1.5
		set {defbuff.%victim%} to {defbuff.%victim%} * 1.5
		set {spdbuff.%victim%} to {spdbuff.%victim%} * 1.5
		set {resbuff.%victim%} to {resbuff.%victim%} * 1.5
		set {sklbuff.%victim%} to {sklbuff.%victim%} * 1.5
		set {_bb.%victim%} to true
	#Strength & Defence calculations
	set {_magical} to metadata value "SPELL" of projectile
	if the 1st line of the lore of the attacker's tool contains "Sorcery Aura":
		set {_magical} to 1
	if {class.%attacker%} is "Dragonborn":
		set {_magical} to 1
	else if {class.%attacker%} is "Manakete":
		set {_magical} to 1
	else if {class.%attacker%} is "Divine Dragon":
		set {_magical} to 1
	if the name of the attacker's tool is "<gold><bold>Lunar Bow":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if ({res.%victim%} + {resbuff.%victim%}) is less than ({def.%victim%} + {defbuff.%victim%}):
				set {_magical} to 1
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
	if the name of the attacker's tool is "<gold><bold>Light Brand":
		if the 6th line of the lore of the attacker's tool contains "Unique":
			if ({res.%victim%} + {resbuff.%victim%}) is less than ({def.%victim%} + {defbuff.%victim%}):
				set {_magical} to 1
	if {_magical} is 1:
		#Special case for monsters
		if {t_res.%victim%} is not set:
			#Attacker is a leveled monster
			if {t_res.%attacker%} is set:
				set damage to damage + ((({t_res.%attacker%} + {t_resbuff.%attacker%}) / 5)) - ((({res.%victim%} + {resbuff.%victim%}) / 5))
		#Defender is a leveled monster
		else if {t_res.%victim%} is set:
			set damage to damage + ((({res.%attacker%} + {resbuff.%attacker%}) / 5)) - ((({t_res.%victim%} + {t_resbuff.%victim%}) / 5))
		#regular case
		else:
			set damage to damage + ((({res.%attacker%} + {resbuff.%attacker%}) / 5)) - ((({res.%victim%} + {resbuff.%victim%}) / 5))
		#SPD check
		#special case for monsters
		#defender is leveled monster
		if {t_spd.%victim%} is set:
			if (({spd.%attacker%} + {spdbuff.%attacker%}) - ({t_spd.%victim%} + {t_spdbuff.%victim%} )) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#attacker is leveled monster
		else if {t_spd.%attacker%} is set:
			if (({t_spd.%attacker%} + {t_spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#regular case
		else:
			if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than ({spd.%victim%} + {spdbuff.%victim%} + 15):
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
	else if projectile exists:
		#Special case for monsters
		if {t_def.%victim%} is not set:
			#attacker is leveled monster
			if {t_str.%attacker%} is set:
				set damage to damage + (((({t_str.%attacker%} + {t_strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#defender is leveled monster
		else if {t_def.%victim%} is set:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({t_def.%victim%} + {t_defbuff.%victim%}) / 5)))
		#regular case
		else:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#SPD check
		#special case for monsters
		#defender is leveled monster
		if {t_spd.%victim%} is set:
			if (({spd.%attacker%} + {spdbuff.%attacker%}) - ({t_spd.%victim%} + {t_spdbuff.%victim%} )) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#attacker is leveled monster
		else if {t_spd.%attacker%} is set:
			if (({t_spd.%attacker%} + {t_spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) is more than 15:
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#regular case
		else:
			if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than ({spd.%victim%} + {spdbuff.%victim%} + 15):
				set damage to damage * 2
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim	
	else if damage cause is attack:
		#Special case for monsters
		if {t_def.%victim%} is not set:
			#attacker is leveled monster
			if {t_str.%attacker%} is set:
				set damage to damage + (((({t_str.%attacker%} + {t_strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#defender is leveled monster
		else if {t_def.%victim%} is set:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({t_def.%victim%} + {t_defbuff.%victim%}) / 5)))
		#regular case
		else:
			set damage to damage + (((({str.%attacker%} + {strbuff.%attacker%}) / 5)) - ((({def.%victim%} + {defbuff.%victim%}) / 5)))
		#SPD check
		#special case for monsters
		#defender is leveled monster
		if {t_spd.%victim%} is set:
			if (({spd.%attacker%} + {spdbuff.%attacker%}) - ({t_spd.%victim%} + {t_spdbuff.%victim%})) is more than 15:
				set damage to damage * 1.5
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#attacker is leveled monster
		else if {t_spd.%attacker%} is set:
			if (({t_spd.%attacker%} + {t_spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) is more than 15:
				set damage to damage * 1.5
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
		#regular case
		else:
			if ({spd.%attacker%} + {spdbuff.%attacker%}) is more than ({spd.%victim%} + {spdbuff.%victim%} + 15):
				set damage to damage * 1.5
				send "<light green>Outsped the defender and doubled!" to the attacker
				send "<light red>%attacker% outsped you and doubled!" to the victim
	#Refines
	if the 6th line of the lore of the attacker's tool contains "Reinforced":
		set damage to damage + 1.5
	else if the 6th line of the lore of the victim's tool contains "Warding":
		if damage cause is attack:
			set damage to damage - 1.5
		else if projectile exists:
			set damage to damage - 1.5
	else if the 6th line of the lore of the attacker's tool contains "Crushing":
		if damage is more than 7:
			add damage * 0.33 to {crushing.%attacker%}
			if {crushing.%attacker%} is more than 25:
				set {crushing.%attacker%} to 25
	else if the 6th line of the lore of the attacker's tool contains "Stylish":
		add damage / 2 to {comboscore.%attacker%}
	#Focus Loss
	if the 1st line of the lore of the victim's tool contains "Focus":
		if the 1st line of the lore of the victim's tool contains "STR":
			if {focusStr.%victim%} is more than 0:
				subtract {focusStr.%victim%} from {strbuff.%victim%}
				clear {focusStr.%victim%}
		else if the 1st line of the lore of the victim's tool contains "SPD":
			if {focusSPD.%victim%} is more than 0:
				subtract {focusSPD.%victim%} from {spdbuff.%victim%}
				clear {focusSpd.%victim%}
		else if the 1st line of the lore of the victim's tool contains "DEF":
			if {focusDEF.%victim%} is more than 0:
				subtract {focusDEF.%victim%} from {defbuff.%victim%}
				clear {focusDef.%victim%}
		else if the 1st line of the lore of the victim's tool contains "SKL":
			if {focusSKL.%victim%} is more than 0:
				subtract {focusSkl.%victim%} from {sklbuff.%victim%}
				clear {focusSkl.%victim%}
		else if the 1st line of the lore of the victim's tool contains "MAG":
			if {focusMag.%victim%} is more than 0:
				subtract {focusMag.%victim%} from {resbuff.%victim%}
				clear {focusMag.%victim%}
	#Closes
	if damage cause is attack:
		loop monsters in radius 4 of the victim:
			if loop-entity is the attacker:
				set {_CD} to true
		#Close Defence
		if 1st line of the lore of victim's tool contains "Close Defence":
			if {_CD} is true:
				set damage to damage * 0.44
				show magical critical hit on the victim
		#Close Counter
		if the 1st line of the lore of victim's tool contains "Close Counter":
			if {_CD} is true:
				if the name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
					damage the attacker by damage / 2 with fake cause attack
					push the attacker backwards at speed 0.75
					damage the victim's tool by 10
		#Fujin Yumi CC
		else if the name of the victim's tool is "Fujin Yumi":
			if {_CD} is true:
				if the name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
					damage the attacker by damage / 2 with fake cause attack
					push the attacker backwards at speed 0.75
					damage the victim's tool by 10
	#Distants
	else if projectile exists:
		loop entities in radius 4 of the victim:
			if loop-entity is the attacker:
				set {_noDC} to true
		if 1st line of the lore of victim's tool contains "Distant Defence":
			if {_noDC} is not set:
				set damage to damage * 0.44
				show magical critical hit on the victim
		#Distant Counter
		else if 1st line of the lore of the victim's tool contains "Distant Counter":
			if {_noDC} is not set:
				damage the attacker by damage * 0.5
	#Armour Smasher
	if the 1st line of the lore of the attacker's tool contains "Armour Smasher":
		set {_bonusdamage} to helmType(victim)
		add chestType(victim) to {_bonusdamage}
		add legType(victim) to {_bonusdamage}
		add btType(victim) to {_bonusdamage}
		add {_bonusdamage} to damage
	#Warp Strike
	if the 1st line of the lore of victim's tool contains "Warp Strike":
		apply resistance 10 to the victim for 3 seconds
		teleport the victim to the attacker
		damage the attacker by 0.5 hearts
		damage the victim's tool by 1
	#Brash Assault
	if the 2nd line of the lore of the attacker's tool contains "Brash Assault":
		if the attacker's health is less than (attacker's maximum health * 0.5):
			if {BA.%attacker%} is 1:
				set damage to damage * 2
				apply strength 2 to the attacker for 2 seconds
				clear {BA.%attacker%}
			else:
				set {BA.%attacker%} to 1
	#Blades
	#Flashing Blade
	if the 1st line of the lore of the attacker's tool contains "Flashing Blade":
		set {_bonus} to ((({spd.%attacker%} + {spdbuff.%attacker%}) - ({spd.%victim%} + {spdbuff.%victim%})) / 2)
		if {_bonus} is less than 0:
			set {_bonus} to 0
		else if {_bonus} is more than 7:
			set {_bonus} to 7
		set damage to damage + {_bonus}
	#Heavy Blade
	else if the 1st line of the lore of the attacker's tool contains "Heavy Blade":
		set {_bonus} to ((({str.%attacker%} + {strbuff.%attacker%}) - ({str.%victim%} + {strbuff.%victim%})) / 2)
		if {_bonus} is less than 0:
			set {_bonus} to 0
		else if {_bonus} is more than 7:
			set {_bonus} to 7
		set damage to damage + {_bonus}
	#Desperation
	else if the 2nd line of the lore of the attacker's tool contains "Desperation":
		if the attacker's health is less than or equal to (attacker's maximum health * 0.5):
			set damage to damage * 2
			push the victim upwards at speed 0.25
			push the victim backwards at speed 1
			send "<light blue>Desperation active!" to the attacker
	#Riposte
	if the 2nd line of the lore of the victim's tool contains "Riposte":
		if the victim's health is more than (victim's maximum health * 0.8):
			if name of the attacker's tool is not "<gold><bold>Swift-Winds Lance":
				loop all entities in radius 4 of the victim:
					if loop-entity is attacker:
						set {_cc} to 1
				if {_cc} is 1:
					if victim's tool is not a bow:
						if victim's tool is not a book:
							if victim's tool is not blaze rod:
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
							else if the 1st line of the lore of the victim's tool contains "Close Counter":
								damage the attacker by damage * 0.50
								push the attacker upwards at speed 0.25
								push the attacker backwards at speed 0.5
						else if the 1st line of the lore of the victim's tool contains "Close Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
					else if the 1st line of the lore of the victim's tool contains "Close Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
				else if victim's tool is bow:
					if victim's tool is book:
						if victim's tool is blaze rod:
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
						else if the 1st line of the lore of the victim's tool contains "Distant Counter":
							damage the attacker by damage * 0.50
							push the attacker upwards at speed 0.25
							push the attacker backwards at speed 0.5
					else if the 1st line of the lore of the victim's tool contains "Distant Counter":
						damage the attacker by damage * 0.50
						push the attacker upwards at speed 0.25
						push the attacker backwards at speed 0.5
				else if the 1st line of the lore of the victim's tool contains "Distant Counter":
					damage the attacker by damage * 0.50
					push the attacker upwards at speed 0.25
					push the attacker backwards at speed 0.5
	#Brave Blade
	if the 2nd line of the lore of the attacker's tool contains "Brave Blade":
		set damage to damage - 1.5
		set damage to damage * 2
	#Sabotage Defense
	if the 2nd line of the lore of the attacker's tool contains "Sabotage Defense":
		set damage to damage * 1.35
	#Life and Death
	if the 1st line of the lore of attacker's tool contains "Life and Death":
		set damage to damage * 1.5
	if the 1st line of the lore of victim's tool contains "Life and Death":
		set damage to damage * 1.5
	#Fury
	if the 1st line of the lore of attacker's tool contains "Fury":
		set damage to damage + 3
		if the attacker's health is more than 3:
			damage the attacker by 1.5 heart with fake cause attack
		else:
			set the attacker's health to 0.5
	#Drag Back
	if the 4th line of the lore of attacker's tool contains "Drag Back":
		push the attacker backwards at speed 1
		push the victim forwards at speed 1
	#Ethreal Grip
	if the 4th line of the lore of attacker's tool contains "Ethreal Grip":
		set damage to damage * 0.5
		apply resistance 4 to the attacker for 1 second
		push victim (direction from victim to location of attacker) at speed 4
	#Hit and Run
	if the 4th line of the lore of attacker's tool contains "Hit and Run":
		push the attacker backwards at speed 1.5
		damage the attacker's tool by 1
	set {_perk} to checkSlots(victim,"Guard")
	if {_perk} is 1:
		subtract 50 from {sklbuff.%attacker%}
	#Gravity
	if the 3rd line of the lore of the attacker's tool contains "Gravity":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						apply levitation 2 to loop-entity for 3 seconds
	#Fear
	if the 3rd line of the lore of the attacker's tool contains "Fear":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						apply weakness 2 to loop-entity for 3 seconds
	#Restrict
	if the 3rd line of the lore of the attacker's tool contains "Restrict":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						apply slowness 2 to loop-entity for 3 seconds
	#Blowback
	if the 3rd line of the lore of the attacker's tool contains "Blowback":
		loop all entities in radius 7 of the victim:
			if loop-entity is alive:
				if {party.%victim%} is not {party.%attacker%}:
					if loop-entity is not the attacker:
						push the loop-entity upwards at speed 0.75
						push the loop-entity backwards at speed 0.75
	#Astra
	if the 5th line of the lore of attacker's tool contains "Astra":
		set {_trigger} to specialCheck(attacker, 0.65, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage * 3
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Astra was activated!" to attacker
			play 60 (nether portal break with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.5 and pitch 1 at victim for attacker
	#Glimmer
	if the 5th line of the lore of attacker's tool contains "Glimmer":
		set {_trigger} to specialCheck(attacker, 0.765, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage * 1.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Glimmer was activated!" to attacker
			play 30 (nether portal break with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Blazing Light
	if the 5th line of the lore of attacker's tool contains "Blazing Light":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set damage to damage + (damage / 2)
			loop all monsters in radius 7 of the victim:
				if loop-monster is not the attacker:
					send "<gold>%loop-entity% hit for %damage%!" to the attacker
					strike lightning effect at the loop-monster
					damage the loop-entity by damage
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Blazing Light was activated!" to attacker
			play 60 (firework spark with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Growing Light
	if the 5th line of the lore of attacker's tool contains "Growing Light":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set damage to damage + (damage / 4)
			loop all monsters in radius 14 of the victim:
				if loop-monster is not the attacker:
					send "<gold>%loop-entity% hit for %damage%!" to the attacker
					strike lightning effect at the loop-monster
					damage the loop-entity by damage / 2
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Blazing Light was activated!" to attacker
			play 30 (firework spark with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Luna
	if the 5th line of the lore of attacker's tool contains "Luna":
		set {_trigger} to specialCheck(attacker, 0.75, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_lunaDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.5)
			set {_lunaMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			subtract {_lunaMAG} from {resbuff.%victim%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Luna was activated!" to attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Lunar Bow
	if the name of the attacker's tool is "<gold><bold>Lunar Bow":
		if ({res.%victim%} + {resbuff.%victim%}) is less than ({def.%victim%} + {defbuff.%victim%}):
			set {_magical} to 1
		set {_trigger} to specialCheck(attacker, 0.75, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			set {_lunaDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.5)
			set {_lunaMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			subtract {_lunaMAG} from {resbuff.%victim%}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Luna was activated!" to attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Eclipse
	if the name of the attacker's tool is "<gold><bold>Alondite":
		set {_trigger} to specialCheck(attacker, 0.65, 50)
		if {_trigger} is 1:
			set {_eclipse} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_eclipseDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.2)
			set {_eclipseMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.2)
			subtract {_moonbowDEF} from {defbuff.%victim%}
			subtract {_moonbowMAG} from {resbuff.%victim%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Eclipse was activated!" to attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Moonbow
	if the 5th line of the lore of attacker's tool contains "Moonbow":
		set {_trigger} to specialCheck(attacker, 0.85, 80)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set damage to damage + {_bonusdamage}
			set {_moonbowDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.7)
			set {_moonbowMAG} to ({res.%victim%} + {resbuff.%victim%} * 0.7)
			subtract {_moonbowDEF} from {defbuff.%victim%}
			subtract {_moonbowMAG} from {resbuff.%victim%}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Moonbow was activated!" to attacker
			play 20 (cloud with speed 1) at the victim
			play 20 (ender signal with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Sol
	if the 5th line of the lore of attacker's tool contains "<light purple><bold>Special - Sol":
		set {_trigger} to specialCheck(attacker, 0.7, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			heal the attacker by damage * 0.75
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Sol was activated!" to attacker
			play 40 (heart with speed 1) at the attacker
			show 40 (yellow wool break with speed 1) at the attacker
			play sound "entity.player.levelup" with volume 0.5 and pitch 0.75 at victim for attacker
	#Subdue
	if the 5th line of the lore of attacker's tool contains "<light purple><bold>Special - Subdue":
		set {_trigger} to specialCheck(attacker, 0.65, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set damage to damage + 10
			if damage is more than victim's health:
				set damage to victim's health - 0.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Subdue was activated!" to attacker
			play 50 (red wool break with speed 1) at the attacker
			play 50 (obsidian break with speed 1) at the attacker
			play sound "entity.player.levelup" with volume 0.5 and pitch 0.75 at victim for attacker
	#Aether
	if the 5th line of the lore of attacker's tool contains "Aether":
		set {_trigger} to specialCheck(attacker, 0.55, 65)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			set {_lunaDEF} to (({def.%victim%} + {defbuff.%victim%}) * 0.5)
			set {_lunaMAG} to (({res.%victim%} + {resbuff.%victim%}) * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			heal the attacker by damage * 0.75
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Aether was activated!" to attacker
			play 50 (heart with speed 1) at the attacker
			play 50 (yellow wool break with speed 1) at the attacker
			play 50 (cloud with speed 1) at the victim
			play 50 (ender signal with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 1 at victim for attacker
			play sound "entity.player.levelup" with volume 0.5 and pitch 0.75 at victim for attacker
	#Retribution
	if the 5th line of the lore of attacker's tool contains "Retribution":
		set {_trigger} to specialCheck(attacker, 0.675, 70)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (abs(the health of the attacker - the max health of the attacker) * 0.5)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Retribution was activated!" to attacker
			play 80 (red wool break with speed 1) at the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
	#Ignis
	if the 5th line of the lore of attacker's tool contains "Ignis":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({def.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Ignis was activated!" to attacker
			play 60 (mobspawner flames with speed 1) at the victim
			play 60 (lava pop with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Dragon Fang
	if the 5th line of the lore of attacker's tool contains "Dragon Fang":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({str.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Dragon Fang was activated!" to attacker
			play 60 (purple wool break with speed 1) at the victim
			play 60 (dust of netherrack with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Glacies
	if the 5th line of the lore of attacker's tool contains "Glacies":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({res.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<gold>Glacies was activated!" to attacker
			play 60 (ice break with speed 1) at the victim
			play 60 (snowball break with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Rising Wind
	if the 5th line of the lore of attacker's tool contains "Rising Wind":
		set {_trigger} to specialCheck(attacker, 0.7, 50)
		if {_trigger} is 1:
			set {_proc} to true
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			set damage to damage + (({spd.%attacker%} / 2) ^ 0.8)
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			clear {crushing.%attacker%}
			send "<gold>Rising Wind was activated!" to attacker
			play 60 (happy villager with speed 1) at the victim
			play 60 (tall grass break with speed 1) at the victim
			play sound "item.totem.use" with volume 0.5 and pitch 2 at victim for attacker
	#Radiant Aether
	if the name of the attacker's tool contains "<gold><bold>Ragnell":
		set {_trigger} to specialCheck(attacker, 0.6, 65)
		if {_trigger} is 1:
			set {_proc} to true
			set {_bonusDamage} to helmType(victim)
			add chestType(victim) to {_bonusdamage}
			add legType(victim) to {_bonusdamage}
			add btType(victim) to {_bonusdamage}
			set {_bonusdamage} to {_bonusdamage} * 1.5
			set damage to damage + {_bonusdamage}
			set {_lunaDEF} to ({def.%victim%} + {defbuff.%victim%} * 0.5)
			subtract {_lunaDEF} from {defbuff.%victim%}
			if the 2nd line of the lore of the attacker's tool contains "Wrath":
				set damage to damage + 2.5
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			heal the attacker by damage * 0.5
			set {_rng} to a random integer between 1 and 4
			if {_rng} is 1:
				make attacker say "%{skillquote1.%attacker%}%"
			else if {_rng} is 2:
				make attacker say "%{skillquote2.%attacker%}%"
			else if {_rng} is 3:
				make attacker say "%{skillquote3.%attacker%}%"
			else if {_rng} is 4:
				make attacker say "%{skillquote4.%attacker%}%"
			send "<light blue><bold>Radiant Aether was activated!" to attacker
			play 40 (heart with speed 1) at the attacker
			play 40 (yellow wool break with speed 1) at the attacker
			play 40 (cloud with speed 1) at the victim
			play 40 (ender signal with speed 1) at the victim
			play 80 (magic crit with speed 1) at the victim
			play sound "item.totem.use" with volume 0.25 and pitch 0.5 at victim for attacker
			strike lightning effect at the victim
	if {_proc} is true:
		if the 2nd line of the lore of the attacker's tool contains "Eclipse Brace":
			set {_LB} to true
			set {_lunarnull} to (({def.%victim%} + {defbuff.%victim%}) * 0.3)
			set {_lunamagnull} to (({res.%victim%} + {resbuff.%victim%}) * 0.3)
			subtract {_lunarnull} from {defbuff.%victim%}
			subtract {_lunamagnull} from {resbuff.%victim%}
		else if the 2nd line of the lore of the attacker's tool contains "Solar Brace":
			heal the attacker by (damage * 0.5)
		else if the 2nd line of the lore of the attacker's tool contains "Special Spiral":
			add (final damage * 2) to {crushing.%attacker%}
			show mob spawner flames on the attacker
		if the name of the attacker's tool is "<gold><bold>Mystletainn":
			if attacker's health is less than or equal to (attacker's maximum health * 0.75):
				set damage to damage + 4
		else if the name of the attacker's tool is "<gold><bold>Lunar Bow":
			if the 6th line of the lore of the attacker's tool contains "Unique":
				add (({spd.%attacker%} + {spdbuff.%attacker%}) * 0.2) to damage
		else if the name of the attacker's tool is "<gold><bold>Rex Hasta":
			add 5 to damage
	#Pavise
	if the 5th line of the lore of victim's tool contains "Pavise":
		set {_level} to ({skl.%victim%} + {sklbuff.%victim%}) ^ 0.8
		if {_level} is greater than 85:
			set {_level} to 85
		if the 2nd line of the lore of the victim's tool contains "Shield Pulse":
			add 15 to {_level}
		if the 6th line of the lore of the victim's tool contains "Slaying":
			set {_level} to {_level} + 10
		if the 6th line of the lore of the victim's tool contains "Crushing":
			add {crushing.%victim%} to {_level}
		loop all entities in radius 5 of the victim:
			if loop-entity is attacker:
				set {_AT} to 1
				exit 1 loop
		if {_AT} is 1:
			chance of {_level}%:
				set damage to (damage * 0.5) - 1.5
				if the 6th line of the lore of the victim's tool contains "Koenig":
					set damage to damage - 1.5
				if the 1st line of the lore of the victim's tool contains "Shield Pulse":
					set damage to damage - 2.5
				clear {crushing.%attacker%}
				send "<gold>Pavise was activated!" to victim
				play 60 (crit with speed 1) at the victim
				play sound "item.totem.use" with volume 0.5 and pitch 0.5 at victim for attacker
	#Miracle
	if the 5th line of the lore of victim's tool contains "Miracle":
		if (victim's health - damage) <= 0.1:
			set {_level} to ({skl.%victim%} + {sklbuff.%victim%}) ^ 0.5
			if {_level} is greater than 50:
				set {_level} to 50
			if the 2nd line of the lore of the victim's tool contains "Shield Pulse":
				add 15 to {_level}
			if the 6th line of the lore of the victim's tool contains "Slaying":
				set {_level} to {_level} + 10
			chance of {_level}%:
				cancel event
				if the 6th line of the lore of the victim's tool contains "Koenig":
					heal the victim by 1.5
				if the 1st line of the lore of the victim's tool contains "Shield Pulse":
					heal the victim by 2.5
				apply weakness 4 to the attacker for 3 seconds
				push the attacker backwards at speed 1.5
				clear {crushing.%attacker%}
				send "<gold>Miracle was activated!" to victim
				play 80 (crit with speed 1) at the victim
				play 80 (wool break with speed 1) at the victim
				strike lightning effect at the victim
				play sound "item.totem.use" with volume 0.5 and pitch 0.5 at victim for attacker
				play sound "item.totem.use" with volume 0.5 and pitch 1 at victim for victim
	#Aegis
	if the 5th line of the lore of victim's tool contains "Aegis":
		set {_level} to ({skl.%victim%} + {sklbuff.%victim%}) ^ 0.8
		if {_level} is greater than 85:
			set {_level} to 85
		if the 2nd line of the lore of the victim's tool contains "Shield Pulse":
			add 15 to {_level}
		if the 6th line of the lore of the attacker's tool contains "Slaying":
			set {_level} to {_level} + 10
		if the 6th line of the lore of the attacker's tool contains "Crushing":
			add {crushing.%attacker%} to {_level}
		if projectile exists:
			chance of {_level}%:
				clear {crushing.%attacker%}
				set damage to (damage * 0.5) - 1.5
				if the 6th line of lore of the victim's tool contains "Koenig":
					set damage to damage - 1.5
				if the 1st line of the lore of the victim's tool contains "Shield Pulse":
					set damage to damage - 2.5
				send "<gold>Aegis was activated!" to victim
				play 60 (crit with speed 1) at the victim
				play sound "item.totem.use" with volume 0.5 and pitch 0.5 at victim for attacker
	if {_lunaDEF} is set:
		add {_lunaDEF} to {defbuff.%victim%}
	if {_moonbowDEF} is set:
		add {_moonbowDEF} to {defbuff.%victim%}
	if {_moonbowMAG} is set:
		add {_moonbowMAG} to {resbuff.%victim%}
	if {_lunaMAG} is set:
		add {_lunaMAG} to {resbuff.%victim%}
	if {_eclipseDEF} is set:
		add {_eclipseDEF} to {defbuff.%victim%}
	if {_eclipseMAG} is set:
		add {_eclipseMAG} to {resbuff.%victim%}
	if the 6th line of the lore of the attacker's tool contains "Piercing":
		set {_bypassdamage.%attacker%} to damage
		cancel event
		damage the victim by {_bypassdamage.%attacker%} * 0.75 with fake cause potion
		push the victim backwards at speed 0.75
		damage the attacker's tool by 1
	if {_LB} is true:
		add {_lunarnull} to {defbuff.%victim%}
		add {_lunamagnull} to {resbuff.%victim%}
	if {_perk} is 1:
		add 50 to {sklbuff.%attacker%}
	if {t_lvl.%victim%} is set:
		set {_lvl} to {t_lvl.%victim%}
	else:
		set {_lvl} to {lvl.%victim%}
	if damage is less than victim's health:
		send action bar "<bold>%victim% | Level: %{_lvl}% | HP: %victim's health - (final damage / 2)% / %victim's maximum health% | Damage Dealt: %final damage / 2%" to the attacker
	else:
		send action bar "<gold><bold>%victim%<reset><bold> | Level: %{_lvl}% | HP: <gold><bold>0 / %victim's maximum health%<reset><bold> | Damage Dealt: %final damage / 2% | <gold><bold>Overkill: %abs(victim's health - (final damage / 2))%" to the attacker
	if final damage is less than or equal to 0:
		if victim is not item frame:
			cancel event
			if projectile exists:
				delete the projectile
			send "<light red>Your efforts are wasted. %victim%'s defenses are too strong." to the attacker
			send "<light green>%attacker%'s blows were no match for your defenses." to the victim
			play sound "entity.experience_orb.pickup" with volume 3 and pitch 2 at victim for attacker
			play sound "entity.experience_orb.pickup" with volume 3 and pitch 2 at victim for victim
	if the 3rd line of the lore of the attacker's tool contains "Breath of Life":
		loop all players in radius 10 of the attacker:
			if loop-player is not the attacker:
				if {party.%loop-player%} is {party.%attacker%}:
					heal the loop-player by (damage * 0.33)
	else if the 3rd line of the lore of the attacker's tool contains "Savage Blow":
		loop all entities in radius 10 of the victim:
			if loop-entity is not the attacker:
				if loop-entity is not the victim:
					if {party.%loop-entity%} is not {party.%attacker%}:
						damage the loop-entity by (damage * 0.33) with fake cause fall
						if {combograde.%attacker%} is more than 0:
							add (damage * 0.33) to {comboscore.%attacker%}
	if {_bb.%victim%} is true:
		set {strbuff.%victim%} to {_oldstr.%victim%}
		set {defbuff.%victim%} to {_olddef.%victim%}
		set {spdbuff.%victim%} to {_oldspd.%victim%}
		set {resbuff.%victim%} to {_oldres.%victim%}
		set {sklbuff.%victim%} to {_oldskl.%victim%}
	if {_bb.%attacker%} is true:
		set {strbuff.%attacker%} to {_oldstr}
		set {defbuff.%attacker%} to {_olddef}
		set {spdbuff.%attacker%} to {_oldspd}
		set {resbuff.%attacker%} to {_oldmag}
		set {sklbuff.%attacker%} to {_oldskl}
	if final damage is more than {highestdamage.%attacker%}:
		set {highestdamage.%attacker%} to final damage
	if final damage is more than {highestsuffered.%victim%}:
		set {highestsuffered.%victim%} to final damage

on damage:
	#Galeforce
	if the 5th line of the lore of attacker's tool contains "Galeforce":
		set {_level} to ({skl.%attacker%} + {sklbuff.%attacker%}) ^ 0.5
		if {_level} is more than 50:
			set {_level} to 50
		if the 6th line of the lore of the attacker's tool contains "Slaying":
			set {_level} to {_level} + 10
		if the 6th line of the lore of the attacker's tool contains "Crushing":
			add {crushing.%attacker%} to {_level}
		chance of {_level}%:
			apply swiftness 4 to the attacker for 10 seconds
			apply strength 4 to the attacker for 10 seconds
			subtract 100 from {sklbuff.%attacker%}
			loop all entities in radius 10 of the attacker:
				if loop-entity is not item:
					if {party.%loop-entity%} is not {party.%attacker%}:
						apply slowness 4 to the loop-entity for 10 seconds
						apply weakness 4 to the loop-entity for 10 seconds
			if the 6th line of the lore of the attacker's tool contains "Koenig":
				set damage to damage + 2.5
			clear {crushing.%attacker%}
			send "<gold>Galeforce was activated!" to attacker
			show witch spell on the victim
			play sound "entity.zombie_villager.cure" with volume 0.25 and pitch 1.5 at victim for attacker
			wait 30 seconds
			add 100 to {sklbuff.%attacker%}

on right click:
	#Fortify Health
	if the 4th line of the lore of player's tool contains "Fortify Health":
		apply absorption 2 to the player for 75 seconds
		damage player's tool by 75
	#Restore
	if the 4th line of the lore of player's tool contains "Restore":
		apply regeneration 3 to the player for 2 seconds
		damage player's tool by 15
	#Wings of Mercy
	if the 2nd line of the lore of the player's tool contains "Wings of Mercy":
		set {_health} to {support.%player%}'s health
		if {_health} is less than {support.%player%}'s maximum health / 2:
			teleport the player to {support.%player%}
			send "%player% has arrived with Wings of Mercy!" to {support.%player%}
			set {_sklcheck.%player%} to checkSlots(player,"Everlasting Bond")
			if {_sklcheck.%player%} is 1:
				send "Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to the player
				add 15 to {strbuff.%player%}
				add 15 to {defbuff.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%player%}
				subtract 15 from {strbuff.%player%}
		else if {bleedout.%{support.%player%}%} is 1:
			teleport the player to {support.%player%}
			send "%player% has arrived with Wings of Mercy!" to {support.%player%}
			set {_sklcheck.%player%} to checkSlots(player,"Everlasting Bond")
			if {_sklcheck.%player%} is 1:
				send "Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to the player
				add 15 to {strbuff.%player%}
				add 15 to {defbuff.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%player%}
				subtract 15 from {strbuff.%player%}
		else:
			send "<red>HP Threshold not met!" to the player
	#Escape Route
	if the 2nd line of the lore of the player's tool contains "Escape Route":
		if player's health is less than (player's maximum health / 2):
			teleport the player to {support.%player%}
			set {_slot} to checkSlots(player,"Everlasting Bond")
			if {_slot} is 1:
				add 15 to {strbuff.%{support.%player%}%}
				add 15 to {defbuff.%{support.%player%}%}
				send "%player%'s Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to {support.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%{support.%player%}%}
				subtract 15 from {defbuff.%{support.%player%}%}
			send "%player% has arrived with Escape Route!" to {support.%player%}
		else if {bleedout.%player%} is 1:
			teleport the player to {support.%player%}
			set {_slot} to checkSlots(player,"Everlasting Bond")
			if {_slot} is 1:
				add 15 to {strbuff.%{support.%player%}%}
				add 15 to {defbuff.%{support.%player%}%}
				send "%player%'s Everlasting Bond granted you STR/DEF +15 for 10 seconds!" to {support.%player%}
				wait 10 seconds
				subtract 15 from {strbuff.%{support.%player%}%}
				subtract 15 from {defbuff.%{support.%player%}%}
			send "%player% has arrived with Escape Route" to {support.%player%}
		else:
			send "<red>HP Threshold not met!" to the player
	#Stinger
	if the 4th line of the lore of the player's tool contains "Stinger":
		if {stingerCooldown.%player%} is not set:
			play 20 (smoke with speed 0) at player
			play 20 (red wool break with speed 1) at player
			play sound "entity.blaze.shoot" with volume 1 and pitch 1 at player
			push the player forwards at speed 1.5
			set {stingerCooldown.%player%} to 1
			if {combograde.%player%} is more than 0:
				add (1.5 * (7 - {combograde.%player%})) to {comboscore.%player%}
			wait 1 seconds
			send "<light green>Stinger ready!"
			clear {stingerCooldown.%player%}
			#EEEEEEEEEYAAAAAAAAAAAAAAAAAGH
	#Capture
	if the 4th line of the lore of the player's tool contains "Capture":
		if {capture.%player%} is set:
			clear {capture.%player%}
			send "<light green>No longer attempting to Capture foes!"
		else:
			set {capture.%player%} to 1
			send "<light green>Now attempting to Capture foes! Attacks will deal 50%% less damage."

on right click on an entity:
	#Rally Speed
	if the 4th line of the lore of player's tool contains "Rally Speed":
		apply speed 1 to the target for 60 seconds
		damage the player's tool by 10
	#Rally Strength
	else if the 4th line of the lore of player's tool contains "Rally Strength":
		apply strength 1 to the target for 60 seconds
		damage the player's tool by 10
	#Rally Defence
	else if the 4th line of the lore of player's tool contains "Rally Defence":
		apply resistance 1 to the target for 60 seconds
		damage the player's tool by 10
	#Rally Spectrum
	else if the 4th line of the lore of player's tool contains "Rally Spectrum":
		apply resistance 1 to the target for 60 seconds
		apply strength 1 to the target for 60 seconds
		apply speed 1 to the target for 60 seconds
		damage the player's tool by 30	
	#Shove
	else if the 4th line of the lore of player's tool contains "Shove":
		push the target backwards at speed 0.5
		push the target upwards at speed 0.5
		damage the player's tool by 1
		if {combograde.%player%} is more than 0:
			add (2.5 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Smite
	else if the 4th line of the lore of player's tool contains "Smite":
		push the target backwards at speed 1.5
		damage the player's tool by 1
		if {combograde.%player%} is more than 0:
			add (2.5 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Launcher
	else if the 4th line of the lore of player's tool contains "Launcher":
		damage the target by 1
		push the target upwards at speed 1.5
		if player is sneaking:
			push the player upwards at speed 1.25
		damage the player's tool by 1
		if {combograde.%player%} is more than 0:
			add (3 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Ardent Sacrifice
	else if the 4th line of the lore of player's tool contains "Ardent Sacrifice":
		heal the target by 4 hearts
		damage the player by 4 hearts
		make target say "%{healedQuote.%target%}%"
	#Swap
	else if the 4th line of the lore of player's tool contains "Swap":
		teleport the player to the target
		push the player forwards at speed 0.75
		push the target backwards at speed 0.75
	#Stomp
	else if the 4th line of the lore of the player's tool contains "Stomp":
		damage the target by 1 heart
		push the target downwards at speed 3
		if {combograde.%player%} is more than 0:
			add (3 * (7 - {combograde.%player%})) to {comboscore.%player%}
	#Reposition
	else if the 4th line of the lore of the player's tool contains "Reposition":
		teleport the target to the player
		wait 1 tick
		push the target backwards at speed 1.5

#Defiant Skills
on heal:
	if player's health is less than (player's max health * 0.5):
		if the 1st line of the lore of the player's tool contains "Defiant Attack":
			remove strength from the player
			apply strength 4 to the player for 90 seconds
			show mob spawner flames on the player
			set {defiantbuff.%player%} to 1
		if the 1st line of the lore of the player's tool contains "Defiant Speed":
			remove speed from the player
			apply speed 4 to the player for 90 seconds
			show mob spawner flames on the player
			set {defiantbuff.%player%} to 1
		if the 1st line of the lore of the player's tool contains "Defiant Resistance":
			remove resistance from the player
			apply resistance 4 to the player for 90 seconds
			show mob spawner flames on the player
			set {defiantbuff.%player%} to 1
		else if the 2nd line of the lore of the player's tool contains "Wrath":
			set {wrathbuff.%player%} to 1
			show mob spawner flames on the player
	else if {defiantbuff.%player%} is 1:
		remove strength from the player
		remove speed from the player
		remove resistance from the player
		send "<light red>Defiant Skill bonus deactivated!" to the player
		set {defiantbuff.%player%} to 0

on damage of a player:
	if (victim's health - final damage) is less than or equal to (victim's max health * 0.5):
		if {defiantbuff.%victim%} is not 1:
			if the 1st line of the lore of the victim's tool contains "Defiant Attack":
				remove strength from the victim
				apply strength 4 to the victim for 90 seconds
				show mob spawner flames on the victim
				set {defiantbuff.%victim%} to 1
				send "<yellow>Defiant Attack bonus now active!" to the victim
			if the 1st line of the lore of the victim's tool contains "<light red><bold>Slot A - Defiant Speed":
				remove speed from the victim
				apply speed 4 to the victim for 90 seconds
				show mob spawner flames on the victim
				set {defiantbuff.%victim%} to 1
				send "<yellow>Defiant Speed bonus now active!" to the victim
			if the 1st line of the lore of the victim's tool contains "Defiant Resistance":
				remove resistance from the victim
				apply resistance 4 to the victim for 90 seconds
				show mob spawner flames on the victim
				set {defiantbuff.%victim%} to 1
				send "<yellow>Defiant Resistance bonus now active!" to the victim

#Misc
on death:
	#Glory Kill
	if the attacker is a player:
		if the 1st line of the lore of the attacker's chestplate contains "Glory Kills":
			if the attacker's held item is empty:
				remove speed from the attacker
				remove haste from the attacker
				remove resistance from the attacker
				remove strength from the attacker
				wait a tick
				heal the attacker by 1
				increase the attacker's food level by 1
				apply speed 2 to the attacker for 6 seconds
				apply haste 4 to the attacker for 6 seconds
				apply resistance 1 to the attacker for 6 seconds
				apply strength 1 to the attacker for 6 seconds
				send "<red><bold>GLORY KILL!" to the attacker
				play sound "entity.generic.explode" with volume 1 and pitch 1 at victim for attacker
				play 60 (red wool break with speed 2) at the victim

#Experience Sapper
on death of a monster:
	if the 2nd line of the lore of the attacker's tool contains "Experience Sapper":
		set {_xp} to ceil(attacker's level ^ 1.05)
		make console execute command "/xp %{_xp}% %attacker%"
		send "<light green>Gained a bonus %{_xp}% experience!" to the attacker
	#Plenitude
	if the 2nd line of the lore of the attacker's tool contains "Plenitude":
		chance of (50 + ({res.%attacker%} + {resbuff.%attacker%} / 2))%:
			drop 1 steak at the victim
			increase the player's food level by 1
			send "<yellow>Plenitude activated!" to the attacker
	#Despoil
	if the 2nd line of the lore of the attacker's tool contains "Despoil":
		chance of (10 + ({res.%attacker%} + {resbuff.%attacker%} / 4))%:
			give paper named "<light green><bold>Bullion (S)" with lore "<white>Right-click to gain $25!" to the attacker
		chance of (5 + ({res.%attacker%} + {resbuff.%attacker%} / 4))%:
			give paper named "<light green><bold>Bullion (M)" with lore "<white>Right-click to gain $50!" to the attacker
		chance of (1 + ({res.%attacker%} + {resbuff.%attacker%} / 4))%:
			give paper named "<light green><bold>Bullion (L)" with lore "<white>Right-click to gain $75!" to the attacker
		chance of ({res.%attacker%} + {resbuff.%attacker%} / 4)%:
			give paper named "<light green><bold>Bullion (XL)" with lore "<white>Right-click to gain $100!" to the attacker
	#Focus
	if the 1st line of the lore of the attacker's tool contains "Focus":
		if the 1st line of the lore of the attacker's tool contains "STR":
			add 10 to {strbuff.%attacker%}
			add 10 to {focusStr.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "SPD":
			add 10 to {spdbuff.%attacker%}
			add 10 to {focusSpd.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "DEF":
			add 10 to {defbuff.%attacker%}
			add 10 to {focusDef.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "SKL":
			add 10 to {sklbuff.%attacker%}
			add 10 to {focusSkl.%attacker%}
		else if the 1st line of the lore of the attacker's tool contains "MAG":
			add 10 to {resbuff.%attacker%}
			add 10 to {focusMag.%attacker%}
		
#Quick Draw
on right click with bow:
	if the 1st line of the lore of the player's tool contains "Quick Draw":
		if the player has an arrow:
			make the player shoot an arrow at speed 1.6
			remove 1 arrow from the player
			damage the player's tool by 1
			play sound "block.dispenser.launch" with volume 1 and pitch 1 at the player
		else:
			cancel event
		
on damage:
	#Sandbag
	if the name of the victim contains "<gold><bold>Sandbag":
		if {sandbagkillable.%attacker%} is 0:
			send "<light blue>Damage dealt that hit: %final damage%" to the attacker
			cancel event