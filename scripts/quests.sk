#Get the NPC's opinion of the player
#This can change from quests, level, and Holy Blood
#usually holy blood lol
#Returns a float that scales shop prices (clear the value when opening a portable shop)
function getNPCOpinionOfPlayer(CID: number, PLR: player) :: number:
	set {_npcOpinion} to 1.0
	#Holy Blood that this NPC likes
	loop {npc_prefHolyBlood.%{_CID}%::*}:
		#minor blood = +0.2 opinion
		if {holyBlood.%{_PLR}%::%loop-index%} is 1:
			add 0.2 to {_npcOpinion}
		#major blood = +0.5 opinion
		else if {holyBlood.%{_PLR}%::%loop-index%} is 2:
			add 0.5 to {_npcOpinion}
	#Holy Blood that this NPC dislikes
	loop {npc_hatedHolyBlood.%{_CID}%::*}:
		#minor blood = +0.2 opinion
		if {holyBlood.%{_PLR}%::%loop-index%} is 1:
			subtract 0.2 from {_npcOpinion}
		#major blood = +0.5 opinion
		else if {holyBlood.%{_PLR}%::%loop-index%} is 2:
			subtract 0.5 from {_npcOpinion}
	#Small bonus for player level
	set {_lvlbonus} to ({lvl.%{_PLR}%} / 10)
	if {_lvlbonus} is more than 0.5:
		set {_lvlbonus} to 0.5
	add {_lvlbonus} to {_npcOpinion}
	#Extra modifier if NPC is just an asshole
	add {npc_opinionModifier.%{_CID}%} to {_npcOpinion}
	return {_npcOpinion}

#Force-mark as Ally
command /markasally:
	trigger:
		set {DEBUG_MarkAsAlly.%player%} to true
		send formatted "<gold>Right-click the NPC to mark as your ally."

#Banker Mini Quest
command /mq-bankers <number>:
	trigger:
		if arg 1 is 1:
			if {abilities.%player%::Speech} is more than or equal to 20:
				send formatted "<light blue>Banker: So, you've called my bluff. I will open my vaults to you, but only under one condition:"
				wait 3.5 seconds
				send formatted "<light blue>Banker: You must not speak of this to anyone else. If it were to become common knowledge that my services are free to the public, then I would be very quickly overwhelmed with storage requests. It would be an insurmountable effort to appease the masses."
				wait 5 seconds
				send formatted "<run command:/mq-bankers 4><gold>1 - Then I won't say a word."
			else:
				if {sex.%player%} is 1:
					send formatted "<light blue>Banker: I believe the lie belongs to you, sir. These vaults are for the Knights of Ulster only."
				else:
					send formatted "<light blue>Banker: I believe the lie belongs to you, madam. These vaults are for the Knights of Ulster only."
				wait 3 seconds
				if player's money is more than or equal to 55:
					send formatted "<run command:/mq-bankers 2><gold>2 - Would this be enough to change your mind? [55 Gold]" to the player
				else:
					send formatted "<light red>2 - Would this be enough to change your mind? [55 Gold]" to the player
				send formatted "<run command:/mq-bankers 3><gold>3 - I'll just come back later, then." to the player
		else if arg 1 is 2:
			send formatted "<light blue>Banker: Well, then I suppose if we may sweep this under the rug..."
			wait 2.5 seconds
			set {quests.%player%::HIDDEN_Bankers} to 999
			subtract 55 from the player's money
			send formatted "<gold>Paid 55 gold to the banker. Current funds: %player's money%"
			send formatted "<light blue>Banker: Consider my vaults yours. How may I help you, %player's tablist name%<reset><light blue>?"
			wait 4 seconds
			send formatted "<run command:/cvault open><gold>1 - Open my vault." to the player
			send formatted "<run command:/cvault clear><gold>2 - Clear out my vault." to the player	
		else if arg 1 is 3:
			send formatted "<light blue>Banker: If you have not spoken with Alastor already, I have overheard that he is currently searching for new members to add to his army. Perhaps he may hazard a chance on you?"
		else if arg 1 is 4:
			set {quests.%player%::HIDDEN_Bankers} to 999
			send formatted "<light blue>Banker: You have my gratitude. Now, how may I assist you today, %player's tablist name%<reset><light blue>?"
			wait 4 seconds
			send formatted "<run command:/cvault open><gold>1 - Open my vault." to the player
			send formatted "<run command:/cvault clear><gold>2 - Clear out my vault." to the player		
			
#See all NPCs, even ones belonging to other players.
command /showallnpcs:
	trigger:
		loop all players:
			if citizen id of the loop-player is set:
				reveal the loop-player to the player

#Forcefully exit any conversation at any time.
command /exitconvo:
	trigger:
		clear {inConvo.%player%}
		send formatted "Left conversation."
				
#Suppresses warnings on citizen spawning as server starts.
on load:
	set {blockCitizenCreateDuringStartup} to true
	wait 3 seconds
	clear {blockCitizenCreateDuringStartup}
	broadcast "<light green>Server fully operational!"

#Block On Citizen Create event to reload the main Citizens plugin without errors.	
command /DEBUG-BlockCitizenEvent:
	executable by: console, players
	trigger:
		set {blockCitizenCreateDuringStartup} to true
		wait 5 seconds
		clear {blockCitizenCreateDuringStartup}
		broadcast "<light green>Server fully operational!"
		
#Add an NPC to the global NPC index.
command /addNPCToGlobalIndex [<text="addToIndex">]:
	trigger:
		if arg 1 is "addToIndex":
			send "<light blue>Right-click the NPC to add to the global index."
			set {addNPCToGlobalIndex.%player%} to true
		else:
			clear {globalNPCS::%arg 1%}
			send "<light blue>Removed the global index entry for %arg 1%."
			
command /listNPCSForPlayer:
	trigger:
		loop {NPCsFor.%player%::*}:
			send "%loop-index% - %loop-value%" to the player
			
command /printNPCList:
	trigger:
		loop {globalNPCS::*}:
			send formatted "%loop-index% - %loop-value%"
			
#Periodical Checks for distance-based cutscene triggers.
every 4 ticks:
	loop all players:
		#Brave New World Kris Greeting
		if {class.%loop-player%} is not "Freelancer":
			if {quests.%loop-player%::BNW_QUEST_00} is 1:
				loop all players in radius 8 of the loop-player:
					set {_npcYCoord} to loop-player-2's y-coordinate
					set {_playerYCoord} to loop-player-1's y-coordinate
					if the name of the loop-player-2 contains "Irankata":
						if {_npcYCoord} - {_playerYCoord} is less than 1:
							if {NPCsFor.%loop-player-1%::Kris} is not set:
								set {NPCsFor.%loop-player-1%::Kris} to loop-player-2
								set {quests.%loop-player-1%::BNW_QUEST_00} to 2
								make loop-player-1 execute command "/quests-BraveNewWorld 0"
								exit 1 loop
				
#Ultra-Jank Workaround for NPC Cloning (why can nobody figure this out)
on citizen create:
	if {blockCitizenCreateDuringStartup} is not set:
		while {_name} is not set:
			wait 1 tick
			set {_name} to the name of the event-citizen
		#broadcast "A citizen was spawned."
		loop all players in radius 20 of the event-citizen:
			#No clue if this fixes anything
			if citizen id of the loop-player is not set:
				#Check for local players in cutscenes
				if {inCutscene.%loop-player%} is true:
					#Interrupt thread to set the type of NPC (summon,follower,cutscene)
					if {interruptNPCWizardry.%loop-player%} is not set:
						#Prevent assigning NPCS to players already watching a cutscene
						if {NPCsFor.%loop-player%::C_%{_name}%} is not set:
							#Prevent Cutscene NPCS from being targeted (won't assign NPCS in cutscenes to another player)
							if {isCutsceneNPC.%event-citizen%} is not true:
								#broadcast "Generated cutscene NPC of %name of event-citizen% for %loop-player%."
								set {NPCsFor.%loop-player%::C_%{_name}%} to the event-citizen
								set {isCutsceneNPC.%event-citizen%} to true
								#Patch for wandering NPC's / NPC's generated at specific coordinates
								set {_NPCAssignedToPlayer} to true
								exit 1 loop
					#Highjack thread
					else:
						#Create Summoner Summon
						if {summoningMonster.%loop-player%} is set:
							while {_name} is not set:	
								play 10 (purple wool break with speed 1) at the event-citizen
								add 1 to {_ticks}
								set {_name} to the name of the event-citizen
								wait 1 tick
							broadcast {_name}
							#broadcast "Generated cutscene NPC of %name of event-citizen% for %loop-player%."
							set {NPCsFor.%loop-player%::C_%{_name}%} to the event-citizen
							set {NPCsFor.%loop-player%.ID::C_%{_name}%} to citizen id of the event-citizen
							clear {summoningMonster.%loop-player%}
							exit 1 loop
						#Add the NPC as a follower
						else if {recruitNPCAsFollower.%loop-player%} is true:
							set {NPCsFor.%loop-player%::F_%{_name}%} to the event-citizen
							set {isFollowerUnit.%{NPCsFor.%loop-player%::F_%{_name}%}%} to loop-player
							exit 1 loop
		if {_NPCAssignedToPlayer} is not set:
			wait 20	ticks
			broadcast "no player found, testing for wandering NPC owner..."
			#broadcast "A citizen was spawned."
			loop all players in radius 20 of the event-citizen:
				#No clue if this fixes anything
				if citizen id of the loop-player is not set:
					#Check for local players in cutscenes
					if {inCutscene.%loop-player%} is true:
						#Interrupt thread to set the type of NPC (summon,follower,cutscene)
						if {interruptNPCWizardry.%loop-player%} is not set:
							#Prevent assigning NPCS to players already watching a cutscene
							if {NPCsFor.%loop-player%::C_%{_name}%} is not set:
								#Prevent Cutscene NPCS from being targeted (won't assign NPCS in cutscenes to another player)
								if {isCutsceneNPC.%event-citizen%} is not true:
									#broadcast "Generated cutscene NPC of %name of event-citizen% for %loop-player%."
									set {NPCsFor.%loop-player%::C_%{_name}%} to the event-citizen
									set {isCutsceneNPC.%event-citizen%} to true
									#Patch for wandering NPC's / NPC's generated at specific coordinates
									set {_NPCAssignedToPlayer} to true
									exit 1 loop
						#Highjack thread
						else:
							#Create Summoner Summon
							if {summoningMonster.%loop-player%} is set:
								while {_name} is not set:	
									play 10 (purple wool break with speed 1) at the event-citizen
									add 1 to {_ticks}
									set {_name} to the name of the event-citizen
									wait 1 tick
								broadcast {_name}
								#broadcast "Generated cutscene NPC of %name of event-citizen% for %loop-player%."
								set {NPCsFor.%loop-player%::C_%{_name}%} to the event-citizen
								set {NPCsFor.%loop-player%.ID::C_%{_name}%} to citizen id of the event-citizen
								clear {summoningMonster.%loop-player%}
								exit 1 loop
							#Add the NPC as a follower
							else if {recruitNPCAsFollower.%loop-player%} is true:
								set {NPCsFor.%loop-player%::F_%{_name}%} to the event-citizen
								set {isFollowerUnit.%{NPCsFor.%loop-player%::F_%{_name}%}%} to loop-player
								exit 1 loop		
command /clearCutsceneNPCS:
	trigger:
		loop {NPCsFor.%player%::*}:
			if loop-index contains "C_":
				make console execute command "/npc sel %citizen id of loop-value%"
				make console execute command "/npc remove"
				clear {NPCsFor.%player%::%loop-index%}
			else:
				reveal loop-value to the player

#To take control of NPCs during cutscenes, they need to be written to the player's data while we manipulate them.
#This is convinent, as we can also use this to hide the copied NPCs from everyone else by using a loop.
#Cutscene NPC's are denoted inside the array using "C_".
#Original NPC's should NEVER be moved or destroyed. Create a copy of the NPC and add it to the player's NPC array with a C_ prefix.
#NPC's must be copied via their Citizens ID (separate from what is returned by Skript).
#Rember to clear cutscene NPC stats if they're to be used as followers.
command /npctests <number>:
	executable by: players, console
	usage:/npctest [Test ID]
	trigger:
		set {inConvo.%player%} to true
		if arg 1 is 1:
			send formatted "<light yellow>Test NPC: I should dissapear, then reappear after a few seconds. This should only affect you."
			wait 3 seconds
			hide {NPCsFor.%player%::Test NPC} from the player
			send formatted "<light yellow>Test NPC: Woosh!"
			wait 3 seconds
			reveal {NPCsFor.%player%::Test NPC} to the player
			send formatted "<light yellow>Test NPC: ...And now I'm back! Ta-da!"
			wait 1.5 seconds
			send formatted "<light yellow>Test NPC: What would you like me to do next?"
			wait 1.5 seconds
			clear {inConvo.%player%}
			send formatted "<run command:/npctests 1><gold>1 - NPC Visibility Test" to the player
			send formatted "<run command:/npctests 2><gold>2 - Cutscene Test" to the player
			send formatted "<run command:/npctests 3><gold>3 - Follower Test" to the player
			send formatted "<run command:/npctests 5><gold>4 - Broadcast ID" to the player
			send formatted "<run command:/npctests 4><gold>5 - Exit" to the player
		else if arg 1 is 2:
			send "dummy"
			#set {inCutscene.%player%} to true
			#send formatted "<light yellow>Test NPC: Okay. I'm going to run to the center of this area."
			#set {_origin} to location of {NPCsFor.%player%::Test NPC}
			#hide {NPCsFor.%player%::Test NPC} from the player
			#make console execute command "/npc sel %citizen id of {NPCsFor.%player%::Test NPC}%"
			#make console execute command "/npc copy"
			#while {NPCsFor.%player%::C_Test NPC} is not set:
			#	add 1 to {_blockInfLoop}
			#	wait 1 tick
			#	send formatted "<blue>Waiting for NPC..." to the player
			#	if {_blockInfLoop} is more than 60:
			#		send formatted "<red>Failed to retrieve NPC!" to the player
			#		exit 1 loop
			#send formatted "<light blue>NPC Found! Beginning cutscene." to the player
			#set {NPCsFor.%player%::C_Test NPC} to the last created citizen
			#loop all players:
			#	if loop-player is not the player:
			#		hide {NPCsFor.%player%::C_Test NPC} from the loop-player
			#make {NPCsFor.%player%::C_Test NPC} move to location at 789, 72, -1720 in world "GenOne" at speed 1
			#while {NPCsFor.%player%::C_Test NPC} is navigating:
			#	wait 1 tick
			#send formatted "<light yellow>Test NPC: Now, I'll equip a sword."
			#wait 2 seconds
			#set {NPCsFor.%player%::C_Test NPC}'s tool to 1 iron sword
			#send formatted "<light yellow>Test NPC: Now I'll put it away."
			#wait 2 seconds
			#set {NPCsFor.%player%::C_Test NPC}'s tool to air
			#wait 2 seconds
			#send formatted "<light yellow>Test NPC: Now I'll head back to my starting location, and sit down for a little while."
			#wait 2 seconds
			#make {NPCsFor.%player%::C_Test NPC} move to {_origin} at speed 0.5
			#while {NPCsFor.%player%::C_Test NPC} is navigating:
			#	wait 1 tick
			#make {NPCsFor.%player%::C_Test NPC} sit
			#wait 2 seconds
			#send formatted "<light yellow>Test NPC: I think I'll stand up now."
			#wait 1 seconds
			#make {NPCsFor.%player%::C_Test NPC} stop sitting
			#reveal {NPCsFor.%player%::Test NPC} to the player
			#send formatted "<light yellow>Test NPC: What did you think? Did you like it?"
			#destroy {NPCsFor.%player%::C_Test NPC}
			#clear {NPCsFor.%player%::C_Test NPC}
			#clear {inConvo.%player%}
			#send formatted "<light yellow>Test NPC: What would you like me to do next?"
			#wait 1.5 seconds
			#clear {inCutscene.%player%}
			#clear {inConvo.%player%}
			#send formatted "<run command:/npctests 1><gold>1 - NPC Visibility Test" to the player
			#send formatted "<run command:/npctests 2><gold>2 - Cutscene Test" to the player
			#send formatted "<run command:/npctests 3><gold>3 - Follower Test" to the player
			#send formatted "<run command:/npctests 5><gold>4 - Broadcast ID" to the player
			#send formatted "<run command:/npctests 4><gold>5 - Exit" to the player
		else if arg 1 is 5:
			send formatted "<light yellow>Test NPC: My NPC ID is %citizen id of {NPCsFor.%player%::Test NPC}%."
			send formatted "<light yellow>Test NPC: What would you like me to do next?"
			wait 1.5 seconds
			clear {inConvo.%player%}
			send formatted "<run command:/npctests 1><gold>1 - NPC Visibility Test" to the player
			send formatted "<run command:/npctests 2><gold>2 - Cutscene Test" to the player
			send formatted "<run command:/npctests 3><gold>3 - Follower Test" to the player
			send formatted "<run command:/npctests 5><gold>4 - Broadcast ID" to the player
			send formatted "<run command:/npctests 4><gold>5 - Exit" to the player
		else if arg 1 is 4:
			clear {NPCsFor.%player%::*}
			clear {inConvo.%player%}
			send formatted "<light yellow>Test NPC: Okay then. See you later!"

on chat:
	if {prolouge_edit_name.%player%} is true:
		clear {prolouge_edit_name.%player%}
		set the player's display name to the chat message
		set the player's tablist name to the chat message
		cancel event
		make player execute command "/quests-prolouge 3"
			
#NPC Chats
on right click on an entity:
	if citizen id of the target is set:
		set {lastNPCOpinion.%player%} to getNPCOpinionOfPlayer(citizen id of the target,player)
		clear {inConvo.%player%}
		if {DEBUG_MarkAsAlly.%player%} is set:
			set {alliedPlayer.%target%} to the player
			clear {DEBUG_MarkAsAlly.%player%}
			send formatted "<gold>Marked %target% as your ally." to the player
		else if {addNPCToGlobalIndex.%player%} is set:
			set {globalNPCS::%target's name%} to citizen id of the target
			send formatted "<light blue>Added %target's name% to the global NPC index." to the player
			clear {addNPCToGlobalIndex.%player%}
		if {race.%player%} is "Dragonborn":
			if {holyBlood.%player%::D'al Versain} is 1:
				if {abilities.%player%::Speech} is less than 20:
					if checkSlots(player,"Renown") is 1:
						set {_convoOK} to true
					else:
						set {_convoOK} to false
						send formatted "<cyan>%target's name%: <white>Leave, lizard. Your kind aren't welcome here." to the player
				else:
					set {_convoOK} to true
			else:
				set {_convoOK} to true
		else:
			set {_convoOK} to true
			clear {traits.%player%::Half-Breed}
		if {_convoOK} is true:
			#Stuttgardt (Prolouge)
			if the name of the target contains "Stuttgardt":
				set {inConvo.%player%} to true
				npcChat(player,"<light yellow>During conversations, gold-coloured text indicates a clickable dialouge option.")
				npcChat(player,"<light yellow>Click one of the gold-coloured options to talk with other characters and interact with the world.")
				wait 3 seconds
				clear {inConvo.%player%}
				send "<run command:/quests-prolouge 1><gold>1 - Hello." to the player
			#Merriam
			if the name of the target contains "Merriam":
				if {quests.%player%::Breaking the Ice} is 999:
					send "<light blue>Merriam: <white>Oh, hey %player's tablist name%. Did you need something?" to the player
					wait 1.75 seconds
					send "<run command:/spells 1><gold>1 - Could you help me bind some spells to this wand? [Open Spell Equip Menu]" to the player
			#Julius
			if the name of the target contains "Julius":
				send "<light blue>Julius: <white>Hm?" to the player
				wait 1 seconds
				send "<run command:/convos-julius 1><gold>1 - What is this place?" to the player
				send "<run command:/convos-julius 2><gold>2 - Could you show me where House Ulster is?" to the player
				send "<run command:/convos-julius 7><gold>3 - What do you do around here?" to the player
			#Azelle (Gatekeeper)
			#if the name of the target contains "Azelle":
			#Alastor
			#else if the name of the target contains "Alastor":
			#Gordon (Search and Destroy)
			#else if the name of the target is "Gordon":
			#Jagen
			#else if the name of the target is "Jagen":
			#Seros Fisherman
			else if the name of the target is "Seros Fisherman":
				if {sex.%player%} is 1:
					send formatted "<light blue>Seros Fisherman: ...Mmm? What is it that ye need, lad?" to the player
				else:
					send formatted "<light blue>Seros Fisherman: ...Mmm? What is it that ye need, lass?" to the player
				wait 1.3 seconds
				send formatted "<run command:/serosfisherman 0><gold>1 - I'd like to hire your boat." to the player
			#Grann Guard Captain
			else if the name of the target is "Grann Captain":
				if {quests.%player%::Legend in the Making} is 2:
					send formatted "<light blue>Grann Captain: <white>Unless you're here to help defend Grann, you need to evacuate from the city." to the player
					wait 3 seconds
					send formatted "<run command:/quests-LegendInTheMaking 3><gold>1 - I'm %player's tablist name%<reset><run command:/quests-LegendInTheMaking 3><gold>. Alastor sent me here to aid your defense." to the player
				else if {quests.%player%::Proving Grounds} is 3:
					send formatted "<light blue>Grann Captain: <white>Fine day, today. What do you need?" to the player
					wait 3 seconds
					send formatted "<run command:/Quests-WalkInTheWoods 30><gold>1 - I've been sent by Alastor for a status report." to the player
				else:
					set {_RNG} to a random integer from 1 to 3
					if {_RNG} is 1:
						send "<light blue>Grann Captain: <white>Watch yourself on these roads. All manner of monsters roam around these parts." to the player
					else if {_RNG} is 2:
						send "<light blue>Grann Captain: <white>Mind your manners inside the city, or else you might find yourself without a sword arm." to the player
					else if {_RNG} is 3:
						send "<light blue>Grann Captain: <white>These streets get crowded quickly, so no lollygagging." to the player
			#Innkeepers
			else if the name of the target contains "Innkeeper":
				if {holyBlood.%player%::D'al Versain} is not 1:
					send formatted "<light blue>Innkeeper: Welcome. We've got food, drink, and beds." to the player
					wait 1.3 seconds
					send formatted "<run command:/tavernshop><gold>1 - What do you have for sale?" to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					send formatted "<light blue>Innkeeper: Try not to make a mess, lizard." to the player
					wait 1.3 seconds
					send formatted "<run command:/tavernshop><gold>1 - What do you have for sale?" to the player					
			#Enchanters
			else if the name of the target contains "Enchanter":
				if {holyBlood.%player%::D'al Versain} is not 1:
					send formatted "<light blue>Enchanter: In need of some enchantments? Perhaps I could be persuaded to help." to the player
					wait 1.3 seconds
					send formatted "<run command:/enchantershop 1><gold>1 - What do you have for sale?" to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					send formatted "<light blue>Enchanter: Oh, wonderful. The walking monstrosity wants to buy my enchantments." to the player
					wait 1.3 seconds
					send formatted "<run command:/enchantershop 1><gold>1 - What do you have for sale?" to the player
			#Bankers
			else if the name of the target contains "Banker":
				if {holyBlood.%player%::D'al Versain} is not 1:
					if {quests.%player%::HIDDEN_Bankers} is not 999:
						send formatted "<light blue>Banker: Forgive me, but I must inform you that this bank is open only for members of Cinder's army." to the player
						wait 4.5 seconds
						if {abilities.%player%::Speech} is more than 30:
							send formatted "<run command:/mq-bankers 1><gold>1 - I think we both know that isn't true. [Speech >= 30]" to the player
						else:
							send formatted "<light red>1 - I think we both know that isn't true. [Speech >= 30]" to the player
						if player's money is more than or equal to 55:
							send formatted "<run command:/mq-bankers 2><gold>2 - Would this be enough to change your mind? [55 Gold]" to the player
						else:
							send formatted "<light red>2 - Would this be enough to change your mind? [55 Gold]" to the player
						send formatted "<run command:/mq-bankers 3><gold>3 - I'll just come back later, then." to the player
					else:
						send formatted "<light blue>Banker: Welcome back, %player's tablist name%<reset><light blue>. How may I serve you?" to the player
						wait 2 seconds
						send formatted "<run command:/cvault open><gold>1 - Open my vault." to the player
						send formatted "<run command:/cvault clear><gold>2 - Clear out my vault." to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					if {quests.%player%::HIDDEN_Bankers} is not 999:
						send formatted "<light blue>Banker: I will not have a disgrace such as yourself touching my vaults. Begone." to the player
						wait 4.5 seconds
						if {abilities.%player%::Speech} is more than 30:
							send formatted "<run command:/mq-bankers 1><gold>1 - That's not a good way to treat a potential customer. [Speech >= 50]" to the player
						else:
							send formatted "<light red>1 - That's not a good way to treat a potential customer. [Speech >= 50]" to the player
						if player's money is more than or equal to 130:
							send formatted "<run command:/mq-bankers 2><gold>2 - Would this be enough to change your mind? [130 Gold]" to the player
						else:
							send formatted "<light red>2 - Would this be enough to change your mind? [130 Gold]" to the player
						send formatted "<run command:/mq-bankers 3><gold>3 - I'll just come back later, then." to the player
					else:
						send formatted "<light blue>Banker: I still can't believe I took your offer." to the player
						wait 2 seconds
						send formatted "<run command:/cvault open><gold>1 - Open my vault." to the player
						send formatted "<run command:/cvault clear><gold>2 - Clear out my vault." to the player	
			#Serosita Barkeep
			else if the name of the target is "Serosita Barkeep":
				set {_rng} to random integer from 1 to 3
				if {_rng} is 1:
					send formatted "<light blue>Serosita Barkeep: Welcome to the Serosita Brewery. What can I get for you?" to the player
				else if {_rng} is 2:
					send formatted "<light blue>Serosita Barkeep: We've got food and drink here for you. What would you like?" to the player
				else:
					if {sex.%player%} is 1:
						send formatted "<light blue>Serosita Barkeep: Welcome to the Serosita Brewery, home of the Flametounge Brandy. What would you like off the menu, sir?" to the player
					else:
						send formatted "<light blue>Serosita Barkeep: Welcome to the Serosita Brewery, home of the Flametounge Brandy. What would you like off the menu, madam?" to the player
				wait 1.3 seconds
				send formatted "<run command:/serositabarkeep><gold>1 - What do you have for sale?" to the player
			#Cinder
			#else if the name of the target contains "Cinder":
			#Combat Instructor
			if the name of the target contains "Combat Trainer":
				#if {quests.%player%::Breaking the Ice} is 1:
				#	set {inConvo.%player%} to true
				#	send formatted "<light blue>%target's name%: So, you finally made it. Good, we can start your training right now." to the player
				#	wait 3.5 seconds
				#	send formatted "<light blue>%target's name%: Let's start with the basics, then. Go ahead and let me see how you handle a weapon. Strike me." to the player
				#	clear {inConvo.%player%}
				#	setQuestProgress(player,"Breaking the Ice",2,"Strike the combat instructor with your weapon.")
				#else:
				send formatted "<light blue>%target's name%: Need some training?" to the player
				wait 1 seconds
				send formatted "<run command:/train swords><gold>1 - I need training in swords. (200G, unlocks Sword Specialist perk.)" to the player
				send formatted "<run command:/train axes><gold>2 - I need training in axes. (200G, unlocks Axe Specialist perk.)" to the player
				send formatted "<run command:/train lances><gold>3 - I need training in lances. (200G, unlocks Lance Specialist perk.)" to the player
				send formatted "<run command:/train bows><gold>4 - I need training in bows. (200G, unlocks Bow Specialist perk.)" to the player
			#Test NPC
			else if the name of the target contains "Test NPC":
				if {quests.%player%::NpcVis Test} is not set:
					npcChat(player,"<light yellow>Test NPC: I am a test NPC. What would you like me to do?")
					wait 3 seconds
					send formatted "<run command:/npctests 1><gold>1 - NPC Visibility Test" to the player
					send formatted "<run command:/npctests 2><gold>2 - Cutscene Test" to the player
					send formatted "<run command:/npctests 3><gold>3 - Follower Test" to the player
					send formatted "<run command:/npctests 5><gold>4 - Broadcast ID" to the player
					set {NPCsFor.%player%::Test NPC} to the target
			#Craftsman Joe
			else if the name of the target contains "Craftsman Joe":
				send "<light blue>Craftsman Joe: <white>Howdy!" to the player
				wait 2 seconds
				send formatted "<run command:/convos-craftsmanjoe 1 0><gold>1 - What are you doing here?" to the player
				send formatted "<run command:/convos-craftsmanjoe 2 0><gold>2 - What is this place?" to the player
				send formatted "<run command:/convos-craftsmanjoe 3 0><gold>3 - Is your name really Craftsman Joe?" to the player
			#
			#Blacksmiths
			if the name of the target contains "Blacksmith":
				if {holyBlood.%player%::D'al Versain} is not 1:
					set {_rng} to a random integer from 1 to 3
					if {_rng} is 1:
						send formatted "<light cyan>%target's name%: <white>Need something forged?" to the player
					else if {_rng} is 2:
						send formatted "<light cyan>%target's name%: <white>I've got the best steel in the whole land." to the player
					else if {_rng} is 3:
						send formatted "<light cyan>%target's name%: <white>Blades, picks... Whatever you need, I can forge it." to the player
					wait 1 seconds
					send formatted "<run command:/bs-shop><gold>1 - What do you have for sale?" to the player
					send formatted "<run command:/buyToolSkills 0 1><gold>2 - I need some modifications. (Repair/Upgrade Equipment)" to the player
					send formatted "<run command:/oreconverter 0><gold>3 - I'd like to use your ore converter." to the player
				else if {abilities.%player%::Speech} is more than 20:
					send formatted "<light cyan>%target's name%: <white>Try to keep this hidden. I don't want the rest of the townspeople to know I'm bartering with you." to the player
					wait 1 seconds
					send formatted "<run command:/bs-shop><gold>1 - What do you have for sale?" to the player
					send formatted "<run command:/buyToolSkills 0 1><gold>2 - I need some modifications. (Repair/Upgrade Equipment)" to the player
					send formatted "<run command:/oreconverter 0><gold>3 - I'd like to use your ore converter." to the player
			#
			#Jerome
			if the name of the target is "Jerome":
				if {quests.%player%::An Apprentice's Plight} is not set:
					send formatted "<light blue>%target's name%: I can't talk right now. I'm trying to not get fired from the smithy." to the player
					wait 1.3 seconds
					send formatted "<run command:/conv-aap 1><gold>1 - What's wrong?" to the player
					send formatted "<run command:/conv-aap 2><gold>2 - Sorry. I'll leave you to it." to the player
				else if {quests.%player%::An Apprentice's Plight} is 1:
					send formatted "<light blue>Jerome: You're back! Have you gotten those materials for me?" to the player
					wait 1.3 seconds
					send formatted "<run command:/conv-aap 5><gold>1 - Not yet..." to the player
					if player has 14 iron ingot:
						if player has 11 stick:
							send formatted "<run command:/conv-aap 6><gold>2 - Here you go. (Give 14 iron ingots & 11 sticks)" to the player
				else:
					send formatted "<light blue>Jerome: Hey. You need me to fix a tool for you?" to the player
					wait 1.33 seconds
					send formatted "<run command:/jeromefix><gold>1 - I need some repairs." to the player
					send formatted "<run command:/conv-aap 7><gold>2 - Still have your job?" to the player
			#Weaponsmiths
			if the name of the target contains "Weaponsmith":
				if {holyBlood.%player%::D'al Versain} is not 1:
					set {_rng} to a random integer from 1 to 3
					if {_rng} is 1:
						send formatted "<light cyan>%target's name%: <white>What can I fix you with?" to the player
					else if {_rng} is 2:
						send formatted "<light cyan>%target's name%: <white>If you're wantin' good steel, you've come to the right place." to the player
					else if {_rng} is 3:
						send formatted "<light cyan>%target's name%: <white>Dont buy that junk from the other shops. I've got what you're really wantin'." to the player
					wait 1 seconds
					send formatted "<run command:/weaponshop><gold>1 - What do you have for sale?" to the player
					send formatted "<run command:/oreconverter 0><gold>2 - I'd like to use your ore converter." to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					set {_rng} to a random integer from 1 to 3
					if {_rng} is 1:
						send formatted "<light cyan>%target's name%: <white>You lizards should stay with your own kind." to the player
					else if {_rng} is 2:
						send formatted "<light cyan>%target's name%: <white>I carry premium products. That means I want real gold, not whatever crap you lizards trade with." to the player
					else if {_rng} is 3:
						send formatted "<light cyan>%target's name%: <white>Buy whatever you think your scaly rear can afford." to the player
					wait 1 seconds
					send formatted "<run command:/weaponshop><gold>1 - What do you have for sale?" to the player
					send formatted "<run command:/oreconverter 0><gold>2 - I'd like to use your ore converter." to the player
			#
			#Traders
			if the name of the target contains "Trader":
				if {holyBlood.%player%::D'al Versain} is not 1:
					if {abilities.%player%::Speech} is more than 55:
						set {_rng} to a random integer from 1 to 3
						if {_rng} is 1:
							send formatted "<light cyan>%target's name%: <white>Welcome back, friend. I've got some special deals for you today." to the player
						else if {_rng} is 2:
							send formatted "<light cyan>%target's name%: <white>You look like someone with good taste. I'll let you pick something out of the more... premium items." to the player
						else:
							send formatted "<light cyan>%target's name%: <white>Someone as personable as yourself deserves special treatment. I've got a private selection of items for you today." to the player
					else:
						set {_rng} to a random integer from 1 to 3
						if {_rng} is 1:
							send formatted "<light cyan>%target's name%: Greetings, traveller! Interested in any of my fine goods?" to the player
						else if {_rng} is 2:
							send formatted "<light cyan>%target's name%: Welcome, welcome, %player's name%<reset><light cyan>! Everything you see in my shop is for sale!" to the player
						else:
							send formatted "<light cyan>%target's name%: My prices are the lowest in all of Silgrund! You won't find a better deal elsewhere!" to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					set {_rng} to a random integer from 1 to 3
					if {_rng} is 1:
						send formatted "<light cyan>%target's name%: Don't cause trouble, lizard." to the player
					else if {_rng} is 2:
						send formatted "<light cyan>%target's name%: Just buy whatever it is you need and get out." to the player
					else:
						send formatted "<light cyan>%target's name%: Don't overstay your welcome." to the player
				wait 1.33 seconds
				send formatted "<run command:/tradershop><gold>1 - What do you have for sale?" to the player
				send formatted "<run command:/peddlershop><gold>2 - I'd like to sell some things." to the player
			#
			#Curates
			if the name of the target contains "Curate":
				set {_rng} to a random integer from 1 to 3
				if {_rng} is 1:
					send formatted "<light cyan>%target's name%: Greetings, traveller! Interested in any of my fine goods?" to the player
				else if {_rng} is 2:
					send formatted "<light cyan>%target's name%: Welcome, welcome, %player's name%<reset><light cyan>! Everything you see in my shop is for sale!" to the player
				else:
					send formatted "<light cyan>%target's name%: My prices are the lowest in all of Silgrund! You won't find a better deal elsewhere!" to the player
				wait 1.33 seconds
				send formatted "<run command:/curateshop><gold>1 - What do you have for sale?" to the player
				send formatted "<run command:/curateheal><gold>2 - I need some healing [%(player's maximum health - player's health) * 2% Gold]." to the player
			#
			#Jewelers
			if the name of the target contains "Jeweler":
				if {holyBlood.%player%::D'al Versain} is not 1:
					set {_rng} to a random integer from 1 to 3
					if {_rng} is 1:
						send formatted "<light cyan>%target's name%: I've got a collection of beautiful trinkets for sale." to the player
					else if {_rng} is 2:
						send formatted "<light cyan>%target's name%: Don't let other merchants fool you, these wares are truly exceptional." to the player
					else:
						send formatted "<light cyan>%target's name%: Magical rings and amulets for sale... if you've got the coin, of course." to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					set {_rng} to a random integer from 1 to 3
					if {_rng} is 1:
						send formatted "<light cyan>%target's name%: Promise me you won't eat these." to the player
					else if {_rng} is 2:
						send formatted "<light cyan>%target's name%: Having trouble stocking your horde, dragon?" to the player
					else:
						send formatted "<light cyan>%target's name%: I suppose if you have the coin, then I can't turn you down." to the player
				wait 1.33 seconds
				send formatted "<run command:/jewelershop><gold>1 - What do you have for sale?" to the player
				send formatted "<run command:/peddlershop><gold>2 - I'd like to sell some things." to the player				
			#
			#Todd Howard
			if the name of the target contains "Todd":
				set {_rng} to a random integer from 1 to 3
				if {_rng} is 1:
					send formatted "<light cyan>Todd: <white>Welcome to the shop. My prices are fair, and the wares just work." to the player
				else if {_rng} is 2:
					send formatted "<light cyan>Todd: <white>All of my products have four times the utility of my competitors." to the player
				else:
					send formatted "<light cyan>Todd: <white>If you see it in my shop, you can buy it. Everything's for sale, and it all just works." to the player
				wait 1.33 seconds
				send formatted "<run command:/toddshop><gold>1 - What do you have for sale?" to the player
			#
			#Guards
			if the name of the target contains "Guard":
				set {_rng} to a random integer from 1 to 25
				if {_rng} is 1:
					send formatted "<light cyan>%target's name%: <white>Staying safe out there?" to the player
				else if {_rng} is 2:
					send formatted "<light cyan>%target's name%: <white>The city's safe with us." to the player
				else if {_rng} is 3:
					send formatted "<light cyan>%target's name%: <white>Tired, traveller? Stop by the inn and rest." to the player
				else if {_rng} is 4:
					send formatted "<light cyan>%target's name%: <white>These monsters are becoming a real menace." to the player
				else if {_rng} is 5:
					send formatted "<light cyan>%target's name%: <white>These old swords they give us are dull as a rock. Wish I had the money to have it reforged..." to the player
				else if {_rng} is 6:
					send formatted "<light cyan>%target's name%: <white>How are you, traveller?" to the player
				else if {_rng} is 7:
					send formatted "<light cyan>%target's name%: <white>Not much happens around here. Except for the occasional zombie horde." to the player
				else if {_rng} is 8:
					send formatted "<light cyan>%target's name%: <white>Have you heard the tale of the Great Heroes? Legends say they wielded weapons capable of shattering the earth in one strike. Wish I could see one with my own eyes." to the player
				else if {_rng} is 9:
					send formatted "<light cyan>%target's name%: <white>This ratty old armour is barely better than a carpet. By the Greats, I wish they'd give us something better to save us from these monstrosities running amok." to the player
				else if {_rng} is 10:
					set {_armour} to getHelmet(player)
					add getChestplate(player) to {_armour}
					add getLeggings(player) to {_armour}
					add getBoots(player) to {_armour}
					if {_armour} is 20:
						send formatted "<light cyan>%target's name%: <white>By the Greats, that's one expensive set of armour." to the player
					else if {_armour} is 16:
						send formatted "<light cyan>%target's name%: <white>Favor the gold armour, eh? 'Heard it's good for enchanting, but it's a bit more than what my pay can afford." to the player
					else if {_armour} is 12:
						send formatted "<light cyan>%target's name%: <white>Nothing wrong with a sturdy set of iron armour. Good metal 'll keep you safe from just about everything." to the player
					else if {_armour} is 8: 
						send formatted "<light cyan>%target's name%: <white>That chainmail is decent enough, but it's not going to save you when it counts." to the player
					else if {_armour} is 4:
						send formatted "<light cyan>%target's name%: <white>Leather armour? By the Greats, buy yourself some real armour." to the player
					else if {_armour} is not set:
						send formatted "<light cyan>%target's name%: <white>No armour? Are you mad?! Find a blacksmith and buy some armour before you get yourself killed." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>All that mixed armor might protect you, but it's certainly not fashionable." to the player
				else if {_rng} is 11:
					if nbt of player's tool contains "sacredTreasureID:":
						send formatted "<light cyan>%target's name%: <white>By the Greats, that isn't... It is, isn't it? The legendary %name of the player's tool%<reset><white>!? I never thought I'd see the day..." to the player
					else if nbt of player's tool contains "BakedRefine:":
						send formatted "<light cyan>%target's name%: <white>Now that, is one expensive weapon." to the player
					else if the player's tool is not air:
						send formatted "<light cyan>%target's name%: That tool is fair enough, but it'll never compare to the Sacred Treasures of the Great Heroes. Now those... they're real weapons." to the player
					else:
						send formatted "<light cyan>%target's name%: If you're in need of a weapon, you can never go wrong with an iron sword. A good blade like that will carve through crowds like butter."
				else if {_rng} is 12:
					if {abilities.%player%::Traditional Weapons} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Funny, I just heard a tale of a legendary knight with your name at the tavern. Think that's a coincidence?" to the player
					else if {abilities.%player%::Traditional Weapons} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>Not many can say they're as capable a warrior as you. Cinder might have to consider recruiting you to teach his knights." to the player
					else if {abilities.%player%::Traditional Weapons} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>You've got the makings of a good fighter. Keep practicing with your weapons." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>Your swordsmanship needs some practice. I get nervous watching you flail around with that thing." to the player
				else if {_rng} is 13:
					if {abilities.%player%::Magical Weapons} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Are you lord Cinder's disciple? Only he can cast magics as powerful as yours." to the player
					else if {abilities.%player%::Magical Weapons} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>That is some strong magic you wield. Where did you have to go to learn it?" to the player
					else if {abilities.%player%::Magical Weapons} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>So you can cast a few spells now? Just don't go setting the place on fire." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>Not one for the magical weapons, eh? Me neither. Always afraid I'd set my hair ablaze..." to the player
				else if {_rng} is 14:
					if {abilities.%player%::Guns} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Just... don't cause any trouble, alright? I don't want to see what you can do with that... thing." to the player
					else if {abilities.%player%::Guns} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>Keep that Elridian magic at home, you don't need to scare the locals by carrying it around." to the player
					else if {abilities.%player%::Guns} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>You a traveller from Elrid? It's very unusual for someone to know how to work those kinds of weapons." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>Hey, have you seen any of those fancy Elridian weapons yet? I've heard they're even stronger than lord Cinder's magic." to the player
				else if {_rng} is 15:
					if {abilities.%player%::Lockpicking} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Keep your hands to yourself. I know a thief when I see one." to the player
					else if {abilities.%player%::Lockpicking} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>Got to keep my eye out for thieves, we've had plenty of break-ins recently." to the player
					else if {abilities.%player%::Lockpicking} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>You run a locksmithing buisness? Only lawful reason I can think of to be training to pick locks..." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>The only thing I hate more than those Elridians are thieves. Glad to see you're not either of them." to the player
				else if {_rng} is 16:
					if {abilities.%player%::Medicine} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Your skills with medicine are second to none. Think you could show me a thing or two?" to the player
					else if {abilities.%player%::Medicine} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>I've heard you can make some fine healing potions. Mind brewing a few for the guardsmen?" to the player
					else if {abilities.%player%::Medicine} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>Always good to study medicine for a bit. It's been a lifesaver for me, at least." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>Not one for the herbs and such, are you? I'd at least keep a few around if I were you." to the player
				else if {_rng} is 17:
					if {abilities.%player%::Repair} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Ha! I bet you never have to spend gold on fixing your equipment." to the player
					else if {abilities.%player%::Repair} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>Hey, I've got this old sword that needs fixing. Think you could get me a discount?" to the player
					else if {abilities.%player%::Repair} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>You're not bad at that repairing gig. Even a little experience will save you a lot of gold." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>That's one thing I don't understand, why weaponsmithing and repairing aren't tied together." to the player
				else if {_rng} is 18:
					if {abilities.%player%::Fabrication} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Seems as though you have weapon fabrication completely figured out. There doesn't seem to be anything you can't make." to the player
					else if {abilities.%player%::Fabrication} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>You a blacksmith yourself? You have some mighty skills with the forge." to the player
					else if {abilities.%player%::Fabrication} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>Learning the smithing trade, eh? Smart." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>You should look into doing your own weapon upgrades. It'll save your life, and your gold!" to the player
				else if {_rng} is 19:
					if {abilities.%player%::Enchanting} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>You're a real wizard, you know that? I've never seen enchantments so strong in my life." to the player
					else if {abilities.%player%::Enchanting} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>Think you could enchant my sword? It's gotten so dull, it hardly cuts butter." to the player
					else if {abilities.%player%::Enchanting} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>Been taking classes at House Silgrid? Their enchanting lessons are certainly useful." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>That enchanting buisness looks useful, but I'm too busy to study it myself." to the player
				else if {_rng} is 20:
					if {abilities.%player%::Speech} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Ha! I bet you never have to spend gold on fixing your equipment." to the player
					else if {abilities.%player%::Speech} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>Hey, I've got this old sword that needs fixing. Think you could get me a discount?" to the player
					else if {abilities.%player%::Speech} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>You're not bad at that repairing gig. Even a little experience will save you a lot of gold." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>That's one thing I don't understand, why weaponsmithing and repairing aren't tied together." to the player
				else if {_rng} is 21:
					if {abilities.%player%::Barter} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>You definitely know how to haggle a shopkeeper. That poor trader starts shaking whenever you're in town." to the player
					else if {abilities.%player%::Barter} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>You're not bad at bargaining. Bet you barely have to pay anything for steaks." to the player
					else if {abilities.%player%::Barter} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>Seems you can cut yourself a nice discount with those bartering skills." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>Not one for bartering, are you? Me neither, never really felt good asking for a discount." to the player
				else if {_rng} is 22:
					if {abilities.%player%::Survival} is more than or equal to 100:
						send formatted "<light cyan>%target's name%: <white>Has lord Cinder hired you to look for new lands? I've never seen someone with such survival skills." to the player
					else if {abilities.%player%::Survival} is more than or equal to 70:
						send formatted "<light cyan>%target's name%: <white>You handle yourself well out in the field. I'll have to ask for tips when I have the time." to the player
					else if {abilities.%player%::Survival} is more than or equal to 40:
						send formatted "<light cyan>%target's name%: <white>You're not bad working the mines. People like you just always seem to find that little extra bit of ore." to the player
					else:
						send formatted "<light cyan>%target's name%: <white>I'm not really sure what "survival" really means about your skills. Everyone I've asked says something different." to the player
				else if {_rng} is 23:
					send formatted "<light cyan>%target's name%: <white>Hope that I can have legends told about me in the future..." to the player
				else if {_rng} is 24:
					send formatted "<light cyan>%target's name%: <white>The Sacred Treasures used to be quite the tourist attraction at House Silgrid. That is, until they went missing one day." to the player
				else if {_rng} is 25:
					send formatted "<light cyan>%target's name%: <white>May the Greats watch over your battles, traveller." to the player
			#
			#Hunters
			else if the name of the target contains "Hunter":
				if {quests.%player%::Monster Hunt} is not set:
					send formatted "<light blue>Up for some monster hunting? These lands could always use a bit of thinning out." to the player
					wait 2 seconds
					send formatted "<run command:/starthunt><gold>1 - Sure. Let's get going." to the player
				else if {quests.%player%::Monster Hunt} is 999:
					send formatted "<light blue>Back for another round, eh? No problem for me. These monsters are due for a killin'." to the player
					wait 2 seconds
					send formatted "<run command:/starthunt><gold>1 - I'm ready for another hunt." to the player
			#Farmer
			else if the name of the target contains "Farmer":
				if {holyBlood.%player%::D'al Versain} is not 1:
					set {_rng} to a random integer from 0 to 2
					if {_rng} is 0:
						send formatted "<light cyan>Farmer: <white>Somethin' about the weather here is just perfect for growin' crops..." to the player
					else if {_rng} is 1:
						send formatted "<light cyan>Farmer: <white>Need somethin'?" to the player
					else if {_rng} is 2:
						send formatted "<light cyan>Farmer: <white>Been workin' these fields my whole life." to the player
					wait 1.33 seconds
					send formatted "<run command:/farmershop><gold>1 - What do you have for sale?" to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					send formatted "<light cyan>Farmer: <white>Tell your friends to stay away from my crops." to the player
					send formatted "<run command:/farmershop><gold>1 - What do you have for sale?" to the player
			#Butcher
			else if the name of the target contains "Butcher":
				if {holyBlood.%player%::D'al Versain} is not 1:
					set {_rng} to a random integer from 0 to 2
					if {_rng} is 0:
						send formatted "<light cyan>Butcher: <white>Needin' some meat?" to the player
					else if {_rng} is 1:
						send formatted "<light cyan>Butcher: <white>Got some good cuts for ya, if you've got the gold." to the player
					else if {_rng} is 2:
						send formatted "<light cyan>Butcher: <white>Treat yourself to somethin' nice for dinner, and pick up a cut of meat." to the player
					wait 1.33 seconds
					send formatted "<run command:/butchershop><gold>1 - What do you have for sale?" to the player
				else if {abilities.%player%::Speech} is more than or equal to 40:
					set {_rng} to a random integer from 0 to 1
					if {_rng} is 0:
						send formatted "<light cyan>Butcher: <white>Turnin' to me for meat, eh? Hunting too scary for you?" to the player
					else if {_rng} is 1:
						send formatted "<light cyan>Butcher: <white>You lizards should be hunting your own food. You're lucky I'm selling to you." to the player
					wait 1.33 seconds
					send formatted "<run command:/butchershop><gold>1 - What do you have for sale?" to the player					
			#Anna
			else if the name of the target contains "Anna":
				if {quests.%player%::Setting up Shop} is not set:
					send formatted "<light cyan>Anna: <white>Hey, are you busy? I've got something I need done." to the player
					wait 1.3 seconds
					send formatted "<run command:/quests-SettingUpShop 0><gold>1 - What do you need?" to the player

#Complimentary armour for joining the Knights of Ulster.
on right-click on armor stand:
	if the name of the target is "<light blue>Knights of Ulster Armour":
		cancel event
		if {UlsterComplimentaryArmourCooldown.%player%} is not set:
			if {quests.%player%::Breaking the Ice} is more than or equal to 1:
				give 1 chainmail helmet named "<light blue>Knights of Ulster Helmet" with lore "<white>Standard-issue armour given to the Knights of Ulster.", "<white>It's better than nothing." to the player
				give 1 chainmail chestplate named "<light blue>Knights of Ulster Chestplate" with lore "<white>Standard-issue armour given to the Knights of Ulster.", "<white>It's better than nothing." to the player
				give 1 chainmail leggings named "<light blue>Knights of Ulster Leggings" with lore "<white>Standard-issue armour given to the Knights of Ulster.", "<white>It's better than nothing." to the player		
				give 1 chainmail boots named "<light blue>Knights of Ulster Helmet" with lore "<white>Standard-issue armour given to the Knights of Ulster.", "<white>It's better than nothing." to the player
				give 1 stone sword named "<light blue>Decomissioned Blade" with lore "<white>An older design of the swords wielded by the Knights of Ulster.", "<white>It hasn't been kept in very good condition..." to the player
				give 1 bow named "<light blue>Infantry Bow" with lore "<white>A completely average bow.", "<white>There's really not a whole lot to say about it." to the player
				give 16 arrow to the player
				play sound "entity.player.levelup" with volume 0.7 and pitch 1.5 at the player for the player
				set {UlsterComplimentaryArmourCooldown.%player%} to 4
				send formatted "<gold>Knights of Ulster equipment obtained!" to the player
			else:
				send formatted "<light red>This is for the Knights of Ulster. Alastor would have my head on a pike if I took this..." to the player
			
command /ucac:
	trigger:
		clear {UlsterComplimentaryArmourCooldown.%player%}
		send formatted "<light green>You can re-obtain the KoU equipment."
		
command /exitcutscene:
	trigger:
		loop {NPCsFor.%player%::*}:
			if loop-index contains "C_":
				make console execute command "/npc sel %citizen id of loop-value%"
				make console execute command "/npc remove"
				clear {NPCsFor.%player%::%loop-index%}
			else:
				reveal loop-value to the player
		send "<light blue>Forcefully left cutscene."
		clear {inCutscene.%player%}
		
command /convos-craftsmanjoe <number> <number>:
	trigger:
		if arg 1 is 0:
			send formatted "<light blue>Craftsman Joe: <white>Alrighty then! Go ahead and ask away!"
			wait 2 seconds
			send formatted "<run command:/convos-craftsmanjoe 1 0><gold>1 - What are you doing here?" to the player
			send formatted "<run command:/convos-craftsmanjoe 2 0><gold>2 - What is this place?" to the player
			send formatted "<run command:/convos-craftsmanjoe 3 0><gold>3 - Is your name really Craftsman Joe?" to the player
		else if arg 1 is 1:
			if arg 2 is 0:
				send formatted "<light blue>Craftsman Joe: <white>Well, I'm building houses. That's about it!"
				wait 2 seconds
				send formatted "<run command:/convos-craftsmanjoe 1 1><gold>1 - What kind of houses?"
				send formatted "<run command:/convos-craftsmanjoe 0 0><gold>2 - I'd like to ask you some other questions."
			else if arg 2 is 1:
				send formatted "<light blue>Craftsman Joe: <white>I don't really know! We were about to start building some plain wooden houses when some foreigners came by and showed us a different building method." to the player
				wait 5 seconds
				send formatted "<light blue>Craftsman Joe: <white>I don't understand it all just yet, but it's supposed to be more durable than what we were doing before." to the player
				wait 3 seconds
				send formatted "<run command:/convos-craftsmanjoe 1 2><gold>1 - Are those foreigners still here?"
				send formatted "<run command:/convos-craftsmanjoe 0 0><gold>2 - I'd like to ask you some other questions."
			else if arg 2 is 2:
				send formatted "<light blue>Craftsman Joe: <white>They left a while ago, but I think I 'member them running off towards Grann." to the player
				wait 4 seconds
				send formatted "<run command:/convos-craftsmanjoe 0 0><gold>1 - I'd like to ask you some other questions."
		else if arg 1 is 2:
			if arg 2 is 0:
				send formatted "<light blue>Craftsman Joe: <white>I don't know what the name will be just yet, but I'm thinkin' this place will turn out to be a big trading hub. Kinda like Grann!"
				wait 5 seconds
				send formatted "<light blue>Craftsman Joe: <white>We've got some traders already set up down in the plaza, but we still need to make some stalls and other stuff."
				wait 3 seconds
				send formatted "<run command:/convos-craftsmanjoe 0 0><gold>1 - I'd like to ask you some other questions."
		else if arg 1 is 3:
			if arg 2 is 0:
				send formatted "<light blue>Craftsman Joe: <white>It depends on who you're askin'. The name my mother gave me was Johnathan Craft, but my buddies thought "Craftsman Joe" had a nice ring to it."
				wait 5 seconds
				send formatted "<light blue>Craftsman Joe: <white>It's not too bad. It gives people a pretty darn good impression of who I am, so it saves me some trouble of havin' to explain what I do."
				wait 5 seconds
				send formatted "<light blue>Craftsman Joe: <white>...Wait here just a minute, how'd you already know about my nickname?"
				wait 4 seconds
				send formatted "<run command:/convos-craftsmanjoe 3 1><gold>1 - I uh...heard it from someone else."
				send formatted "<run command:/convos-craftsmanjoe 3 2><gold>2 - Do you not see people's names floating above their heads, or is that just me?"
			else if arg 2 is 1:
				send formatted "<light blue>Craftsman Joe: <white>Oh. That makes lots more sense. Sorry for puttin' you on the spot like that."
				wait 3.5 seconds
				send formatted "<light blue>Craftsman Joe: <white>Is there anythin' else you wanted to talk about?"
				wait 2 seconds
				send formatted "<run command:/convos-craftsmanjoe 1 0><gold>1 - What are you doing here?" to the player
				send formatted "<run command:/convos-craftsmanjoe 2 0><gold>2 - What is this place?" to the player
				send formatted "<run command:/convos-craftsmanjoe 3 0><gold>3 - Is your name really Craftsman Joe?" to the player
			else if arg 2 is 2:
				send formatted "<light blue>Craftsman Joe: <white>Can't say I do. No offense partner, but I think the local cleric is down by the farm if you're needin' some help." to the player
				wait 5 seconds
				send formatted "<run command:/convos-craftsmanjoe 0 0><gold>1 - I'd like to ask you some other questions."
		
command /purgeNPCSForPlayer [<text="NULL">]:
	trigger:
		if arg 1 is "NULL":
			clear {NPCsFor.%player%::*}
			send "purged all npcs for %player%"
		else:
			clear {NPCsFor.%player%::%arg 1%}
			send "removed %arg 1% from %player%'s npc list"	

command /checkQuestProgress <number> <text>:
	trigger:
		if arg 2 is "Search and Destroy":
			if {quests.%player%::Search and Destroy} is less than arg 1:
				set {_blockMove} to true
			else if {quests.%player%::Search and Destroy} is not set:
				set {_blockMove} to true
			if {_blockMove} is true:
				send "<light red>A fell magic prevents you from delving further into the dungeon..." to the player
				#teleport the player to location at 832, 56, -470 in world "GenOne"
			
command /WarnOnQuestAreaEntry <text>:
	trigger:
		if arg 1 is "GileadsBase":
			if {quests.%player%::Piercing Through Darkness} is not 999:
				set {_warnOnEntry} to true
			else if {lvl.%player%} is less than 90:
				set {_warnOnEntry} to true
			if {_warnOnEntry} is true:
				send "<italics>A rush of fear engulfs you as the eerily pristine doors glide open with naught but a whisper." to the player
				wait 4 seconds
				send "<italics>What lies beyond these doors may be beyond your abilities... Though one can never be sure without trying." to the player
			else:
				send "<light blue>Merriam: <white>Take a look at that... Obsidian all the way through." to the player
				wait 4 seconds
				send "<light blue>Merriam: <white>This has to be Gilead's base. Stay safe, %player's tablist name%, and find that portal!" to the player
			
#Periodicals
every minecraft day:
	loop all players:
		#Refresh KoU equipment
		if {UlsterComplimentaryArmourCooldown.%loop-player%} is set:
			subtract 1 from {UlsterComplimentaryArmourCooldown.%loop-player%}
			if {UlsterComplimentaryArmourCooldown.%loop-player%} is less than or equal to 0:
				clear {UlsterComplimentaryArmourCooldown.%loop-player%}
			
#bed time fix
on bed leave:
	if time in player's world is 6:00 am:
		set {hoursOfDay} to 0
		set {toddRNG} to true
		loop all players:
			set {radiantQuestsRNG.%loop-player%} to true
			clear {bleedoutMobKillRevive.%loop-player%::Target}
			if {traits.%loop-player%::Hoarder} is set:
				add (loop-player's money * 0.1) to the player's money
				send "<gold>Hoarded %(loop-player's money * 0.1)% gold." to loop-player
			loop {lootChests.%loop-player%::*}:
				subtract 1 from {lootChests.%loop-player%::%loop-index%}
				if {lootChests.%loop-player%::%loop-index%} is less than or equal to 0:
					clear {lootChests.%loop-player%::%loop-index%}
					clear {lootChestItems.%loop-player%.%loop-index%::*}
			loop {wanderingNPCList.%loop-player%::*}:
				send "%loop-index%" to loop-player
				destroy {NPCsFor.%loop-player%::%loop-index%}
				clear {NPCsFor.%loop-player%::%loop-index%}
				clear {wanderingNPCList.%loop-player%::%loop-index%}
		broadcast "<orange>A new day has begun..."
		broadcast "<light yellow>The Quest Boards have been updated!"
		
every minecraft hour:
	if {hoursOfDay} is 24:
		set {toddRNG} to true
		loop all players:
			set {radiantQuestsRNG.%loop-player%} to true
			clear {bleedoutMobKillRevive.%loop-player%::Target}
			loop {lootChests.%loop-player%::*}:
				subtract 1 from {lootChests.%loop-player%::%loop-index%}
				if {lootChests.%loop-player%::%loop-index%} is less than or equal to 0:
					clear {lootChests.%loop-player%::%loop-index%}
					clear {lootChestItems.%loop-player%.%loop-index%::*}
			loop {wanderingNPCList.%loop-player%::*}:
				send "%loop-index%" to loop-player
				destroy {NPCsFor.%loop-player%::%loop-index%}
				clear {NPCsFor.%loop-player%::%loop-index%}
				clear {wanderingNPCList.%loop-player%::%loop-index%}
		broadcast "<orange>A new day has begun..."
		broadcast "<light yellow>The Quest Boards have been updated!"
		clear {hoursOfDay}
	else:
		add 1 to {hoursOfDay}

#Number = Reward List ID
#Text = Associated Quest	
command /QuestRewardFreePick <number> <text>:
	trigger:
		if arg 2 is "Creeping Shadows":
			if arg 1 is 0:
				open chest inventory with 1 row named "<gold>Select a reward!" for the player
				set slot 0 of the player's current inventory to 1 iron sword of sharpness 4, unbreaking 3 named "<light blue><bold>Alastor's Silver Sword+" with lore "<light red><bold>Slot A - Flashing Blade", "<light blue><bold>Slot B - Desperation", "<light yellow><bold>Slot C - DEF Smoke", "<light green><bold>Assist - Taunt", "<light purple><bold>Special - Aether", "<light green><bold>Refined: Slaying", "<white>A special blade forged at Alastor's request.", "<white>It's best wielded by highly skilled swordmasters."
				set slot 1 of the player's current inventory to 1 iron axe of sharpness 4, unbreaking 3 named "<light blue><bold>Alastor's Silver Axe+" with lore "<light red><bold>Slot A - Armour Smasher", "<light blue><bold>Slot B - Seal Resistance", "<light yellow><bold>Slot C - Bold Fighter", "<light green><bold>Assist - Smite", "<light purple><bold>Special - Moonbow", "<purple><bold>Refined: Crushing", "<white>A special axe forged at Alastor's request.", "<white>It's perfect for cutting down armoured foes."
				set slot 2 of the player's current inventory to 1 iron shovel of sharpness 4, unbreaking 3 named "<light blue><bold>Alastor's Silver Lance+" with lore "<light red><bold>Slot A - Distant Counter", "<light blue><bold>Slot B - Riposte", "<light yellow><bold>Slot C - Fear", "<light green><bold>Assist - Stinger", "<light purple><bold>Special - Sol", "<red><bold>Refined: Reinforced", "<white>A special lance forged at Alastor's request.", "<white>It excells at counter-attacking foes."
				set slot 3 of the player's current inventory to 1 bow of power 3, unbreaking 3 named "<light blue><bold>Alastor's Silver Bow+" with lore "<light red><bold>Slot A - Broad Shot", "<light blue><bold>Slot B - Desperation", "<light yellow><bold>Slot C - Savage Blow", "<light green><bold>Assist - Shove", "<light purple><bold>Special - Growing Light", "<yellow><bold>Refined: Koenig", "<white>A special bow forged at Alastor's request.", "<white>It makes mincemeat out of crowds."
				set slot 4 of the player's current inventory to 1 blaze rod named "<yellow><bold>Magic Wand" with lore "<light red><bold>Slot A - Warding Blow", "<light blue><bold>Slot B - Seal DEF/MAG", "<light yellow><bold>Slot C - Pressure MAG", "<light green><bold>Assist - Empty", "<light purple><bold>Special - Glacies", "<light green><bold>Refined: Slaying", "<light red>Spell 1 - Elfire", "<light blue>Spell 2 - Thoron", "<white>A special wand enchanted by Cinder.", "<white>The powerful fire magic is sure to fell any foe."
				set slot 5 of the player's current inventory to 1 diamond hoe named "<yellow><bold>Hammerne" with lore "<white>A special healing staff that can repair weapons.", "<white>This staff will repair the held weapon of anyone it heals.", "<white>It tends to break easily as a result."
			else if arg 1 is 1:
				open chest inventory with 1 row named "<gold>Select a weapon rank to increase!" for the player
				set slot 0 of the player's current inventory to 1 diamond sword named "<bold>Increase Swords Rank" with lore "<white>Raises your Swords weapon rank to B.", "<white>If you already have a B rank or higher, increases weapon rank by 2,500 points."
				set slot 1 of the player's current inventory to 1 diamond axe named "<bold>Increase Axes Rank" with lore "<white>Raises your Axes weapon rank to B.", "<white>If you already have a B rank or higher, increases weapon rank by 2,500 points."
				set slot 2 of the player's current inventory to 1 diamond shovel named "<bold>Increase Lances Rank" with lore "<white>Raises your Lances weapon rank to B.", "<white>If you already have a B rank or higher, increases weapon rank by 2,500 points."
				set slot 3 of the player's current inventory to 1 bow named "<bold>Increase Bows Rank" with lore "<white>Raises your Bows weapon rank to B.", "<white>If you already have a B rank or higher, increases weapon rank by 2,500 points."
				set slot 4 of the player's current inventory to 1 blaze rod named "<bold>Increase Magic Rank" with lore "<white>Raises your Magic weapon rank to B.", "<white>If you already have a B rank or higher, increases weapon rank by 2,500 points."
				set slot 5 of the player's current inventory to 1 diamond hoe named "<bold>Increase Staves Rank" with lore "<white>Raises your Staves weapon rank to B.", "<white>If you already have a B rank or higher, increases weapon rank by 150 points."

on inventory click:
	#Reward Selection
	if the name of the player's current inventory is "<gold>Select a reward!":
		#Alastor's Select Weapons
		if the name of the clicked item contains "<light blue><bold>Alastor's":
			cancel event
			give clicked item to the player
			close the player's inventory
		else if the name of the clicked item contains "Magic Wand":
			cancel event
			give clicked item to the player
			close the player's inventory
			
#Quest Logic goes here