#Workbench - A World Editing Tool

command /workbench <text>:
	trigger:
		if arg 1 is "help":
			send "<gold>-=Workbench Help=-"
			send "<light green>delblock<reset> - Delete a particular block within a given radius."
			send "<light green>replaceblock<reset> - Replaces one block for another within a given radius."
			send "<light green>demoss<reset> - Changes out mossy blocks for their non-moss counterparts."
			send "<light green>ruinify<reset> - Changes blocks to create ruin-like structures."
			send "<light red>cancel<reset> - Aborts any currently running operations."
		else if arg 1 is "cancel":
			send "<light red>Aborting all running operations."
			set {wbCancelOperation.%player%} to true

command /delblock <item> <number>:
	trigger:
		set {_rad} to arg 2
		set {_loc} to player's location
		send "<light green>Performing task..."
		loop all blocks in radius {_rad} of {_loc}:
			if loop-block is arg 1:
				set loop-block to air
				add 1 to {_blocks}
				wait 1 tick
				send "<light green>Working..."
			else:
				send "<light blue>Working..."
			if {wbCancelOperation.%player%} is true:
				clear {wbCancelOperation.%player%}
				send "<light red>Operation cancelled."
				exit 1 loop
		send "<gold>%{_blocks}% %arg 1%s were removed."
		
command /replaceblock <item> <item> <number>:
	trigger:
		set {_rad} to arg 3
		set {_loc} to player's location
		send "<light green>Performing task..."
		loop all blocks in radius {_rad} of {_loc}:
			if loop-block is arg 1:
				set loop-block to arg 2
				add 1 to {_blocks}
				wait 1 tick
				send "<light green>Working..."
			else:
				send "<light blue>Working..."
			if {wbCancelOperation.%player%} is true:
				clear {wbCancelOperation.%player%}
				send "<light red>Operation cancelled."
				exit 1 loop
		send "<gold>%{_blocks}% blocks replaced."
	
command /demoss <number>:
	trigger:
		set {_rad} to arg 1
		set {_loc} to player's location
		send "<light green>Demossing..."
		loop all blocks in radius {_rad} of {_loc}:
			if loop-block is mossy stone brick:
				set loop-block to stone brick
				add 1 to {_blocks}
				send "<light green>Working.."
			else if loop-block is mossy cobblestone:
				set loop-block to cobblestone
				add 1 to {_blocks}
				send "<light green>Working..."
			else:
				send "<light blue>Working..."
			if {wbCancelOperation.%player%} is true:
				clear {wbCancelOperation.%player%}
				send "<light red>Operation cancelled."
				exit 1 loop
			wait 1 tick
		send "<gold>%{_blocks}% blocks demossed."
		
command /ruinify <number>:
	trigger:
		set {_rad} to arg 1
		set {_loc} to player's location
		send "<light green>Generating ruins..."
		loop all blocks in radius {_rad} of {_loc}:
			if loop-block is not air:
				wait 1 tick
			if loop-block is any stone brick:
				chance of 30%:
					set loop-block to mossy stone brick
					chance of 50%:
						set loop-block to cracked stone brick
					add 1 to {_blocks}
					send "<light green>Working.."
			else if loop-block is any stone:
				chance of 15%:
					set loop-block to cobblestone
					chance of 15%:
						set loop-block to dirt
					add 1 to {_blocks}
					send "<light green>Working.."
			else:
				send "<light blue>Working..."
			if {wbCancelOperation.%player%} is true:
				clear {wbCancelOperation.%player%}
				send "<light red>Operation cancelled."
				exit 1 loop
		send "<gold>%{_blocks}% blocks modified."
	
command /replacedioritewithandesite <number>:
	trigger:
		set {_rad} to arg 1
		set {_loc} to player's location
		loop all blocks in radius {_rad} of {_loc}:
			if loop-block is smooth diorite:
				set loop-block to smooth andesite
				send "<light green>Working..."
			else:
				send "<light blue>Working..."
			wait 1 tick
		send "<gold>Finished."