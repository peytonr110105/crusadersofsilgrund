#Wand
on load:
	register new shapeless recipe for blaze rod named "<yellow><bold>Magic Wand" using blaze powder, stick, air, air, air, air, air, air, air
	
on join:
	clear {spellcooldown.%player%}

command /setspell <number> <text>:
	description: Attach a spell to a wand.
	usage: /setspell (Spell name to equip)
	executable by: players
	aliases: /spell
	trigger:
		if the name of the player's tool is "<yellow><bold>Magic Wand":
			if {%arg 2%.%player%} is 1:
				if arg 1 is 1:
					set the 7th line of the lore of the player's tool to "Spell 1: %arg 2%"
				else if arg 1 is 2:
					set the 8th line of the lore of the player's tool to "Spell 2: %arg 2%"
				send "<light green>Imbued the spell %arg 2% into this wand."
			else:
				send "<light red>You don't know this spell, or you mis-typed it. Try again."
		else:
			send "<light red>You can only equip spells to magic wands."

command /spells:
	description: See all the spells you've learned!
	usage: /spells
	executable by: players
	aliases: /listspells
	trigger:
		if {Ember.%player%} is 1:
			send "<bold>Ember: <reset>A basic flame spell. Low might and ignites enemies on contact."
		if {Frost.%player%} is 1:
			send "<bold>Frost: <reset>A basic ice spell. Poor might and slows enemies on contact."
		if {Spark.%player%} is 1:
			send "<bold>Spark: <reset>A basic electric spell. Low might, but a solid choice for the budget mage."
		if {Gust.%player%} is 1:
			send "<bold>Gust: <reset>A basic wind spell. Low might and pushes enemies backwards on contact."
		if {Fire.%player%} is 1:
			send "<bold>Fire: <reset>A standard flame spell. Average might and ignites enemies and a small patch of ground on contact."
		if {Hail.%player%} is 1:
			send "<bold>Hail: <reset>A standard ice spell. Low might and slows enemies on contact."
		if {Thunder.%player%} is 1:
			send "<bold>Thunder: <reset>A standard electric spell. Above average might."
		if {Wind.%player%} is 1:
			send "<bold>Wind: <reset>A standard wind spell. Low might but pushes enemies up and away on contact."
		if {Elfire.%player%} is 1:
			send "<bold>Elfire: <reset>An advanced flame spell. Above average might that ignities enemies and the ground on contact."
		if {Aurora.%player%} is 1:
			send "<gold><bold>Aurora: <reset>An advanced spell. Tremendous might."
		if {Nosferatu.%player%} is 1:
			send "<purple><bold>Nosferatu: <reset>Advanced dark magic. Low might, but saps health from enemies."
		if {Stone.%player%} is 1:
			send "<bold>Stone: <reset>Advanced dark magic. Poor might, but turns enemies to stone for a short time."
		if {Light.%player%} is 1:
			send "<yellow><bold>Light: <reset>Advanced magic. Average might, but effective against monsters."
		if {Bolganone.%player%} is 1:
			send "<red><bold>Bolganone: <reset>Advanced fire magic. High might that ignites enemies and a large swath of ground in flames on contact."
		if {Spellblade.%player%} is 1:
			send "<green><bold>Spellblade: <reset>Grandmaster level magic. Adds half of the total stat buffs on your character to damage dealt."
		if {Forseti.%player%} is 1:
			send "<gold><bold>Forseti: <reset>Grandmaster level wind magic. If caster is at full health, automatically makes a follow-up attack."
		if {Naga.%player%} is 1:
			send "<gold><bold>Naga: <reset>Grandmaster level light magic. Raises all stats by +10 while equipped. Effective against dragons and end-type monsters."
		if {Loptous.%player%} is 1:
			send "<purple><bold>Loptous: <reset>Grandmaster level dark magic. Weapons and magic effective against dragons are effective against Loptous casters. Reduces incoming damage by 50%% while equipped."
		if {Rescue.%player%} is 1:
			send "<bold>Rescue: <reset>Advanced level magic. Nullifies spell damage and warps the target to the caster on-hit."
		if {Warp.%player%} is 1:
			send "<bold>Slipgate: <reset>Advanced level magic. Nullifies spell damage and warps the caster to the target."
		if {Silence.%player%} is 1:
			send "<bold>Silence: <reset>Standard level magic. Poor might, but inflicts Weakness 2 to the target on-hit."
		if {Thief.%player%} is 1:
			send "<gold><bold>Thief: <reset>Grandmaster level magic. Very low might, but can cause the target to drop their equipped weapon on-hit."

#Check Slots Function Imported From perks.sk			
function checkSlots(PLR: player , skill: text) :: number:
	if {skillslot1.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot2.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot3.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot4.%{_PLR}%} contains "%{_skill}%":
		return 1
	else if {skillslot5.%{_PLR}%} contains "%{_skill}%":
		return 1
	else:
		return 0
	
#Magically-Inclined Class Check Function
function checkClass(PLR: player) :: number:
	if {class.%{_PLR}%} is "Mage":
		return 1
	else if {class.%{_PLR}%} is "Sage":
		return 1
	else if {class.%{_PLR}%} is "Sorcerer":
		return 1
	else if {class.%{_PLR}%} is "Archwizard":
		return 1
	else if {class.%{_PLR}%} is "Strategist":
		return 1
	else if {class.%{_PLR}%} is "Tactician":
		return 1
	else if {class.%{_PLR}%} is "Grandmaster":
		return 1
	else:
		return 0
		
#Check Element Type On Spells Function
function checkElement(TYPE: number) :: number:
	if {_TYPE} is 1:
		return 1
	else if {_TYPE} is 2:
		return 2
	else if {_TYPE} is 3:
		return 3
	else if {_TYPE} is 4:
		return 4
	else if {_TYPE} is 5:
		return 1
	else if {_TYPE} is 6:
		return 2
	else if {_TYPE} is 7:
		return 3
	else if {_TYPE} is 8:
		return 4
	else if {_TYPE} is 9:
		return 1
	else if {_TYPE} is 10:
		return 2
	else if {_TYPE} is 11:
		return 3
	else if {_TYPE} is 12:
		return 4
	else if {_TYPE} is 13:
		return 1
	else if {_TYPE} is 14:
		return 2
	else:
		return 0

on tool change:
	if the name of the player's tool is "<yellow><bold>Magic Wand":
		set {_checkClass} to checkClass(player)
		if {_checkClass} is 0:
			send "<red>Only mages may wield wands."
			cancel event
		else if {startingspells.%player%} is not 1:
			play sound "entity.player.levelup" with volume 0.5 and pitch 0.5 at player for player
			play 20 (smoke with speed 0) at the player
			send title "<bold>---===Weapon Rank Up!===---" with subtitle "<bold>Magic increased to E rank." to player for 2 seconds with fade in 0.25 seconds and fade out 0.25 seconds
			set {weapongrade.%player%::magic} to "E"
			make player execute command "/grantskill 0 Ember"
			make player execute command "/grantskill 0 Frost"
			make player execute command "/grantskill 0 Spark"
			make player execute command "/grantskill 0 Gust"
			set {startingspells.%player%} to 1
			
on rightclick with book:
	set {_checkClass} to checkClass(player)
	if the 7th line of the lore of the player's tool contains "Casts":
		if {_checkClass} is 1:
			make the player shoot an arrow with speed 2
			if the 7th line of the lore of the player's tool contains "Dire Thunder":
				set metadata value "SPELL" of the last shot projectile to 1
				set metadata value "TomeEff" of the last shot projectile to "Dire Thunder"
			else if the 7th line of the lore of the player's tool contains "Fire":
				set metadata value "SPELL" of the last shot projectile to 1
				set metadata value "TomeEff" of the last shot projectile to "Fire"
			else if the 7th line of the lore of the player's tool contains "Elfire":
				set metadata value "SPELL" of the last shot projectile to 1
				set metadata value "TomeEff" of the last shot projectile to "Elfire"
			else if the 7th line of the lore of the player's tool contains "Elthunder":
				set metadata value "SPELL" of the last shot projectile to 1
				set metadata value "TomeEff" of the last shot projectile to "Elthunder"
			else if the 7th line of the lore of the player's tool contains "Excalibur":
				set metadata value "SPELL" of the last shot projectile to 1
				set metadata value "TomeEff" of the last shot projectile to "Excalibur"
			else if the 7th line of the lore of the player's tool contains "Aura":
				set metadata value "SPELL" of the last shot projectile to 1
				set metadata value "TomeEff" of the last shot projectile to "Aura"
			set {_dur} to the 9th line of the lore of the player's tool parsed as integer
			subtract 1 from {_dur}
			if {_dur} is less than 1:
				delete the player's tool
				send "<light red>Your tome broke!"
				set {_meta} to metadata value "TomeEff" of the last shot projectile
				play sound "entity.armorstand.break" with volume 1 and pitch 1 at the player for the player
				if {_meta} is "Dire Thunder":
					give 1 book named "<light blue>Broken Tome" with lore "<white>An old, tattered tome sapped of magic.", "<white>The spell Dire Thunder used to be present." to the player
				else:
					give 1 book named "<light blue>Broken Tome" with lore "<white>The tattered remains of the %{_meta}% tome." to the player
			else:
				set the 9th line of the lore of the player's tool to "%{_dur}%"
		else:
			send "<light red>You need to be a magic user to use tomes!"
			
on rightclick with blaze rod:
	#set {_checkClass} to checkClass(player)
	set {_checkClass} to 1
	if the name of the player's tool is "<yellow><bold>Magic Wand":
		if {_checkClass} is 1:
			if {spellcooldown.%player%} is not set:
				make the player shoot an arrow with speed 3
				set metadata value "SPELL" of the last shot projectile to 1
				if 7th line of the lore of the player's tool contains "Ember":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 1
					else:
						set {_spelleffect1} to 1
				if 7th line of the lore of the player's tool contains "Spark":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 2
					else:
						set {_spelleffect1} to 2
				if 7th line of the lore of the player's tool contains "Frost":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 3
					else:
						set {_spelleffect1} to 3
				if 7th line of the lore of the player's tool contains "Gust":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 4
					else:
						set {_spelleffect1} to 4
				if 7th line of the lore of the player's tool contains "Fire":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 5
					else:
						set {_spelleffect1} to 5
				if 7th line of the lore of the player's tool contains "Thunder":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 6
					else:
						set {_spelleffect1} to 6
				if 7th line of the lore of the player's tool contains "Hail":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 7
					else:
						set {_spelleffect1} to 7
				if 7th line of the lore of the player's tool contains "Wind":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 8
					else:
						set {_spelleffect1} to 8
				if 7th line of the lore of the player's tool contains "Elfire":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 9
					else:
						set {_spelleffect1} to 9
				if 7th line of the lore of the player's tool contains "Thoron":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 10
					else:
						set {_spelleffect1} to 10
				if 7th line of the lore of the player's tool contains "Blizzard":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 11
					else:
						set {_spelleffect1} to 11
				if 7th line of the lore of the player's tool contains "Tornado":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 12
					else:
						set {_spelleffect1} to 12
				if 7th line of the lore of the player's tool contains "Bolganone":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 13
					else:
						set {_spelleffect1} to 13
				if 7th line of the lore of the player's tool contains "Aurora":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 14
					else:
						set {_spelleffect1} to 14
				if 7th line of the lore of the player's tool contains "Nosferatu":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 15
					else:
						set {_spelleffect1} to 15
				if 7th line of the lore of the player's tool contains "Light":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 16
					else:
						set {_spelleffect1} to 16
				if 7th line of the lore of the player's tool contains "Spellblade":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 17
					else:
						set {_spelleffect1} to 17
				if 7th line of the lore of the player's tool contains "Forseti":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 18
					else:
						set {_spelleffect1} to 18
				if 7th line of the lore of the player's tool contains "Naga":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 19
					else:
						set {_spelleffect1} to 19
				if 7th line of the lore of the player's tool contains "Loptous":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 20
					else:
						set {_spelleffect1} to 20
				if 7th line of the lore of the player's tool contains "Stone":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 21
					else:
						set {_spelleffect1} to 21
				if 7th line of the lore of the player's tool contains "Rescue":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 22
					else:
						set {_spelleffect1} to 22
				if 7th line of the lore of the player's tool contains "Slipgate":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 23
					else:
						set {_spelleffect1} to 23
				if 7th line of the lore of the player's tool contains "Silence":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 24
					else:
						set {_spelleffect1} to 24
				if 7th line of the lore of the player's tool contains "Thief":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 25
					else:
						set {_spelleffect1} to 25
				if 8th line of the lore of the player's tool contains "Ember":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 1
					else:
						set {_spelleffect1} to 1
				if 8th line of the lore of the player's tool contains "Spark":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 2
					else:
						set {_spelleffect1} to 2
				if 8th line of the lore of the player's tool contains "Frost":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 3
					else:
						set {_spelleffect1} to 3
				if 8th line of the lore of the player's tool contains "Gust":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 4
					else:
						set {_spelleffect1} to 4
				if 8th line of the lore of the player's tool contains "Fire":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 5
					else:
						set {_spelleffect1} to 5
				if 8th line of the lore of the player's tool contains "Thunder":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 6
					else:
						set {_spelleffect1} to 6
				if 8th line of the lore of the player's tool contains "Hail":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 7
					else:
						set {_spelleffect1} to 7
				if 8th line of the lore of the player's tool contains "Wind":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 8
					else:
						set {_spelleffect1} to 8
				if 8th line of the lore of the player's tool contains "Elfire":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 9
					else:
						set {_spelleffect1} to 9
				if 8th line of the lore of the player's tool contains "Thoron":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 10
					else:
						set {_spelleffect1} to 10
				if 8th line of the lore of the player's tool contains "Blizzard":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 11
					else:
						set {_spelleffect1} to 11
				if 8th line of the lore of the player's tool contains "Tornado":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 12
					else:
						set {_spelleffect1} to 12
				if 8th line of the lore of the player's tool contains "Bolganone":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 13
					else:
						set {_spelleffect1} to 13
				if 8th line of the lore of the player's tool contains "Aurora":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 14
					else:
						set {_spelleffect1} to 14
				if 8th line of the lore of the player's tool contains "Nosferatu":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 15
					else:
						set {_spelleffect1} to 15
				if 8th line of the lore of the player's tool contains "Light":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 16
					else:
						set {_spelleffect1} to 16
				if 8th line of the lore of the player's tool contains "Spellblade":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 17
					else:
						set {_spelleffect1} to 17
				if 8th line of the lore of the player's tool contains "Forseti":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 18
					else:
						set {_spelleffect1} to 18
				if 8th line of the lore of the player's tool contains "Naga":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 19
					else:
						set {_spelleffect1} to 19
				if 8th line of the lore of the player's tool contains "Loptous":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 20
					else:
						set {_spelleffect1} to 20
				if 8th line of the lore of the player's tool contains "Stone":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 21
					else:
						set {_spelleffect1} to 21
				if 8th line of the lore of the player's tool contains "Rescue":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 22
					else:
						set {_spelleffect1} to 22
				if 8th line of the lore of the player's tool contains "Slipgate":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 23
					else:
						set {_spelleffect1} to 23
				if 8th line of the lore of the player's tool contains "Silence":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 24
					else:
						set {_spelleffect1} to 24
				if 8th line of the lore of the player's tool contains "Thief":
					if {_spelleffect1} is set:
						if {_spelleffect2} is not set:
							set {_spelleffect2} to 25
					else:
						set {_spelleffect1} to 25
				set metadata value "SpellEffect1" of the last shot projectile to {_spelleffect1}
				set metadata value "SpellEffect2" of the last shot projectile to {_spelleffect2}
			else:
				send "<red><bold>You must wait for your wand to recharge!"
			
#1 - Flame
#2 - Electric
#3 - Frost
#4 - Wind
			
on projectile hit:
	set {_isSpell} to metadata value "SPELL" of projectile
	if {_isSpell} is 1:
		set {_meta1} to metadata value "SpellEffect1" of projectile
		set {_meta2} to metadata value "SpellEffect2" of projectile
		set {_element1} to checkElement({_meta1})
		set {_element2} to checkElement({_meta2})
		#Explosion from flame and wind spells
		if {_element1} is 1:
			if {_element2} is 4:
				create a safe explosion of force 1 at the projectile
		else if {_element2} is 1:
			if {_element1} is 4:
				create a safe explosion of force 1 at the projectile
		#Create water from fire and frost spells
		if {_element1} is 1:
			if {_element2} is 3:
				loop blocks in radius 1 of the projectile:
					loop-block is air
					set loop-block to water
		else if {_element2} is 3:
			if {_element1} is 1:
				loop blocks in radius 1 of the projectile:
					loop-block is air
					set loop-block to water
		#Double flame spells create fire
		if {_element1} is 1:
			if {_element2} is 1:
				loop blocks in radius 1 of the projectile:
					loop-block is air
					set loop-block to fire
		else if {_element2} is 1:
			if {_element1} is 1:
				loop blocks in radius 1 of the projectile:
					loop-block is air
					set loop-block to lava
		#Double frost spells freeze water
		if {_element1} is 3:
			if {_element2} is 3:
				loop blocks in radius 2 of the projectile:
					loop-block is water
					set loop-block to ice
		else if {_element2} is 3:
			if {_element1} is 3:
				loop blocks in radius 2 of the projectile:
					loop-block is water
					set loop-block to ice
		#Double wind spells drain liquid
		if {_element1} is 4:
			if {_element2} is 4:
				loop blocks in radius 3 of the projectile:
					loop-block is water
					set loop-block to air
					loop-block is lava
					set loop-block to air
		else if {_element2} is 4:
			if {_element1} is 4:
				loop blocks in radius 3 of the projectile:
					loop-block is water
					set loop-block to air
					loop-block is lava
					set loop-block to air
		#Light creates glowstone
		if {_meta1} is 16:
			play 40 (glowstone break with speed 0) at the projectile
		else if {_meta2} is 16:
			play 40 (glowstone break with speed 0) at the projectile
		wait 1 tick
		delete projectile
			